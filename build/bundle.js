var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={240:(t,e,n)=>{n.r(e),n.d(e,{init:()=>m,playPause:()=>g,reconfigure:()=>_,step:()=>x});var o=function(){function t(t){this._renderer=t,this._agents=[]}return t.prototype.init=function(t){this._agents=t.agents},t.prototype.update=function(t){this._agents.forEach((function(e){e.update(t)}))},t.prototype.draw=function(){var t=this;this._renderer.clear(),this._agents.forEach((function(e){t._renderer.drawAgent(e)}))},t}(),i=function(){function t(t){this._context=t.getContext("2d")}return t.prototype.clear=function(){this._context.fillStyle="white",this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height)},t.prototype.drawAgent=function(t){var e=t.getPosition(),n=t.getDirection();if(this._context.beginPath(),this._context.arc(e.x,e.y,t.Radius,0,2*Math.PI),0!==n.dx||0!==n.dy){var o=Math.sqrt(Math.pow(n.dx,2)+Math.pow(n.dy,2));this._context.moveTo(e.x,e.y),this._context.lineTo(e.x+t.Radius*n.dx/o,e.y+t.Radius*n.dy/o)}this._context.stroke()},t}(),r=function(){function t(t,e,n){this._position=t,this._goalPosition=e,this.Radius=n,this._direction={dx:0,dy:0}}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.update=function(t){var e={x:this._goalPosition.x-this._position.x,y:this._goalPosition.y-this._position.y},n=Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2));n>t/16?(this._direction.dx=e.x/n,this._direction.dy=e.y/n,this._position.x+=t/16*this._direction.dx,this._position.y+=t/16*this._direction.dy):(this._position.x=this._goalPosition.x,this._position.y=this._goalPosition.y)},t}(),a=function(){function t(){}return t.RandomToRandom=function(t,e,n,o){for(var i=[],r=0;r<t;r++){var a=o({x:e*Math.random(),y:n*Math.random()},{x:e*Math.random(),y:n*Math.random()},20);i.push(a)}return{agents:i}},t.RandomToLine=function(t,e,n,o){for(var i=[],r=0;r<t;r++){var a=o({x:e*Math.random(),y:n*Math.random()},{x:(r+1)/(t+1)*e,y:n/2},20);i.push(a)}return{agents:i}},t.CircleToCircle=function(t,e,n,o){for(var i=[],r=e/2,a=n/2,s=n/2-25,d=0;d<t;d++){var c=2*Math.PI*d/t,u=o({x:r+s*Math.cos(c),y:a+s*Math.sin(c)},{x:r+s*Math.cos(c+Math.PI),y:a+s*Math.sin(c+Math.PI)},20);i.push(u)}return{agents:i}},t}(),s=document.getElementById("config"),d=document.getElementById("agentType"),c=document.getElementById("numberOfAgents"),u=document.getElementById("canvas"),h=document.getElementById("framerate"),p=document.getElementById("playButton"),l=document.getElementById("stepButton"),y=new o(new i(u)),f=!1;function m(){this.reconfigure();var t=0,e=0,n=0;window.requestAnimationFrame((function o(i){var r=i-t;t=i,f&&y.update(r),y.draw(),n++,i-e>=250&&(h.textContent="FPS: "+(1e3*n/(i-e)).toFixed(1),n=0,e=i),window.requestAnimationFrame(o)}))}function g(){(f=!f)?(p.textContent="Pause",l.disabled=!0):(p.textContent="Play",l.disabled=!1)}function x(){y.update(1e3/60)}function _(){var t;f&&this.playPause();var e,n=s.value,o=d.value,i=null!==(t=parseInt(c.value))&&void 0!==t?t:0;switch(o){case"BasicAgent":e=function(t,e,n){return new r(t,e,n)};break;default:throw new Error("Agent not implemented")}switch(n){case"RandomToRandom":y.init(a.RandomToRandom(i,u.width,u.height,e));break;case"RandomToLine":y.init(a.RandomToLine(i,u.width,u.height,e));break;case"CircleToCircle":y.init(a.CircleToCircle(i,u.width,u.height,e));break;default:throw new Error("Configuration not implemented")}}}},e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}return n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n(240)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,