var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={438:(t,i,o)=>{o.r(i),o.d(i,{init:()=>f,playPause:()=>x,reconfigure:()=>v,step:()=>m});var e=function(){function t(t){this._renderer=t,this._agents=[]}return t.prototype.init=function(t){this._agents=t.agents},t.prototype.update=function(t){var i=this;this._agents.forEach((function(o){o.update(t,i._agents)}))},t.prototype.draw=function(){var t=this;this._renderer.clear(),this._agents.forEach((function(i){t._renderer.drawAgent(i)}))},t}(),n=function(){function t(t){this._context=t.getContext("2d")}return t.prototype.clear=function(){this._context.fillStyle="white",this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height)},t.prototype.drawAgent=function(t){var i=t.getPosition(),o=t.getDirection();if(this._context.beginPath(),this._context.arc(i.x,i.y,t.Radius,0,2*Math.PI),0!==o.dx||0!==o.dy){var e=Math.sqrt(Math.pow(o.dx,2)+Math.pow(o.dy,2));this._context.moveTo(i.x,i.y),this._context.lineTo(i.x+t.Radius*o.dx/e,i.y+t.Radius*o.dy/e)}this._context.stroke()},t}(),r=function(){function t(t,i,o,e){this.Id=t,this._position=i,this._goalPosition=o,this.Radius=e,this._direction={dx:0,dy:0},this._goalReached=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getGoalReached=function(){return this._goalReached},t.prototype.update=function(t,i){if(!this._goalReached){var o={x:this._goalPosition.x-this._position.x,y:this._goalPosition.y-this._position.y},e=Math.sqrt(Math.pow(o.x,2)+Math.pow(o.y,2));e>60*t/1e3?(this._direction.dx=o.x/e,this._direction.dy=o.y/e,this._position.x+=60*t/1e3*this._direction.dx,this._position.y+=60*t/1e3*this._direction.dy):(this._position.x=this._goalPosition.x,this._position.y=this._goalPosition.y,this._goalReached=!0)}},t}(),a=function(){function t(t,i,o,e){this.Id=t,this._position=i,this._goalPosition=o,this.Radius=e,this._direction={dx:0,dy:0},this._goalReached=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getGoalReached=function(){return this._goalReached},t.prototype.update=function(t,i){var o=this;if(!this._goalReached){var e={x:this._goalPosition.x-this._position.x,y:this._goalPosition.y-this._position.y},n=Math.sqrt(Math.pow(e.x,2)+Math.pow(e.y,2));if(n>60*t/1e3){this._direction.dx=e.x/n,this._direction.dy=e.y/n;var r=this._position.x+60*t/1e3*this._direction.dx,a=this._position.y+60*t/1e3*this._direction.dy,s=!1;i.forEach((function(t){t.Id!=o.Id&&o.collides(t,{x:r,y:a})&&(s=!0)})),s||(this._position={x:r,y:a})}else this._position.x=this._goalPosition.x,this._position.y=this._goalPosition.y,this._goalReached=!0}},t.prototype.collides=function(t,i){var o=i.x,e=i.y,n=this.Radius,r=t.getPosition().x,a=t.getPosition().y,s=t.Radius;return Math.sqrt(Math.pow(o-r,2)+Math.pow(e-a,2))<n+s},t}(),s=function(){function t(){}return t.RandomToRandom=function(t,i,o,e){for(var n=[],r=0;r<t;r++){var a=e(r,{x:i*Math.random(),y:o*Math.random()},{x:i*Math.random(),y:o*Math.random()},20);n.push(a)}return{agents:n}},t.RandomToLine=function(t,i,o,e){for(var n=[],r=0;r<t;r++){var a=e(r,{x:i*Math.random(),y:o*Math.random()},{x:(r+1)/(t+1)*i,y:o/2},20);n.push(a)}return{agents:n}},t.CircleToCircle=function(t,i,o,e){for(var n=[],r=i/2,a=o/2,s=o/2-25,h=0;h<t;h++){var d=2*Math.PI*h/t,c=e(h,{x:r+s*Math.cos(d),y:a+s*Math.sin(d)},{x:r+s*Math.cos(d+Math.PI),y:a+s*Math.sin(d+Math.PI)},20);n.push(c)}return{agents:n}},t}(),h=document.getElementById("config"),d=document.getElementById("agentType"),c=document.getElementById("numberOfAgents"),u=document.getElementById("canvas"),p=document.getElementById("framerate"),y=document.getElementById("playButton"),l=document.getElementById("stepButton"),_=new e(new n(u)),g=!1;function f(){this.reconfigure();var t=0,i=0,o=0;window.requestAnimationFrame((function e(n){var r=n-t;t=n,g&&_.update(r),_.draw(),o++,n-i>=250&&(p.textContent="FPS: "+(1e3*o/(n-i)).toFixed(1),o=0,i=n),window.requestAnimationFrame(e)}))}function x(){(g=!g)?(y.textContent="Pause",l.disabled=!0):(y.textContent="Play",l.disabled=!1)}function m(){_.update(1e3/60)}function v(){var t;g&&this.playPause();var i,o=h.value,e=d.value,n=null!==(t=parseInt(c.value))&&void 0!==t?t:0;switch(e){case"BasicAgent":i=function(t,i,o,e){return new r(t,i,o,e)};break;case"StopAgent":i=function(t,i,o,e){return new a(t,i,o,e)};break;default:throw new Error("Agent not implemented")}switch(o){case"RandomToRandom":_.init(s.RandomToRandom(n,u.width,u.height,i));break;case"RandomToLine":_.init(s.RandomToLine(n,u.width,u.height,i));break;case"CircleToCircle":_.init(s.CircleToCircle(n,u.width,u.height,i));break;default:throw new Error("Configuration not implemented")}}}},i={};function o(e){if(i[e])return i[e].exports;var n=i[e]={exports:{}};return t[e](n,n.exports,o),n.exports}return o.d=(t,i)=>{for(var e in i)o.o(i,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:i[e]})},o.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o(438)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,