var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={898:(t,e,o)=>{o.r(e),o.d(e,{init:()=>i});var n=function(){function t(t){this._context=t.getContext("2d")}return t.prototype.clear=function(){this._context.fillStyle="white",this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height)},t.prototype.drawAgent=function(t){var e=t.getPosition();this._context.beginPath(),this._context.arc(e.x,e.y,50,0,2*Math.PI),this._context.stroke()},t}(),r=function(){function t(t){this._position=t}return t.prototype.getPosition=function(){return this._position},t}();function i(){var t=document.getElementById("canvas"),e=new n(t);e.clear();var o=new r({x:t.width/2,y:t.height/2});e.drawAgent(o)}}},e={};function o(n){if(e[n])return e[n].exports;var r=e[n]={exports:{}};return t[n](r,r.exports,o),r.exports}return o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o(898)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9SZW5kZXJlcjJELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWFpbi50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJuYW1lcyI6WyJjYW52YXMiLCJ0aGlzIiwiX2NvbnRleHQiLCJnZXRDb250ZXh0IiwiY2xlYXIiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwiZHJhd0FnZW50IiwiYWdlbnQiLCJwb3NpdGlvbiIsImdldFBvc2l0aW9uIiwiYmVnaW5QYXRoIiwiYXJjIiwieCIsInkiLCJNYXRoIiwiUEkiLCJzdHJva2UiLCJfcG9zaXRpb24iLCJpbml0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJlbmRlcmVyIiwiUmVuZGVyZXIyRCIsIkJhc2ljQWdlbnQiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImQiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6InFHQUFBLGlCQUdFLFdBQVlBLEdBQ1ZDLEtBQUtDLFNBQVdGLEVBQU9HLFdBQVcsTUFvQnRDLE9BakJFLFlBQUFDLE1BQUEsV0FDRUgsS0FBS0MsU0FBU0csVUFBWSxRQUMxQkosS0FBS0MsU0FBU0ksU0FDWixFQUNBLEVBQ0FMLEtBQUtDLFNBQVNGLE9BQU9PLE1BQ3JCTixLQUFLQyxTQUFTRixPQUFPUSxTQUl6QixZQUFBQyxVQUFBLFNBQVVDLEdBQ1IsSUFBSUMsRUFBV0QsRUFBTUUsY0FFckJYLEtBQUtDLFNBQVNXLFlBQ2RaLEtBQUtDLFNBQVNZLElBQUlILEVBQVNJLEVBQUdKLEVBQVNLLEVBQUcsR0FBSSxFQUFHLEVBQUlDLEtBQUtDLElBQzFEakIsS0FBS0MsU0FBU2lCLFVBRWxCLEVBeEJBLEdDQUEsYUFHRSxXQUFZUixHQUNWVixLQUFLbUIsVUFBWVQsRUFNckIsT0FIRSxZQUFBQyxZQUFBLFdBQ0UsT0FBT1gsS0FBS21CLFdBRWhCLEVBVkEsR0NHTyxTQUFTQyxJQUNkLElBQUlyQixFQUFTc0IsU0FBU0MsZUFBZSxVQUNqQ0MsRUFBVyxJQUFJQyxFQUFXekIsR0FDOUJ3QixFQUFTcEIsUUFFVCxJQUFJTSxFQUFRLElBQUlnQixFQUFXLENBQUVYLEVBQUdmLEVBQU9PLE1BQVEsRUFBR1MsRUFBR2hCLEVBQU9RLE9BQVMsSUFDckVnQixFQUFTZixVQUFVQyxNQ1JqQmlCLEVBQTJCLEdBRy9CLFNBQVNDLEVBQW9CQyxHQUU1QixHQUFHRixFQUF5QkUsR0FDM0IsT0FBT0YsRUFBeUJFLEdBQVVDLFFBRzNDLElBQUlDLEVBQVNKLEVBQXlCRSxHQUFZLENBR2pEQyxRQUFTLElBT1YsT0FIQUUsRUFBb0JILEdBQVVFLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9DRyxFQUFPRCxRQ2pCZixPQ0ZBRixFQUFvQkssRUFBSSxDQUFDSCxFQUFTSSxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hOLEVBQW9CUSxFQUFFRixFQUFZQyxLQUFTUCxFQUFvQlEsRUFBRU4sRUFBU0ssSUFDNUVFLE9BQU9DLGVBQWVSLEVBQVNLLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxNQ0ozRVAsRUFBb0JRLEVBQUksQ0FBQ0ssRUFBS0MsSUFBU0wsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsR0NDakZkLEVBQW9Ca0IsRUFBS2hCLElBQ0gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNYLE9BQU9DLGVBQWVSLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RaLE9BQU9DLGVBQWVSLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLSEZoRHJCLEVBQW9CLE0iLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJlbmRlcmVyMkQgaW1wbGVtZW50cyBJUmVuZGVyZXIge1xyXG4gIF9jb250ZXh0OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQ7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXIoKTogdm9pZCB7XHJcbiAgICB0aGlzLl9jb250ZXh0LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgIHRoaXMuX2NvbnRleHQuZmlsbFJlY3QoXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIHRoaXMuX2NvbnRleHQuY2FudmFzLndpZHRoLFxyXG4gICAgICB0aGlzLl9jb250ZXh0LmNhbnZhcy5oZWlnaHRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBkcmF3QWdlbnQoYWdlbnQ6IElBZ2VudCkge1xyXG4gICAgbGV0IHBvc2l0aW9uID0gYWdlbnQuZ2V0UG9zaXRpb24oKTtcclxuXHJcbiAgICB0aGlzLl9jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5fY29udGV4dC5hcmMocG9zaXRpb24ueCwgcG9zaXRpb24ueSwgNTAsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgIHRoaXMuX2NvbnRleHQuc3Ryb2tlKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBCYXNpY0FnZW50IGltcGxlbWVudHMgSUFnZW50IHtcclxuICBfcG9zaXRpb246IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfTtcclxuXHJcbiAgY29uc3RydWN0b3IocG9zaXRpb246IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSkge1xyXG4gICAgdGhpcy5fcG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICB9XHJcblxyXG4gIGdldFBvc2l0aW9uKCk6IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcG9zaXRpb247XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IFJlbmRlcmVyMkQgfSBmcm9tIFwiLi9SZW5kZXJlcjJEXCI7XHJcbmltcG9ydCB7IEJhc2ljQWdlbnQgfSBmcm9tIFwiLi9CYXNpY0FnZW50XCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcclxuICBsZXQgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgbGV0IHJlbmRlcmVyID0gbmV3IFJlbmRlcmVyMkQoY2FudmFzKTtcclxuICByZW5kZXJlci5jbGVhcigpO1xyXG5cclxuICBsZXQgYWdlbnQgPSBuZXcgQmFzaWNBZ2VudCh7IHg6IGNhbnZhcy53aWR0aCAvIDIsIHk6IGNhbnZhcy5oZWlnaHQgLyAyIH0pO1xyXG4gIHJlbmRlcmVyLmRyYXdBZ2VudChhZ2VudCk7XHJcbn1cclxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBtb2R1bGUgZXhwb3J0cyBtdXN0IGJlIHJldHVybmVkIGZyb20gcnVudGltZSBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG5yZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyg4OTgpO1xuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiXSwic291cmNlUm9vdCI6IiJ9