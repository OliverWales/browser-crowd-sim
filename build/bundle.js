var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={898:(t,e,o)=>{o.r(e),o.d(e,{init:()=>r});var n=function(){function t(t){this._context=t.getContext("2d")}return t.prototype.clear=function(){this._context.fillStyle="white",this._context.fillRect(0,0,this._context.canvas.width,this._context.canvas.height)},t.prototype.drawAgent=function(t){var e=t.getPosition();this._context.beginPath(),this._context.arc(e.x,e.y,50,0,2*Math.PI),this._context.stroke()},t}(),i=function(){function t(t){this._position=t}return t.prototype.getPosition=function(){return this._position},t.prototype.update=function(t){this._position.x+=t/10,this._position.x>500&&(this._position.x=0)},t}();function r(){var t=document.getElementById("canvas"),e=new n(t),o=new i({x:t.width/2,y:t.height/2}),r=0;window.requestAnimationFrame((function t(n){var i=n-r;r=n,o.update(i),e.clear(),e.drawAgent(o),window.requestAnimationFrame(t)}))}}},e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={exports:{}};return t[n](i,i.exports,o),i.exports}return o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o(898)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9SZW5kZXJlcjJELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWFpbi50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJuYW1lcyI6WyJjYW52YXMiLCJ0aGlzIiwiX2NvbnRleHQiLCJnZXRDb250ZXh0IiwiY2xlYXIiLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwiZHJhd0FnZW50IiwiYWdlbnQiLCJwb3NpdGlvbiIsImdldFBvc2l0aW9uIiwiYmVnaW5QYXRoIiwiYXJjIiwieCIsInkiLCJNYXRoIiwiUEkiLCJzdHJva2UiLCJfcG9zaXRpb24iLCJ1cGRhdGUiLCJkZWx0YVQiLCJpbml0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJlbmRlcmVyIiwiUmVuZGVyZXIyRCIsIkJhc2ljQWdlbnQiLCJsYXN0UmVuZGVyIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibG9vcCIsInRpbWVzdGFtcCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZCIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIl0sIm1hcHBpbmdzIjoicUdBR0EsaUJBR0UsV0FBWUEsR0FDVkMsS0FBS0MsU0FBV0YsRUFBT0csV0FBVyxNQW9CdEMsT0FqQkUsWUFBQUMsTUFBQSxXQUNFSCxLQUFLQyxTQUFTRyxVQUFZLFFBQzFCSixLQUFLQyxTQUFTSSxTQUNaLEVBQ0EsRUFDQUwsS0FBS0MsU0FBU0YsT0FBT08sTUFDckJOLEtBQUtDLFNBQVNGLE9BQU9RLFNBSXpCLFlBQUFDLFVBQUEsU0FBVUMsR0FDUixJQUFJQyxFQUFXRCxFQUFNRSxjQUVyQlgsS0FBS0MsU0FBU1csWUFDZFosS0FBS0MsU0FBU1ksSUFBSUgsRUFBU0ksRUFBR0osRUFBU0ssRUFBRyxHQUFJLEVBQUcsRUFBSUMsS0FBS0MsSUFDMURqQixLQUFLQyxTQUFTaUIsVUFFbEIsRUF4QkEsR0NEQSxhQUdFLFdBQVlSLEdBQ1ZWLEtBQUttQixVQUFZVCxFQWFyQixPQVZFLFlBQUFDLFlBQUEsV0FDRSxPQUFPWCxLQUFLbUIsV0FHZCxZQUFBQyxPQUFBLFNBQU9DLEdBQ0xyQixLQUFLbUIsVUFBVUwsR0FBS08sRUFBUyxHQUN6QnJCLEtBQUttQixVQUFVTCxFQUFJLE1BQ3JCZCxLQUFLbUIsVUFBVUwsRUFBSSxJQUd6QixFQWpCQSxHQ0NPLFNBQVNRLElBQ2QsSUFBTXZCLEVBQVN3QixTQUFTQyxlQUFlLFVBQ2pDQyxFQUFXLElBQUlDLEVBQVczQixHQUMxQlUsRUFBUSxJQUFJa0IsRUFBVyxDQUFFYixFQUFHZixFQUFPTyxNQUFRLEVBQUdTLEVBQUdoQixFQUFPUSxPQUFTLElBQ25FcUIsRUFBYSxFQWdCakJDLE9BQU9DLHVCQWRQLFNBQVNDLEVBQUtDLEdBQ1osSUFBSVgsRUFBU1csRUFBWUosRUFDekJBLEVBQWFJLEVBR2J2QixFQUFNVyxPQUFPQyxHQUdiSSxFQUFTdEIsUUFDVHNCLEVBQVNqQixVQUFVQyxHQUVuQm9CLE9BQU9DLHNCQUFzQkMsU0NuQjdCRSxFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsR0FBR0YsRUFBeUJFLEdBQzNCLE9BQU9GLEVBQXlCRSxHQUFVQyxRQUczQyxJQUFJQyxFQUFTSixFQUF5QkUsR0FBWSxDQUdqREMsUUFBUyxJQU9WLE9BSEFFLEVBQW9CSCxHQUFVRSxFQUFRQSxFQUFPRCxRQUFTRixHQUcvQ0csRUFBT0QsUUNqQmYsT0NGQUYsRUFBb0JLLEVBQUksQ0FBQ0gsRUFBU0ksS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYTixFQUFvQlEsRUFBRUYsRUFBWUMsS0FBU1AsRUFBb0JRLEVBQUVOLEVBQVNLLElBQzVFRSxPQUFPQyxlQUFlUixFQUFTSyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VQLEVBQW9CUSxFQUFJLENBQUNLLEVBQUtDLElBQVNMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2pGZCxFQUFvQmtCLEVBQUtoQixJQUNILG9CQUFYaUIsUUFBMEJBLE9BQU9DLGFBQzFDWCxPQUFPQyxlQUFlUixFQUFTaUIsT0FBT0MsWUFBYSxDQUFFQyxNQUFPLFdBRTdEWixPQUFPQyxlQUFlUixFQUFTLGFBQWMsQ0FBRW1CLE9BQU8sS0hGaERyQixFQUFvQixNIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElBZ2VudCB9IGZyb20gXCIuL0lBZ2VudFwiO1xyXG5pbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi9JUmVuZGVyZXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBSZW5kZXJlcjJEIGltcGxlbWVudHMgSVJlbmRlcmVyIHtcclxuICBfY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICB9XHJcblxyXG4gIGNsZWFyKCk6IHZvaWQge1xyXG4gICAgdGhpcy5fY29udGV4dC5maWxsU3R5bGUgPSBcIndoaXRlXCI7XHJcbiAgICB0aGlzLl9jb250ZXh0LmZpbGxSZWN0KFxyXG4gICAgICAwLFxyXG4gICAgICAwLFxyXG4gICAgICB0aGlzLl9jb250ZXh0LmNhbnZhcy53aWR0aCxcclxuICAgICAgdGhpcy5fY29udGV4dC5jYW52YXMuaGVpZ2h0XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgZHJhd0FnZW50KGFnZW50OiBJQWdlbnQpIHtcclxuICAgIGxldCBwb3NpdGlvbiA9IGFnZW50LmdldFBvc2l0aW9uKCk7XHJcblxyXG4gICAgdGhpcy5fY29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgIHRoaXMuX2NvbnRleHQuYXJjKHBvc2l0aW9uLngsIHBvc2l0aW9uLnksIDUwLCAwLCAyICogTWF0aC5QSSk7XHJcbiAgICB0aGlzLl9jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBJQWdlbnQgfSBmcm9tIFwiLi9JQWdlbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCYXNpY0FnZW50IGltcGxlbWVudHMgSUFnZW50IHtcclxuICBwcml2YXRlIF9wb3NpdGlvbjogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9O1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwb3NpdGlvbjogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9KSB7XHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHBvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgZ2V0UG9zaXRpb24oKTogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9IHtcclxuICAgIHJldHVybiB0aGlzLl9wb3NpdGlvbjtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YVQ6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5fcG9zaXRpb24ueCArPSBkZWx0YVQgLyAxMDtcclxuICAgIGlmICh0aGlzLl9wb3NpdGlvbi54ID4gNTAwKSB7XHJcbiAgICAgIHRoaXMuX3Bvc2l0aW9uLnggPSAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBSZW5kZXJlcjJEIH0gZnJvbSBcIi4vUmVuZGVyZXIyRFwiO1xyXG5pbXBvcnQgeyBCYXNpY0FnZW50IH0gZnJvbSBcIi4vQmFzaWNBZ2VudFwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgY29uc3QgcmVuZGVyZXIgPSBuZXcgUmVuZGVyZXIyRChjYW52YXMpO1xyXG4gIGNvbnN0IGFnZW50ID0gbmV3IEJhc2ljQWdlbnQoeyB4OiBjYW52YXMud2lkdGggLyAyLCB5OiBjYW52YXMuaGVpZ2h0IC8gMiB9KTtcclxuICBsZXQgbGFzdFJlbmRlciA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIGxvb3AodGltZXN0YW1wOiBudW1iZXIpIHtcclxuICAgIGxldCBkZWx0YVQgPSB0aW1lc3RhbXAgLSBsYXN0UmVuZGVyO1xyXG4gICAgbGFzdFJlbmRlciA9IHRpbWVzdGFtcDtcclxuXHJcbiAgICAvLyB1cGRhdGVcclxuICAgIGFnZW50LnVwZGF0ZShkZWx0YVQpO1xyXG5cclxuICAgIC8vIHJlbmRlclxyXG4gICAgcmVuZGVyZXIuY2xlYXIoKTtcclxuICAgIHJlbmRlcmVyLmRyYXdBZ2VudChhZ2VudCk7XHJcblxyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcclxuICB9XHJcblxyXG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XHJcbn1cclxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBtb2R1bGUgZXhwb3J0cyBtdXN0IGJlIHJldHVybmVkIGZyb20gcnVudGltZSBzbyBlbnRyeSBpbmxpbmluZyBpcyBkaXNhYmxlZFxuLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG5yZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyg4OTgpO1xuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiXSwic291cmNlUm9vdCI6IiJ9