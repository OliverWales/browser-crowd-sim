var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={10:(t,i,e)=>{e.r(i),e.d(i,{init:()=>E,playPause:()=>I,reconfigure:()=>A,step:()=>D});var o=function(){function t(t,i){this._renderer=t,this._agents=i}return t.prototype.init=function(t){this._agents.init(t.agents)},t.prototype.update=function(t){var i=this;this._agents.forEach((function(e){e.update(t,i._agents.getNeighboursInRangeEuclidean(e,300))})),this._agents.init(this._agents.getAll())},t.prototype.draw=function(){this._renderer.clear(),this._renderer.drawAgents(this._agents)},t}(),n=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),r=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([1,0,0,0,0,e,i,0,0,-i,e,0,0,0,0,1])},t.getYRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,0,-i,0,0,1,0,0,i,0,e,0,0,0,0,1])},t.getZRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,i,0,0,-i,e,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,i,e){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,i,e,1])},t.getPerspectiveProjectionMatrix=function(t,i,e,o){var n=1/Math.tan(t/2),r=1/(e-o);return new Float32Array([n/i,0,0,0,0,n,0,0,0,0,(e+o)*r,-1,0,0,e*o*r*2,0])},t.multiplyMatrices=function(t,i){for(var e=new Float32Array(16),o=0;o<4;o++)for(var n=0;n<4;n++){for(var r=0,s=0;s<4;s++)r+=t[4*o+s]*i[4*s+n];e[4*o+n]=r}return e},t.transpose=function(t){for(var i=new Float32Array(16),e=0;e<4;e++)for(var o=0;o<4;o++)i[4*e+o]=t[4*o+e];return i},t.invert=function(t){var i=t[0],e=t[1],o=t[2],n=t[3],r=t[4],s=t[5],a=t[6],h=t[7],u=t[8],c=t[9],g=t[10],l=t[11],d=t[12],f=t[13],p=t[14],m=t[15],v=i*s-e*r,y=i*a-o*r,_=i*h-n*r,M=e*a-o*s,x=e*h-n*s,b=o*h-n*a,P=u*f-c*d,w=u*p-g*d,R=u*m-l*d,E=c*p-g*f,I=c*m-l*f,D=g*m-l*p,A=v*D-y*I+_*E+M*R-x*w+b*P;if(!A)return null;var S=new Float32Array(16),L=1/A;return S[0]=(s*D-a*I+h*E)*L,S[1]=(o*I-e*D-n*E)*L,S[2]=(f*b-p*x+m*M)*L,S[3]=(g*x-c*b-l*M)*L,S[4]=(a*R-r*D-h*w)*L,S[5]=(i*D-o*R+n*w)*L,S[6]=(p*_-d*b-m*y)*L,S[7]=(u*b-g*_+l*y)*L,S[8]=(r*I-s*R+h*P)*L,S[9]=(e*R-i*I-n*P)*L,S[10]=(d*x-f*_+m*v)*L,S[11]=(c*_-u*x-l*v)*L,S[12]=(s*w-r*E-a*P)*L,S[13]=(i*E-e*w+o*P)*L,S[14]=(f*y-d*M-p*v)*L,S[15]=(u*M-c*y+g*v)*L,S},t}(),s=function(){function t(t,i){this.x=t,this.y=i}return t.prototype.copy=function(i){return new t(i.x,i.y)},t.prototype.add=function(i){return new t(this.x+i.x,this.y+i.y)},t.prototype.subtract=function(i){return new t(this.x-i.x,this.y-i.y)},t.prototype.multiply=function(i){return new t(this.x*i,this.y*i)},t.prototype.divide=function(i){return new t(this.x/i,this.y/i)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var i=this.magnitude();return 0==i?new t(0,0):this.divide(i)},t.prototype.sample=function(i){var e=Math.sqrt(Math.random())*i,o=2*Math.PI*Math.random();return new t(this.x+e*Math.cos(o),this.y+e*Math.sin(o))},t}(),a=function(){function t(){}return t.getVertices=function(t,i){var e=t/2,o=i/2;return[e,-o,0,0,0,1,e,o,0,0,0,1,-e,-o,0,0,0,1,-e,o,0,0,0,1]},t.getIndices=function(t){return void 0===t&&(t=0),[1,2,0,1,3,2].map((function(i){return i+t}))},t}(),h=function(){function t(t){var i=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return i.drag=!0,i.oldX=t.pageX,i.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return i.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!i.drag)return!1;i.xRot+=2*(t.pageX-i.oldX)*Math.PI/i.canvas.width,i.yRot+=2*(t.pageY-i.oldY)*Math.PI/i.canvas.height,i.oldX=t.pageX,i.oldY=t.pageY,i.yRot>0&&(i.yRot=0),i.yRot<-Math.PI&&(i.yRot=-Math.PI);var e=r.getZRotationMatrix(i.xRot),o=r.getXRotationMatrix(i.yRot),n=r.multiplyMatrices(e,o);return i.gl.uniformMatrix4fv(i.worldMatLoc,!1,n),t.preventDefault(),!1},this.mouseScroll=function(t){i.cameraDist+=t.deltaY,i.cameraDist<0&&(i.cameraDist=0);var e=r.getTranslationMatrix(0,0,-i.cameraDist);i.gl.uniformMatrix4fv(i.viewMatLoc,!1,e);var o=r.getPerspectiveProjectionMatrix(Math.PI/180*45,i.canvas.width/i.canvas.height,.1,i.cameraDist+2e3);return i.gl.uniformMatrix4fv(i.projMatLoc,!1,o),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var e=this.gl.createShader(this.gl.VERTEX_SHADER),o=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(e,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * radius,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(o,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))if(this.gl.compileShader(o),this.gl.getShaderParameter(o,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,e),this.gl.attachShader(this.program,o),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.gl.clearColor(.53,.76,.98,1),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,!1);var s=new Float32Array(n.vertices.concat(a.getVertices(1.1*t.width,1.1*t.height)));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,s,this.gl.STATIC_DRAW);var h=new Uint16Array(n.indices.concat(a.getIndices(n.vertices.length/6)));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var u=r.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),c=r.getTranslationMatrix(0,0,-this.cameraDist),g=r.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,u),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,c),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,g)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(o));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(e))}else console.error("WebGL not supported")}return t.prototype.clear=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},t.prototype.drawAgents=function(t){var i=this;t.forEach((function(t){var e=t.getPosition();i.gl.uniform2f(i.posVecLoc,e.x,e.y);var o=t.getDirection().normalise();0==o.x&&0==o.y&&(o=new s(1,0)),i.gl.uniform2f(i.dirVecLoc,o.x,o.y),i.gl.uniform1f(i.radiusLoc,t.Radius);var r=t.getColour();i.gl.uniform3f(i.baseColourLoc,r.r/255,r.g/255,r.b/255),i.gl.drawElements(i.gl.TRIANGLES,n.indices.length,i.gl.UNSIGNED_SHORT,0)})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,6,this.gl.UNSIGNED_SHORT,n.indices.length*Uint16Array.BYTES_PER_ELEMENT)},t}(),u=function(){function t(){}return t.FromHsv=function(t,i,e){var o=(t*=6)-Math.floor(t),n=e*(1-i),r=e*(1-i*o),s=e*(1-i*(1-o));return 0<=t&&t<1?{r:255*e,g:255*s,b:255*n}:1<=t&&t<2?{r:255*r,g:255*e,b:255*n}:2<=t&&t<3?{r:255*n,g:255*e,b:255*s}:3<=t&&t<4?{r:255*n,g:255*r,b:255*e}:4<=t&&t<5?{r:255*s,g:255*n,b:255*e}:5<=t&&t<6?{r:255*e,g:255*n,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),c=function(){function t(t,i,e,o){this.Id=t,this._position=i,this._goalPosition=e,this.Radius=o,this._direction=new s(0,0),this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getColour=function(){return this._isDone?u.White:u.Green},t.prototype.update=function(t,i){if(!this._isDone){var e=this._goalPosition.subtract(this._position);e.magnitude()>60*t/1e3?(this._direction=e.normalise(),this._position=this._position.add(this._direction.multiply(60*t/1e3))):(this._position=this._goalPosition,this._isDone=!0)}},t.prototype.isDone=function(){return this._isDone},t}(),g=function(){function t(t,i,e,o){this.Id=t,this._position=i,this._goalPosition=e,this.Radius=o,this._direction=new s(0,0),this._isDone=!1,this._isStuck=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getColour=function(){return this._isDone?u.White:this._isStuck?u.Red:u.Green},t.prototype.update=function(t,i){var e=this;if(!this._isDone){var o=this._goalPosition.subtract(this._position);if(o.magnitude()>60*t/1e3){this._direction=o.normalise();var n=this._position.add(this._direction.multiply(20));this._isStuck=!1,i.forEach((function(t){t.Id!=e.Id&&e.collides(t,n)&&(e._isStuck=!0)})),this._isStuck||(this._position=this._position.add(this._direction.multiply(60*t/1e3)))}else this._position=this._goalPosition,this._isDone=!0}},t.prototype.isDone=function(){return this._isDone},t.prototype.collides=function(t,i){return t.getPosition().subtract(i).magnitude()<t.Radius+this.Radius},t}(),l=function(){function t(){}return t.RandomToRandom=function(t,i,e,o){for(var n=[],r=this.poissonDiskSample(i,e,t,50),a=this.poissonDiskSample(i,e,t,50),h=new s(i/2,e/2),u=0;u<t;u++){var c=o(u,r[u].subtract(h),a[u].subtract(h),20);n.push(c)}return{agents:n}},t.RandomToLine=function(t,i,e,o){for(var n=[],r=this.poissonDiskSample(i,e,t,50),a=new s(i/2,e/2),h=0;h<t;h++){var u=o(h,r[h].subtract(a),new s(((h+1)/(t+1)-.5)*i,0),20);n.push(u)}return{agents:n}},t.CircleToCircle=function(t,i,e,o){for(var n=[],r=e/2-25,a=0;a<t;a++){var h=2*Math.PI*a/t,u=o(a,new s(r*Math.cos(h),r*Math.sin(h)),new s(r*Math.cos(h+Math.PI),r*Math.sin(h+Math.PI)),20);n.push(u)}return{agents:n}},t.GridToGrid=function(t,i,e,o){for(var n=[],r=Math.ceil(Math.sqrt(t/2)),a=90,h=30-i/2,u=-(r-1)/2*a,c=0;c<t;c++){var g=Math.floor(c/2),l=Math.floor(g/r),d=g%r;if(c%2==0){var f=o(c,new s(h+(r-1-d)*a,u+l*a),new s(-h-d*a,u+l*a),20);n.push(f)}else f=o(c,new s(-h-(r-1-d)*a,u+l*a),new s(h+d*a,u+l*a),20),n.push(f)}return{agents:n}},t.poissonDiskSample=function(t,i,e,o){for(var n=[],r=function(){for(var e,r=!0;r;)r=!1,e=new s(t*Math.random(),i*Math.random()),n.forEach((function(t){e.subtract(t).magnitudeSqrd()<Math.pow(o,2)&&(r=!0)}));n.push(e)},a=0;a<e;a++)r();return n},t}(),d=function(){function t(){}return t.prototype.init=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,i){var e=t.getPosition().x-i,o=t.getPosition().y-i,n=t.getPosition().x+i,r=t.getPosition().y+i;return this.rangeSearch(this._root,e,o,n,r,!0).filter((function(i){return i.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,i){return this.getNeighboursInRangeRectilinear(t,i).filter((function(e){return t.getPosition().subtract(e.getPosition()).magnitudeSqrd()<=Math.pow(i,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,i){if(0===t.length)return null;var e=Math.floor(t.length/2),o=i?t.sort((function(t,i){return t.getPosition().x-i.getPosition().x})):t.sort((function(t,i){return t.getPosition().y-i.getPosition().y})),n=this.constructTree(o.slice(0,e),!i),r=this.constructTree(o.slice(e+1,t.length),!i);return{agent:t[e],left:n,right:r}},t.prototype.rangeSearch=function(t,i,e,o,n,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=o&&(s=s.concat(this.rangeSearch(t.right,i,e,o,n,!r))),t.agent.getPosition().x>=i&&(s=s.concat(this.rangeSearch(t.left,i,e,o,n,!r)))):(t.agent.getPosition().y<=n&&(s=s.concat(this.rangeSearch(t.right,i,e,o,n,!r))),t.agent.getPosition().y>=e&&(s=s.concat(this.rangeSearch(t.left,i,e,o,n,!r)))),t.agent.getPosition().x>=i&&t.agent.getPosition().y>=e&&t.agent.getPosition().x<=o&&t.agent.getPosition().y<=n&&s.push(t.agent),s},t}(),f=function(){function t(t,i,e,o){this.MAX_VELOCITY=1,this.MAX_ACCELERATION=.5,this.Id=t,this._position=i,this._goalPosition=e,this.Radius=o,this._direction=new s(0,0),this._isDone=!1,this._colour=u.Green}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getColour=function(){return this._colour},t.prototype.update=function(t,i){if(!this._isDone){for(var e,o,n=.5,r=this.getPreferredVelocity(n),a=this._goalPosition.subtract(this.getPosition()).magnitudeSqrd(),h=!0,c=0;c<i.length;c++)if(!(i[c].getPosition().subtract(this.getPosition()).magnitudeSqrd()>a)&&null!=(_=this.getVelocityObstacle(i[c]))&&this.isInside(r,_)){h=!1,e=_,o=c;break}if(h)return this._direction=r,this._position=this._position.add(r),this._colour=u.Green,void this.checkIfDone();if(null!=e){var g=this.getClosestPointOnLine(e.vertex,e.tangent1,r);if(g.magnitude()<=n){for(h=!0,c=0;c<i.length;c++)if(c!=o&&null!=(_=this.getVelocityObstacle(i[c]))&&this.isInside(g,_)){h=!1;break}if(h)return this._direction=g,this._position=this._position.add(g),this.setColour(r),void this.checkIfDone()}var l=this.getClosestPointOnLine(e.vertex,e.tangent2,r);if(g.magnitude()<=n){for(h=!0,c=0;c<i.length;c++)if(c!=o&&null!=(_=this.getVelocityObstacle(i[c]))&&this.isInside(l,_)){h=!1;break}if(h)return this._direction=l,this._position=this._position.add(l),this.setColour(r),void this.checkIfDone()}}var d=Math.sqrt(a),f=1/0,p=new s(0,0);for(c=0;c<100;c++){for(var m=new s(0,0).sample(n),v=1/0,y=0;y<i.length;y++){var _,M=i[y];if(null==(_=this.getVelocityObstacle(M))||this.isInside(m,_)){var x=this.getFirstRayCircleIntersection(M.getPosition().add(M.getDirection()),this.Radius+M.Radius,this._position,m.subtract(M.getDirection()));if(x<v&&0==(v=x))return this.setColour(r),void this.checkIfDone()}}var b;(b=v<d?100/v+r.subtract(m).magnitude():r.subtract(m).magnitude())<f&&(f=b,p=m)}this._direction=p,this._position=this._position.add(p),this.setColour(r),this.checkIfDone()}},t.prototype.isDone=function(){return this._isDone},t.prototype.getPreferredVelocity=function(t){var i=this._goalPosition.subtract(this._position),e=i.magnitude();return e>t?i.divide(e/t):i},t.prototype.getVelocityObstacle=function(t){var i=t.getDirection(),e=t.getPosition().subtract(this._position).add(i),o=t.Radius+this.Radius,n=i.subtract(e),r=n.magnitude();if(r<o)return null;var a=Math.acos(o/r),h=Math.atan2(n.y,n.x),u=h+a,c=h-a;return{vertex:i,tangent1:new s(e.x+o*Math.cos(u),e.y+o*Math.sin(u)),tangent2:new s(e.x+o*Math.cos(c),e.y+o*Math.sin(c))}},t.prototype.isInside=function(t,i){var e=(i.tangent1.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent1.y-i.vertex.y)*(t.x-i.vertex.x),o=(i.tangent2.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent2.y-i.vertex.y)*(t.x-i.vertex.x);return e>0&&o<0},t.prototype.getClosestPointOnLine=function(t,i,e){var o=i.normalise(),n=e.subtract(t).dot(o);return t.add(o.multiply(n))},t.prototype.getFirstRayCircleIntersection=function(t,i,e,o){var n=e.subtract(t),r=o.dot(o),s=2*o.dot(n),a=n.dot(n)-Math.pow(i,2),h=Math.pow(s,2)-4*r*a;if(h<0)return 1/0;var u=(-s-Math.sqrt(h))/2*r;return u<0?1/0:u},t.prototype.setColour=function(t){var i=t.subtract(this._direction).magnitude();this._colour=u.FromHsv((1-i)/3,1,1)},t.prototype.checkIfDone=function(){this._position.subtract(this._goalPosition).magnitudeSqrd()<1&&(this._isDone=!0,this._position=this._goalPosition,this._direction=new s(0,0),this._colour=u.White)},t}(),p=function(){function t(t,i,e,o){this.MAX_VELOCITY=1,this.MAX_ACCELERATION=.5,this.Id=t,this._position=i,this._goalPosition=e,this.Radius=o,this._direction=new s(0,0),this._isDone=!1,this._colour=u.Green}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getColour=function(){return this._colour},t.prototype.update=function(t,i){if(!this._isDone){for(var e,o,n=.5,r=this.getPreferredVelocity(n),a=this._goalPosition.subtract(this.getPosition()).magnitudeSqrd(),h=!0,c=0;c<i.length;c++)if(!(i[c].getPosition().subtract(this.getPosition()).magnitudeSqrd()>a)&&null!=(_=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(r,_)){h=!1,e=_,o=c;break}if(h)return this._direction=r,this._position=this._position.add(r),this._colour=u.Green,void this.checkIfDone();if(null!=e){var g=this.getClosestPointOnLine(e.vertex,e.tangent1,r);if(g.magnitude()<=n){for(h=!0,c=0;c<i.length;c++)if(c!=o&&null!=(_=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(g,_)){h=!1;break}if(h)return this._direction=g,this._position=this._position.add(g),this.setColour(r),void this.checkIfDone()}var l=this.getClosestPointOnLine(e.vertex,e.tangent2,r);if(g.magnitude()<=n){for(h=!0,c=0;c<i.length;c++)if(c!=o&&null!=(_=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(l,_)){h=!1;break}if(h)return this._direction=l,this._position=this._position.add(l),this.setColour(r),void this.checkIfDone()}}var d=Math.sqrt(a),f=1/0,p=new s(0,0);for(c=0;c<100;c++){for(var m=new s(0,0).sample(n),v=1/0,y=0;y<i.length;y++){var _,M=i[y];if(null!=(_=this.getReciprocalVelocityObstacle(M))&&this.isInside(m,_)){var x=this.getFirstRayCircleIntersection(M.getPosition().add(M.getDirection()),this.Radius+M.Radius,this._position,m.multiply(2).subtract(this.getDirection()).subtract(M.getDirection()));if(x<v&&0==(v=x))return this.setColour(r),void this.checkIfDone()}}var b;(b=v<d?100/v+r.subtract(m).magnitude():r.subtract(m).magnitude())<f&&(f=b,p=m)}this._direction=p,this._position=this._position.add(p),this.setColour(r),this.checkIfDone()}},t.prototype.isDone=function(){return this._isDone},t.prototype.getPreferredVelocity=function(t){var i=this._goalPosition.subtract(this._position),e=i.magnitude();return e>t?i.divide(e/t):i},t.prototype.getReciprocalVelocityObstacle=function(t){var i=this.getDirection(),e=t.getDirection(),o=i.add(e).divide(2),n=t.getPosition().subtract(this._position).add(e),r=t.Radius+this.Radius,a=e.subtract(n),h=a.magnitude();if(h<r)return null;var u=Math.acos(r/h),c=Math.atan2(a.y,a.x),g=c+u,l=c-u;return{vertex:o,tangent1:new s(n.x+r*Math.cos(g),n.y+r*Math.sin(g)),tangent2:new s(n.x+r*Math.cos(l),n.y+r*Math.sin(l))}},t.prototype.isInside=function(t,i){var e=(i.tangent1.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent1.y-i.vertex.y)*(t.x-i.vertex.x),o=(i.tangent2.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent2.y-i.vertex.y)*(t.x-i.vertex.x);return e>0&&o<0},t.prototype.getClosestPointOnLine=function(t,i,e){var o=i.normalise(),n=e.subtract(t).dot(o);return t.add(o.multiply(n))},t.prototype.getFirstRayCircleIntersection=function(t,i,e,o){var n=e.subtract(t),r=o.dot(o),s=2*o.dot(n),a=n.dot(n)-Math.pow(i,2),h=Math.pow(s,2)-4*r*a;if(h<0)return 1/0;var u=(-s-Math.sqrt(h))/2*r;return u<0?1/0:u},t.prototype.setColour=function(t){var i=t.subtract(this._direction).magnitude();this._colour=u.FromHsv((1-i)/3,1,1)},t.prototype.checkIfDone=function(){this._position.subtract(this._goalPosition).magnitudeSqrd()<1&&(this._isDone=!0,this._position=this._goalPosition,this._direction=new s(0,0),this._colour=u.White)},t}(),m=function(){function t(t,i,e,o){throw new Error("Method not implemented.")}return t.prototype.getPosition=function(){throw new Error("Method not implemented.")},t.prototype.getDirection=function(){throw new Error("Method not implemented.")},t.prototype.getColour=function(){throw new Error("Method not implemented.")},t.prototype.update=function(t,i){throw new Error("Method not implemented.")},t.prototype.isDone=function(){throw new Error("Method not implemented.")},t}(),v=document.getElementById("config"),y=document.getElementById("agentType"),_=document.getElementById("numberOfAgents"),M=document.getElementById("canvas"),x=document.getElementById("framerate"),b=document.getElementById("playButton"),P=document.getElementById("stepButton"),w=new o(new h(M),new d),R=!1;function E(){this.reconfigure();var t=0,i=0,e=0;window.requestAnimationFrame((function o(n){var r=n-t;t=n,R&&w.update(r),w.draw(),e++,n-i>=250&&(x.textContent="FPS: "+(1e3*e/(n-i)).toFixed(1),e=0,i=n),window.requestAnimationFrame(o)}))}function I(){(R=!R)?(b.textContent="Pause",P.disabled=!0):(b.textContent="Play",P.disabled=!1)}function D(){w.update(1e3/60)}function A(){var t;R&&this.playPause();var i,e=v.value,o=y.value,n=null!==(t=parseInt(_.value))&&void 0!==t?t:0;switch(o){case"BasicAgent":i=function(t,i,e,o){return new c(t,i,e,o)};break;case"StopAgent":i=function(t,i,e,o){return new g(t,i,e,o)};break;case"VOAgent":i=function(t,i,e,o){return new f(t,i,e,o)};break;case"RVOAgent":i=function(t,i,e,o){return new p(t,i,e,o)};break;case"HRVOAgent":i=function(t,i,e,o){return new m(t,i,e,o)};break;default:throw new Error("Agent not implemented")}switch(e){case"RandomToRandom":w.init(l.RandomToRandom(n,M.width,M.height,i));break;case"RandomToLine":w.init(l.RandomToLine(n,M.width,M.height,i));break;case"CircleToCircle":w.init(l.CircleToCircle(n,M.width,M.height,i));break;case"GridToGrid":w.init(l.GridToGrid(n,M.width,M.height,i));break;default:throw new Error("Configuration not implemented")}}}},i={};function e(o){if(i[o])return i[o].exports;var n=i[o]={exports:{}};return t[o](n,n.exports,e),n.exports}return e.d=(t,i)=>{for(var o in i)e.o(i,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:i[o]})},e.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e(10)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,