var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={141:(t,i,e)=>{e.r(i),e.d(i,{init:()=>V,playPause:()=>B,reconfigure:()=>G,step:()=>j});var r,n=function(){function t(t,i){this._renderer=t,this._agents=i}return t.prototype.init=function(t){this._agents.init(t)},t.prototype.update=function(t){var i=this;this._agents.forEach((function(e){e.update(t,i._agents.getNeighboursInRangeEuclidean(e,300))})),this._agents.init(this._agents.getAll())},t.prototype.draw=function(){this._renderer.clear(),this._renderer.drawAgents(this._agents)},t}(),o=function(){function t(t,i){this.x=t,this.y=i}return t.prototype.copy=function(i){return new t(i.x,i.y)},t.prototype.add=function(i){return new t(this.x+i.x,this.y+i.y)},t.prototype.subtract=function(i){return new t(this.x-i.x,this.y-i.y)},t.prototype.multiply=function(i){return new t(this.x*i,this.y*i)},t.prototype.divide=function(i){return new t(this.x/i,this.y/i)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var i=this.magnitude();return 0==i?new t(0,0):this.divide(i)},t.prototype.sample=function(i){var e=Math.sqrt(Math.random())*i,r=2*Math.PI*Math.random();return new t(this.x+e*Math.cos(r),this.y+e*Math.sin(r))},t}(),s=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([1,0,0,0,0,e,i,0,0,-i,e,0,0,0,0,1])},t.getYRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,0,-i,0,0,1,0,0,i,0,e,0,0,0,0,1])},t.getZRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,i,0,0,-i,e,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,i,e){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,i,e,1])},t.getPerspectiveProjectionMatrix=function(t,i,e,r){var n=1/Math.tan(t/2),o=1/(e-r);return new Float32Array([n/i,0,0,0,0,n,0,0,0,0,(e+r)*o,-1,0,0,e*r*o*2,0])},t.multiplyMatrices=function(t,i){for(var e=new Float32Array(16),r=0;r<4;r++)for(var n=0;n<4;n++){for(var o=0,s=0;s<4;s++)o+=t[4*r+s]*i[4*s+n];e[4*r+n]=o}return e},t.transpose=function(t){for(var i=new Float32Array(16),e=0;e<4;e++)for(var r=0;r<4;r++)i[4*e+r]=t[4*r+e];return i},t.invert=function(t){var i=t[0],e=t[1],r=t[2],n=t[3],o=t[4],s=t[5],a=t[6],c=t[7],u=t[8],h=t[9],l=t[10],g=t[11],d=t[12],f=t[13],p=t[14],y=t[15],v=i*s-e*o,m=i*a-r*o,_=i*c-n*o,b=e*a-r*s,x=e*c-n*s,w=r*c-n*a,M=u*f-h*d,P=u*p-l*d,R=u*y-g*d,A=h*p-l*f,E=h*y-g*f,L=l*y-g*p,S=v*L-m*E+_*A+b*R-x*P+w*M;if(!S)return null;var O=new Float32Array(16),C=1/S;return O[0]=(s*L-a*E+c*A)*C,O[1]=(r*E-e*L-n*A)*C,O[2]=(f*w-p*x+y*b)*C,O[3]=(l*x-h*w-g*b)*C,O[4]=(a*R-o*L-c*P)*C,O[5]=(i*L-r*R+n*P)*C,O[6]=(p*_-d*w-y*m)*C,O[7]=(u*w-l*_+g*m)*C,O[8]=(o*E-s*R+c*M)*C,O[9]=(e*R-i*E-n*M)*C,O[10]=(d*x-f*_+y*v)*C,O[11]=(h*_-u*x-g*v)*C,O[12]=(s*P-o*A-a*M)*C,O[13]=(i*A-e*P+r*M)*C,O[14]=(f*m-d*b-p*v)*C,O[15]=(u*b-h*m+l*v)*C,O},t}(),a=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),c=function(){function t(){}return t.getVertices=function(t,i){var e=t/2,r=i/2;return[e,-r,0,0,0,1,e,r,0,0,0,1,-e,-r,0,0,0,1,-e,r,0,0,0,1]},t.getIndices=function(t){return void 0===t&&(t=0),[1,2,0,1,3,2].map((function(i){return i+t}))},t}(),u=function(){function t(t){var i=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return i.drag=!0,i.oldX=t.pageX,i.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return i.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!i.drag)return!1;i.xRot+=2*(t.pageX-i.oldX)*Math.PI/i.canvas.width,i.yRot+=2*(t.pageY-i.oldY)*Math.PI/i.canvas.height,i.oldX=t.pageX,i.oldY=t.pageY,i.yRot>0&&(i.yRot=0),i.yRot<-Math.PI&&(i.yRot=-Math.PI);var e=s.getZRotationMatrix(i.xRot),r=s.getXRotationMatrix(i.yRot),n=s.multiplyMatrices(e,r);return i.gl.uniformMatrix4fv(i.worldMatLoc,!1,n),t.preventDefault(),!1},this.mouseScroll=function(t){i.cameraDist+=t.deltaY,i.cameraDist<0&&(i.cameraDist=0);var e=s.getTranslationMatrix(0,0,-i.cameraDist);i.gl.uniformMatrix4fv(i.viewMatLoc,!1,e);var r=s.getPerspectiveProjectionMatrix(Math.PI/180*45,i.canvas.width/i.canvas.height,.1,i.cameraDist+2e3);return i.gl.uniformMatrix4fv(i.projMatLoc,!1,r),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var e=this.gl.createShader(this.gl.VERTEX_SHADER),r=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(e,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * radius,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(r,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))if(this.gl.compileShader(r),this.gl.getShaderParameter(r,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,e),this.gl.attachShader(this.program,r),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.gl.clearColor(.53,.76,.98,1),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,!1);var n=new Float32Array(a.vertices.concat(c.getVertices(1.1*t.width,1.1*t.height)));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,n,this.gl.STATIC_DRAW);var o=new Uint16Array(a.indices.concat(c.getIndices(a.vertices.length/6)));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,o,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var u=s.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),h=s.getTranslationMatrix(0,0,-this.cameraDist),l=s.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,u),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,h),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,l)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(r));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(e))}else console.error("WebGL not supported")}return t.prototype.clear=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},t.prototype.drawAgents=function(t){var i=this;t.forEach((function(t){var e=t.getPosition();i.gl.uniform2f(i.posVecLoc,e.x,e.y);var r=t.getDirection().normalise();0==r.x&&0==r.y&&(r=new o(1,0)),i.gl.uniform2f(i.dirVecLoc,r.x,r.y),i.gl.uniform1f(i.radiusLoc,t.Radius);var n=t.getColour();i.gl.uniform3f(i.baseColourLoc,n.r/255,n.g/255,n.b/255),i.gl.drawElements(i.gl.TRIANGLES,a.indices.length,i.gl.UNSIGNED_SHORT,0)})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,6,this.gl.UNSIGNED_SHORT,a.indices.length*Uint16Array.BYTES_PER_ELEMENT)},t}(),h=function(){function t(){}return t.prototype.init=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,i){var e=t.getPosition().x-i,r=t.getPosition().y-i,n=t.getPosition().x+i,o=t.getPosition().y+i;return this.rangeSearch(this._root,e,r,n,o,!0).filter((function(i){return i.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,i){return this.getNeighboursInRangeRectilinear(t,i).filter((function(e){return t.getPosition().subtract(e.getPosition()).magnitudeSqrd()<=Math.pow(i,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,i){if(0===t.length)return null;var e=Math.floor(t.length/2),r=i?t.sort((function(t,i){return t.getPosition().x-i.getPosition().x})):t.sort((function(t,i){return t.getPosition().y-i.getPosition().y})),n=this.constructTree(r.slice(0,e),!i),o=this.constructTree(r.slice(e+1,t.length),!i);return{agent:t[e],left:n,right:o}},t.prototype.rangeSearch=function(t,i,e,r,n,o){if(null==t)return[];var s=[];return o?(t.agent.getPosition().x<=r&&(s=s.concat(this.rangeSearch(t.right,i,e,r,n,!o))),t.agent.getPosition().x>=i&&(s=s.concat(this.rangeSearch(t.left,i,e,r,n,!o)))):(t.agent.getPosition().y<=n&&(s=s.concat(this.rangeSearch(t.right,i,e,r,n,!o))),t.agent.getPosition().y>=e&&(s=s.concat(this.rangeSearch(t.left,i,e,r,n,!o)))),t.agent.getPosition().x>=i&&t.agent.getPosition().y>=e&&t.agent.getPosition().x<=r&&t.agent.getPosition().y<=n&&s.push(t.agent),s},t}(),l=function(){function t(t,i,e){this.Id=t,this.Radius=20,this._position=i,this._direction=new o(0,0),this._getPreferredVelocity=e,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),g=function(){function t(){}return t.FromHsv=function(t,i,e){var r=(t*=6)-Math.floor(t),n=e*(1-i),o=e*(1-i*r),s=e*(1-i*(1-r));return 0<=t&&t<1?{r:255*e,g:255*s,b:255*n}:1<=t&&t<2?{r:255*o,g:255*e,b:255*n}:2<=t&&t<3?{r:255*n,g:255*e,b:255*s}:3<=t&&t<4?{r:255*n,g:255*o,b:255*e}:4<=t&&t<5?{r:255*s,g:255*n,b:255*e}:5<=t&&t<6?{r:255*e,g:255*n,b:255*o}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),d=(r=function(t,i){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])})(t,i)},function(t,i){function e(){this.constructor=t}r(t,i),t.prototype=null===i?Object.create(i):(e.prototype=i.prototype,new e)}),f=function(t){function i(){return null!==t&&t.apply(this,arguments)||this}return d(i,t),i.prototype.getColour=function(){return this._isDone?g.White:g.Green},i.prototype.update=function(t,i){if(!this._isDone){var e=this._getPreferredVelocity(this._position);e.magnitude(),0!=e.x||0!=e.y?(this._direction=e,this._position=this._position.add(e.multiply(60*t/1e3))):this._isDone=!0}},i}(l),p=function(){var t=function(i,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])})(i,e)};return function(i,e){function r(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),y=function(t){function i(i,e,r){var n=t.call(this,i,e,r)||this;return n._isStuck=!1,n}return p(i,t),i.prototype.getColour=function(){return this._isDone?g.White:this._isStuck?g.Red:g.Green},i.prototype.update=function(t,i){if(!this._isDone){var e=this._getPreferredVelocity(this._position);if(0!=e.x||0!=e.y){this._direction=e.normalise();var r=this._position.add(this._direction.multiply(20));this._isStuck=!1;for(var n=0;n<i.length;n++)if(this.collides(i[n],r))return void(this._isStuck=!0);this._direction=e,this._position=this._position.add(this._direction.multiply(60*t/1e3))}else this._isDone=!0}},i.prototype.collides=function(t,i){return t.getPosition().subtract(i).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},i}(l),v=function(){function t(){}return t.getClosestPointOnLine=function(t,i,e){var r=i.normalise(),n=e.subtract(t).dot(r);return t.add(r.multiply(n))},t.getFirstRayCircleIntersection=function(t,i,e,r){var n=e.subtract(t),o=r.dot(r),s=2*r.dot(n),a=n.dot(n)-Math.pow(i,2),c=Math.pow(s,2)-4*o*a;if(c<0)return 1/0;var u=(-s-Math.sqrt(c))/2*o;return u<0?1/0:u},t.getLineLineIntersection=function(t,i,e,r){var n=e.subtract(t),o=r.x*i.y-r.y*i.x,s=(n.y*r.x-n.y*r.y)/o;return t.add(i.multiply(s))},t}(),m=function(){function t(t,i,e){this.vertex=t,this.tangent1=i,this.tangent2=e}return t.prototype.contains=function(t){var i=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),e=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return i>0&&e<0},t}(),_=function(){var t=function(i,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])})(i,e)};return function(i,e){function r(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),b=function(t){function i(i,e,r){var n=t.call(this,i,e,r)||this;return n._colour=g.Green,n}return _(i,t),i.prototype.getColour=function(){return this._colour},i.prototype.update=function(t,i){if(!this._isDone){var e=this._getPreferredVelocity(this._position);if(0==e.x&&0==e.y)return this._isDone=!0,this._direction=new o(0,0),void(this._colour=g.White);for(var r,n,s=!0,a=0;a<i.length;a++)if(null!=(_=this.getVelocityObstacle(i[a]))&&_.contains(e)){s=!1,r=_,n=a;break}if(s)return this._direction=e,this._position=this._position.add(this._direction.multiply(60*t/1e3)),void(this._colour=g.Green);if(null!=r){var c=v.getClosestPointOnLine(r.vertex,r.tangent1,e),u=v.getClosestPointOnLine(r.vertex,r.tangent2,e),h=!0,l=!0;for(a=0;a<i.length;a++)a!=n&&(null!=(_=this.getVelocityObstacle(i[a]))&&_.contains(c)&&(h=!1),null!=_&&_.contains(c)&&(l=!1));if(h&&l?c.subtract(e).magnitudeSqrd()<u.subtract(e).magnitudeSqrd()?this._direction=c:this._direction=u:h?this._direction=c:l&&(this._direction=u),h||l)return this._position=this._position.add(this._direction.multiply(60*t/1e3)),void this.setColour(e)}var d=1/0,f=new o(0,0);for(a=0;a<100;a++){for(var p=new o(0,0).sample(1),y=1/0,m=0;m<i.length;m++){var _,b=i[m];if(null==(_=this.getVelocityObstacle(b))||_.contains(p)){var x=v.getFirstRayCircleIntersection(b.getPosition().add(b.getDirection()),this.Radius+b.Radius,this._position,p.subtract(b.getDirection()));x<y&&(y=x)}}var w=100/y+e.subtract(p).magnitude();w<d&&(d=w,f=p)}this._direction=f,this._position=this._position.add(this._direction.multiply(60*t/1e3)),this.setColour(e)}},i.prototype.getVelocityObstacle=function(t){var i=t.getDirection(),e=t.getPosition().subtract(this._position).add(i),r=t.Radius+this.Radius,n=i.subtract(e),s=n.magnitude();if(s<r)return null;var a=Math.acos(r/s),c=Math.atan2(n.y,n.x),u=c+a,h=new o(e.x+r*Math.cos(u),e.y+r*Math.sin(u)),l=c-a,g=new o(e.x+r*Math.cos(l),e.y+r*Math.sin(l));return new m(i,h,g)},i.prototype.setColour=function(t){var i=t.subtract(this._direction).magnitude();this._colour=g.FromHsv((1-i)/3,1,1)},i}(l),x=function(){var t=function(i,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])})(i,e)};return function(i,e){function r(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),w=function(t){function i(i,e,r){var n=t.call(this,i,e,r)||this;return n._colour=g.Green,n}return x(i,t),i.prototype.getColour=function(){return this._colour},i.prototype.update=function(t,i){if(!this._isDone){var e=this._getPreferredVelocity(this._position);if(0==e.x&&0==e.y)return this._isDone=!0,this._direction=new o(0,0),void(this._colour=g.White);for(var r,n,s=!0,a=0;a<i.length;a++)if(null!=(_=this.getReciprocalVelocityObstacle(i[a]))&&_.contains(e)){s=!1,r=_,n=a;break}if(s)return this._direction=e,this._position=this._position.add(this._direction.multiply(60*t/1e3)),void(this._colour=g.Green);if(null!=r){var c=v.getClosestPointOnLine(r.vertex,r.tangent1,e),u=v.getClosestPointOnLine(r.vertex,r.tangent2,e),h=!0,l=!0;for(a=0;a<i.length;a++)a!=n&&(null!=(_=this.getReciprocalVelocityObstacle(i[a]))&&_.contains(c)&&(h=!1),null!=_&&_.contains(c)&&(l=!1));if(h&&l?c.subtract(e).magnitudeSqrd()<u.subtract(e).magnitudeSqrd()?this._direction=c:this._direction=u:h?this._direction=c:l&&(this._direction=u),h||l)return this._position=this._position.add(this._direction.multiply(60*t/1e3)),void this.setColour(e)}var d=1/0,f=new o(0,0);for(a=0;a<100;a++){for(var p=new o(0,0).sample(1),y=1/0,m=0;m<i.length;m++){var _,b=i[m];if(null==(_=this.getReciprocalVelocityObstacle(b))||_.contains(p)){var x=v.getFirstRayCircleIntersection(b.getPosition().add(b.getDirection()),this.Radius+b.Radius,this._position,p.subtract(b.getDirection()));x<y&&(y=x)}}var w=100/y+e.subtract(p).magnitude();w<d&&(d=w,f=p)}this._direction=f,this._position=this._position.add(this._direction.multiply(60*t/1e3)),this.setColour(e)}},i.prototype.getReciprocalVelocityObstacle=function(t){var i=this.getDirection(),e=t.getDirection(),r=i.add(e).divide(2),n=t.getPosition().subtract(this._position).add(e),s=t.Radius+this.Radius,a=e.subtract(n),c=a.magnitude();if(c<s)return null;var u=Math.acos(s/c),h=Math.atan2(a.y,a.x),l=h+u,g=new o(n.x+s*Math.cos(l),n.y+s*Math.sin(l)),d=h-u,f=new o(n.x+s*Math.cos(d),n.y+s*Math.sin(d));return new m(r,g,f)},i.prototype.setColour=function(t){var i=t.subtract(this._direction).magnitude();this._colour=g.FromHsv((1-i)/3,1,1)},i}(l),M=function(){var t=function(i,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,i){t.__proto__=i}||function(t,i){for(var e in i)Object.prototype.hasOwnProperty.call(i,e)&&(t[e]=i[e])})(i,e)};return function(i,e){function r(){this.constructor=i}t(i,e),i.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}(),P=function(t){function i(i,e,r){var n=t.call(this,i,e,r)||this;return n._colour=g.Green,n}return M(i,t),i.prototype.getColour=function(){return this._colour},i.prototype.update=function(t,i){if(!this._isDone){var e=this._getPreferredVelocity(this._position);if(0==e.x&&0==e.y)return this._isDone=!0,this._direction=new o(0,0),void(this._colour=g.White);for(var r,n,s=!0,a=0;a<i.length;a++)if(null!=(_=this.getHybridReciprocalVelocityObstacle(i[a]))&&_.contains(e)){s=!1,r=_,n=a;break}if(s)return this._direction=e,this._position=this._position.add(this._direction.multiply(60*t/1e3)),void(this._colour=g.Green);if(null!=r){var c=v.getClosestPointOnLine(r.vertex,r.tangent1,e),u=v.getClosestPointOnLine(r.vertex,r.tangent2,e),h=!0,l=!0;for(a=0;a<i.length;a++)a!=n&&(null!=(_=this.getHybridReciprocalVelocityObstacle(i[a]))&&_.contains(c)&&(h=!1),null!=_&&_.contains(c)&&(l=!1));if(h&&l?c.subtract(e).magnitudeSqrd()<u.subtract(e).magnitudeSqrd()?this._direction=c:this._direction=u:h?this._direction=c:l&&(this._direction=u),h||l)return this._position=this._position.add(this._direction.multiply(60*t/1e3)),void this.setColour(e)}var d=1/0,f=new o(0,0);for(a=0;a<100;a++){for(var p=new o(0,0).sample(1),y=1/0,m=0;m<i.length;m++){var _,b=i[m];if(null==(_=this.getHybridReciprocalVelocityObstacle(b))||_.contains(p)){var x=v.getFirstRayCircleIntersection(b.getPosition().add(b.getDirection()),this.Radius+b.Radius,this._position,p.subtract(b.getDirection()));x<y&&(y=x)}}var w=100/y+e.subtract(p).magnitude();w<d&&(d=w,f=p)}this._direction=f,this._position=this._position.add(this._direction.multiply(60*t/1e3)),this.setColour(e)}},i.prototype.getHybridReciprocalVelocityObstacle=function(t){var i=this.getDirection(),e=t.getDirection(),r=e,n=i.add(e).divide(2),s=t.getPosition().subtract(this._position),a=s.add(e),c=t.Radius+this.Radius,u=e.subtract(a),h=u.magnitude();if(h<c)return null;var l,g=Math.acos(c/h),d=Math.atan2(u.y,u.x),f=d+g,p=new o(a.x+c*Math.cos(f),a.y+c*Math.sin(f)),y=d-g,_=new o(a.x+c*Math.cos(y),a.y+c*Math.sin(y));return l=(s.x-e.x)*(i.y-e.y)-(s.y-e.y)*(i.x-e.x)>0?v.getLineLineIntersection(r,p,n,_):v.getLineLineIntersection(r,_,n,p),new m(l,p,_)},i.prototype.setColour=function(t){var i=t.subtract(this._direction).magnitude();this._colour=g.FromHsv((1-i)/3,1,1)},i}(l),R=function(){function t(){}return t.getAgent=function(t,i,e,r){switch(t){case"BasicAgent":return new f(i,e,r);case"StopAgent":return new y(i,e,r);case"VOAgent":return new b(i,e,r);case"RVOAgent":return new w(i,e,r);case"HRVOAgent":return new P(i,e,r);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),A=function(){function t(){}return t.getConfiguration=function(t,i,e,r,n){switch(t){case"RandomToRandom":return this.RandomToRandom(i,e,r,n);case"RandomToLine":return this.RandomToLine(i,e,r,n);case"CircleToCircle":return this.CircleToCircle(i,e,r,n);case"GridToGrid":return this.GridToGrid(i,e,r,n);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,i,e,r){for(var n=[],s=this.poissonDiskSample(i,e,r,50).map((function(t){return t.subtract(new o(i/2,e/2))})),a=this.poissonDiskSample(i,e,r,50).map((function(t){return t.subtract(new o(i/2,e/2))})),c=0;c<r;c++){var u=R.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(a[c]));n.push(u)}return n},t.RandomToLine=function(t,i,e,r){for(var n=[],s=this.poissonDiskSample(i,e,r,50).map((function(t){return t.subtract(new o(i/2,e/2))})),a=0;a<r;a++){var c=R.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(new o(((a+1)/(r+1)-.5)*i,0)));n.push(c)}return n},t.CircleToCircle=function(t,i,e,r){for(var n=[],s=e/2-25,a=0;a<r;a++){var c=2*Math.PI*a/r,u=R.getAgent(t,a,new o(s*Math.cos(c),s*Math.sin(c)),this.preferredVelocityFromGoalPosition(new o(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI))));n.push(u)}return n},t.GridToGrid=function(t,i,e,r){for(var n=[],s=Math.ceil(Math.sqrt(r/2)),a=90,c=30-i/2,u=-(s-1)/2*a,h=0;h<r;h++){var l=Math.floor(h/2),g=Math.floor(l/s),d=l%s;if(h%2==0){var f=R.getAgent(t,h,new o(c+(s-1-d)*a,u+g*a),this.preferredVelocityFromGoalPosition(new o(-c-d*a,u+g*a)));n.push(f)}else f=R.getAgent(t,h,new o(-c-(s-1-d)*a,u+g*a),this.preferredVelocityFromGoalPosition(new o(c+d*a,u+g*a))),n.push(f)}return n},t.preferredVelocityFromGoalPosition=function(t){return function(i){var e=t.subtract(i);return e.magnitudeSqrd()<1?e:e.normalise()}},t.poissonDiskSample=function(t,i,e,r){for(var n=[],s=function(){for(var e,s=!0;s;)s=!1,e=new o(t*Math.random(),i*Math.random()),n.forEach((function(t){e.subtract(t).magnitudeSqrd()<Math.pow(r,2)&&(s=!0)}));n.push(e)},a=0;a<e;a++)s();return n},t}(),E=document.getElementById("config"),L=document.getElementById("agentType"),S=document.getElementById("numberOfAgents"),O=document.getElementById("canvas"),C=document.getElementById("framerate"),D=document.getElementById("playButton"),T=document.getElementById("stepButton"),I=new n(new u(O),new h),F=!1;function V(){this.reconfigure();var t=0,i=0,e=0;window.requestAnimationFrame((function r(n){var o=n-t;t=n,F&&I.update(o),I.draw(),e++,n-i>=250&&(C.textContent="FPS: "+(1e3*e/(n-i)).toFixed(1),e=0,i=n),window.requestAnimationFrame(r)}))}function B(){(F=!F)?(D.textContent="Pause",T.disabled=!0):(D.textContent="Play",T.disabled=!1)}function j(){I.update(1e3/60)}function G(){var t;F&&this.playPause();var i=E.value,e=L.value,r=null!==(t=parseInt(S.value))&&void 0!==t?t:0;I.init(A.getConfiguration(i,e,O.width,O.height,r))}}},i={};function e(r){if(i[r])return i[r].exports;var n=i[r]={exports:{}};return t[r](n,n.exports,e),n.exports}return e.d=(t,i)=>{for(var r in i)e.o(i,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:i[r]})},e.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e(141)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,