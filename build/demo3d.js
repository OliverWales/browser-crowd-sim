var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={476:(t,i,e)=>{e.r(i),e.d(i,{init:()=>w,playPause:()=>R,reconfigure:()=>S,step:()=>I});var n=function(){function t(t,i){this._renderer=t,this._agents=i}return t.prototype.init=function(t){this._agents.init(t.agents)},t.prototype.update=function(t){var i=this;this._agents.forEach((function(e){e.update(t,i._agents.getNeighboursInRangeEuclidean(e,300))})),this._agents.init(this._agents.getAll())},t.prototype.draw=function(){this._renderer.clear(),this._renderer.drawAgents(this._agents)},t}(),o=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),r=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([1,0,0,0,0,e,i,0,0,-i,e,0,0,0,0,1])},t.getYRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,0,-i,0,0,1,0,0,i,0,e,0,0,0,0,1])},t.getZRotationMatrix=function(t){var i=Math.sin(t),e=Math.cos(t);return new Float32Array([e,i,0,0,-i,e,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,i,e){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,i,e,1])},t.getPerspectiveProjectionMatrix=function(t,i,e,n){var o=1/Math.tan(t/2),r=1/(e-n);return new Float32Array([o/i,0,0,0,0,o,0,0,0,0,(e+n)*r,-1,0,0,e*n*r*2,0])},t.multiplyMatrices=function(t,i){for(var e=new Float32Array(16),n=0;n<4;n++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*n+s]*i[4*s+o];e[4*n+o]=r}return e},t.transpose=function(t){for(var i=new Float32Array(16),e=0;e<4;e++)for(var n=0;n<4;n++)i[4*e+n]=t[4*n+e];return i},t.invert=function(t){var i=t[0],e=t[1],n=t[2],o=t[3],r=t[4],s=t[5],a=t[6],h=t[7],c=t[8],u=t[9],g=t[10],l=t[11],d=t[12],f=t[13],p=t[14],m=t[15],v=i*s-e*r,y=i*a-n*r,_=i*h-o*r,x=e*a-n*s,P=e*h-o*s,M=n*h-o*a,b=c*f-u*d,w=c*p-g*d,R=c*m-l*d,I=u*p-g*f,S=u*m-l*f,E=g*m-l*p,A=v*E-y*S+_*I+x*R-P*w+M*b;if(!A)return null;var D=new Float32Array(16),L=1/A;return D[0]=(s*E-a*S+h*I)*L,D[1]=(n*S-e*E-o*I)*L,D[2]=(f*M-p*P+m*x)*L,D[3]=(g*P-u*M-l*x)*L,D[4]=(a*R-r*E-h*w)*L,D[5]=(i*E-n*R+o*w)*L,D[6]=(p*_-d*M-m*y)*L,D[7]=(c*M-g*_+l*y)*L,D[8]=(r*S-s*R+h*b)*L,D[9]=(e*R-i*S-o*b)*L,D[10]=(d*P-f*_+m*v)*L,D[11]=(u*_-c*P-l*v)*L,D[12]=(s*w-r*I-a*b)*L,D[13]=(i*I-e*w+n*b)*L,D[14]=(f*y-d*x-p*v)*L,D[15]=(c*x-u*y+g*v)*L,D},t}(),s=function(){function t(t,i){this.x=t,this.y=i}return t.prototype.copy=function(i){return new t(i.x,i.y)},t.prototype.add=function(i){return new t(this.x+i.x,this.y+i.y)},t.prototype.subtract=function(i){return new t(this.x-i.x,this.y-i.y)},t.prototype.multiply=function(i){return new t(this.x*i,this.y*i)},t.prototype.divide=function(i){return new t(this.x/i,this.y/i)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var i=this.magnitude();return 0==i?new t(0,0):this.divide(i)},t.prototype.sample=function(i){var e=Math.sqrt(Math.random())*i,n=2*Math.PI*Math.random();return new t(this.x+e*Math.cos(n),this.y+e*Math.sin(n))},t}(),a=function(){function t(){}return t.getVertices=function(t,i){var e=t/2,n=i/2;return[e,-n,0,0,0,1,e,n,0,0,0,1,-e,-n,0,0,0,1,-e,n,0,0,0,1]},t.getIndices=function(t){return void 0===t&&(t=0),[1,2,0,1,3,2].map((function(i){return i+t}))},t}(),h=function(){function t(t){var i=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return i.drag=!0,i.oldX=t.pageX,i.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return i.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!i.drag)return!1;i.dX=2*(t.pageX-i.oldX)*Math.PI/i.canvas.width,i.dY=2*(t.pageY-i.oldY)*Math.PI/i.canvas.height,i.xRot+=i.dX,i.yRot+=i.dY,i.oldX=t.pageX,i.oldY=t.pageY,i.yRot>0&&(i.yRot=0),i.yRot<-Math.PI&&(i.yRot=-Math.PI);var e=r.getZRotationMatrix(i.xRot),n=r.getXRotationMatrix(i.yRot),o=r.multiplyMatrices(e,n);return i.gl.uniformMatrix4fv(i.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){i.cameraDist+=t.deltaY,i.cameraDist<0&&(i.cameraDist=0);var e=r.getTranslationMatrix(0,0,-i.cameraDist);i.gl.uniformMatrix4fv(i.viewMatLoc,!1,e);var n=r.getPerspectiveProjectionMatrix(Math.PI/180*45,i.canvas.width/i.canvas.height,.1,i.cameraDist+2e3);return i.gl.uniformMatrix4fv(i.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var e=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(e,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * radius,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(e),this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,e),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.gl.clearColor(.53,.76,1,.98),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,!1);var s=new Float32Array(o.vertices.concat(a.getVertices(1.1*t.width,1.1*t.height)));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,s,this.gl.STATIC_DRAW);var h=new Uint16Array(o.indices.concat(a.getIndices(o.vertices.length/6)));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var c=r.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),u=r.getTranslationMatrix(0,0,-this.cameraDist),g=r.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,c),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,u),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,g)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(e))}else console.error("WebGL not supported")}return t.prototype.clear=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)},t.prototype.drawAgents=function(t){var i=this;t.forEach((function(t){var e=t.getPosition();i.gl.uniform2f(i.posVecLoc,e.x-i.canvas.width/2,e.y-i.canvas.height/2);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new s(1,0)),i.gl.uniform2f(i.dirVecLoc,n.x,n.y),i.gl.uniform1f(i.radiusLoc,t.Radius),i.gl.uniform3f(i.baseColourLoc,1,0,0),i.gl.drawElements(i.gl.TRIANGLES,o.indices.length,i.gl.UNSIGNED_SHORT,0)})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,6,this.gl.UNSIGNED_SHORT,o.indices.length*Uint16Array.BYTES_PER_ELEMENT)},t}(),c=function(){function t(t,i,e,n){this.Id=t,this._position=i,this._goalPosition=e,this.Radius=n,this._direction=new s(0,0),this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getIsDone=function(){return this._isDone},t.prototype.getIsStuck=function(){return!1},t.prototype.update=function(t,i){if(!this._isDone){var e=this._goalPosition.subtract(this._position);e.magnitude()>60*t/1e3?(this._direction=e.normalise(),this._position=this._position.add(this._direction.multiply(60*t/1e3))):(this._position=this._goalPosition,this._isDone=!0)}},t}(),u=function(){function t(t,i,e,n){this.Id=t,this._position=i,this._goalPosition=e,this.Radius=n,this._direction=new s(0,0),this._isDone=!1,this._isStuck=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getIsDone=function(){return this._isDone},t.prototype.getIsStuck=function(){return this._isStuck},t.prototype.update=function(t,i){var e=this;if(!this._isDone){var n=this._goalPosition.subtract(this._position);if(n.magnitude()>60*t/1e3){this._direction=n.normalise();var o=this._position.add(this._direction.multiply(20));this._isStuck=!1,i.forEach((function(t){t.Id!=e.Id&&e.collides(t,o)&&(e._isStuck=!0)})),this._isStuck||(this._position=this._position.add(this._direction.multiply(60*t/1e3)))}else this._position=this._goalPosition,this._isDone=!0}},t.prototype.collides=function(t,i){return t.getPosition().subtract(i).magnitude()<t.Radius+this.Radius},t}(),g=function(){function t(){}return t.RandomToRandom=function(t,i,e,n){for(var o=[],r=this.poissonDiskSample(i,e,t,50),s=this.poissonDiskSample(i,e,t,50),a=0;a<t;a++){var h=n(a,r[a],s[a],20);o.push(h)}return{agents:o}},t.RandomToLine=function(t,i,e,n){for(var o=[],r=this.poissonDiskSample(i,e,t,50),a=0;a<t;a++){var h=n(a,r[a],new s((a+1)/(t+1)*i,e/2),20);o.push(h)}return{agents:o}},t.CircleToCircle=function(t,i,e,n){for(var o=[],r=i/2,a=e/2,h=e/2-25,c=0;c<t;c++){var u=2*Math.PI*c/t,g=n(c,new s(r+h*Math.cos(u),a+h*Math.sin(u)),new s(r+h*Math.cos(u+Math.PI),a+h*Math.sin(u+Math.PI)),20);o.push(g)}return{agents:o}},t.GridToGrid=function(t,i,e,n){for(var o=[],r=Math.ceil(t/8),a=i-50-90*(r-1),h=e/2-135,c=0,u=0;u<r;u++){for(var g=0;g<4;g++){var l=new s(50+90*u,h+90*g),d=new s(a+90*u,h+90*g);if(o.push(n(c,l,d,20)),++c>=t)break;if(o.push(n(c,d,l,20)),++c>=t)break}if(c>=t)break}return{agents:o}},t.poissonDiskSample=function(t,i,e,n){for(var o=[],r=function(){for(var e,r=!0;r;)r=!1,e=new s(t*Math.random(),i*Math.random()),o.forEach((function(t){e.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(r=!0)}));o.push(e)},a=0;a<e;a++)r();return o},t}(),l=function(){function t(){}return t.prototype.init=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,i){var e=t.getPosition().x-i,n=t.getPosition().y-i,o=t.getPosition().x+i,r=t.getPosition().y+i;return this.rangeSearch(this._root,e,n,o,r,!0).filter((function(i){return i.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,i){return this.getNeighboursInRangeRectilinear(t,i).filter((function(e){return t.getPosition().subtract(e.getPosition()).magnitudeSqrd()<=Math.pow(i,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,i){if(0===t.length)return null;var e=Math.floor(t.length/2),n=i?t.sort((function(t,i){return t.getPosition().x-i.getPosition().x})):t.sort((function(t,i){return t.getPosition().y-i.getPosition().y})),o=this.constructTree(n.slice(0,e),!i),r=this.constructTree(n.slice(e+1,t.length),!i);return{agent:t[e],left:o,right:r}},t.prototype.rangeSearch=function(t,i,e,n,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,i,e,n,o,!r))),t.agent.getPosition().x>=i&&(s=s.concat(this.rangeSearch(t.left,i,e,n,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,i,e,n,o,!r))),t.agent.getPosition().y>=e&&(s=s.concat(this.rangeSearch(t.left,i,e,n,o,!r)))),t.agent.getPosition().x>=i&&t.agent.getPosition().y>=e&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),d=function(){function t(t,i,e,n){this.MAX_VELOCITY=1,this.MAX_ACCELERATION=.5,this.Id=t,this._position=i,this._goalPosition=e,this.Radius=n,this._direction=new s(0,0),this._isDone=!1,this._isStuck=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getIsDone=function(){return this._isDone},t.prototype.getIsStuck=function(){return this._isStuck},t.prototype.update=function(t,i){if(!this._isDone){var e=.5,n=this.getPreferredVelocity(e),o=this._goalPosition.subtract(this.getPosition()).magnitudeSqrd();this._isStuck=!1;for(var r,a,h=!0,c=0;c<i.length;c++)if(!(i[c].getPosition().subtract(this.getPosition()).magnitudeSqrd()>o)&&null!=(y=this.getVelocityObstacle(i[c]))&&this.isInside(n,y)){h=!1,r=y,a=c;break}if(h)return this._direction=n,this._position=this._position.add(n),void this.checkIfDone();if(null!=r){var u=this.getClosestPointOnLine(r.vertex,r.tangent1,n);if(u.magnitude()<=e){for(h=!0,c=0;c<i.length;c++)if(c!=a&&null!=(y=this.getVelocityObstacle(i[c]))&&this.isInside(u,y)){h=!1;break}if(h)return this._direction=u,this._position=this._position.add(u),void this.checkIfDone()}var g=this.getClosestPointOnLine(r.vertex,r.tangent2,n);if(u.magnitude()<=e){for(h=!0,c=0;c<i.length;c++)if(c!=a&&null!=(y=this.getVelocityObstacle(i[c]))&&this.isInside(g,y)){h=!1;break}if(h)return this._direction=g,this._position=this._position.add(g),void this.checkIfDone()}}var l=Math.sqrt(o),d=1/0,f=new s(0,0);for(c=0;c<100;c++){for(var p=new s(0,0).sample(e),m=1/0,v=0;v<i.length;v++){var y,_=i[v];if(null==(y=this.getVelocityObstacle(_))||this.isInside(p,y)){var x=this.getFirstRayCircleIntersection(_.getPosition().add(_.getDirection()),this.Radius+_.Radius,this._position,p.subtract(_.getDirection()));if(x<m&&0==(m=x))return void this.checkIfDone()}}var P;(P=m<l?100/m+n.subtract(p).magnitude():n.subtract(p).magnitude())<d&&(d=P,f=p)}0==f.magnitude()&&(this._isStuck=!0),this._direction=f,this._position=this._position.add(f),this.checkIfDone()}},t.prototype.getPreferredVelocity=function(t){var i=this._goalPosition.subtract(this._position),e=i.magnitude();return e>t?i.divide(e/t):i},t.prototype.getVelocityObstacle=function(t){var i=t.getDirection(),e=t.getPosition().subtract(this._position).add(i),n=t.Radius+this.Radius,o=i.subtract(e),r=o.magnitude();if(r<n)return null;var a=Math.acos(n/r),h=Math.atan2(o.y,o.x),c=h+a,u=h-a;return{vertex:i,tangent1:new s(e.x+n*Math.cos(c),e.y+n*Math.sin(c)),tangent2:new s(e.x+n*Math.cos(u),e.y+n*Math.sin(u))}},t.prototype.isInside=function(t,i){var e=(i.tangent1.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent1.y-i.vertex.y)*(t.x-i.vertex.x),n=(i.tangent2.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent2.y-i.vertex.y)*(t.x-i.vertex.x);return e>0&&n<0},t.prototype.getClosestPointOnLine=function(t,i,e){var n=i.normalise(),o=e.subtract(t).dot(n);return t.add(n.multiply(o))},t.prototype.getFirstRayCircleIntersection=function(t,i,e,n){var o=e.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(i,2),h=Math.pow(s,2)-4*r*a;if(h<0)return 1/0;var c=(-s-Math.sqrt(h))/2*r;return c<0?1/0:c},t.prototype.checkIfDone=function(){this._position.subtract(this._goalPosition).magnitudeSqrd()<1&&(this._isDone=!0,this._position=this._goalPosition,this._direction=new s(0,0))},t}(),f=function(){function t(t,i,e,n){this.MAX_VELOCITY=1,this.MAX_ACCELERATION=.5,this.Id=t,this._position=i,this._goalPosition=e,this.Radius=n,this._direction=new s(0,0),this._isDone=!1,this._isStuck=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getIsDone=function(){return this._isDone},t.prototype.getIsStuck=function(){return this._isStuck},t.prototype.update=function(t,i){if(!this._isDone){var e=.5,n=this.getPreferredVelocity(e),o=this._goalPosition.subtract(this.getPosition()).magnitudeSqrd();this._isStuck=!1;for(var r,a,h=!0,c=0;c<i.length;c++)if(!(i[c].getPosition().subtract(this.getPosition()).magnitudeSqrd()>o)&&null!=(y=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(n,y)){h=!1,r=y,a=c;break}if(h)return this._direction=n,this._position=this._position.add(n),void this.checkIfDone();if(null!=r){var u=this.getClosestPointOnLine(r.vertex,r.tangent1,n);if(u.magnitude()<=e){for(h=!0,c=0;c<i.length;c++)if(c!=a&&null!=(y=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(u,y)){h=!1;break}if(h)return this._direction=u,this._position=this._position.add(u),void this.checkIfDone()}var g=this.getClosestPointOnLine(r.vertex,r.tangent2,n);if(u.magnitude()<=e){for(h=!0,c=0;c<i.length;c++)if(c!=a&&null!=(y=this.getReciprocalVelocityObstacle(i[c]))&&this.isInside(g,y)){h=!1;break}if(h)return this._direction=g,this._position=this._position.add(g),void this.checkIfDone()}}var l=Math.sqrt(o),d=1/0,f=new s(0,0);for(c=0;c<100;c++){for(var p=new s(0,0).sample(e),m=1/0,v=0;v<i.length;v++){var y,_=i[v];if(null!=(y=this.getReciprocalVelocityObstacle(_))&&this.isInside(p,y)){var x=this.getFirstRayCircleIntersection(_.getPosition().add(_.getDirection()),this.Radius+_.Radius,this._position,p.multiply(2).subtract(this.getDirection()).subtract(_.getDirection()));if(x<m&&0==(m=x))return void this.checkIfDone()}}var P;(P=m<l?100/m+n.subtract(p).magnitude():n.subtract(p).magnitude())<d&&(d=P,f=p)}0==f.magnitude()&&(this._isStuck=!0),this._direction=f,this._position=this._position.add(f),this.checkIfDone()}},t.prototype.getPreferredVelocity=function(t){var i=this._goalPosition.subtract(this._position),e=i.magnitude();return e>t?i.divide(e/t):i},t.prototype.getReciprocalVelocityObstacle=function(t){var i=this.getDirection(),e=t.getDirection(),n=i.add(e).divide(2),o=t.getPosition().subtract(this._position).add(e),r=t.Radius+this.Radius,a=e.subtract(o),h=a.magnitude();if(h<r)return null;var c=Math.acos(r/h),u=Math.atan2(a.y,a.x),g=u+c,l=u-c;return{vertex:n,tangent1:new s(o.x+r*Math.cos(g),o.y+r*Math.sin(g)),tangent2:new s(o.x+r*Math.cos(l),o.y+r*Math.sin(l))}},t.prototype.isInside=function(t,i){var e=(i.tangent1.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent1.y-i.vertex.y)*(t.x-i.vertex.x),n=(i.tangent2.x-i.vertex.x)*(t.y-i.vertex.y)-(i.tangent2.y-i.vertex.y)*(t.x-i.vertex.x);return e>0&&n<0},t.prototype.getClosestPointOnLine=function(t,i,e){var n=i.normalise(),o=e.subtract(t).dot(n);return t.add(n.multiply(o))},t.prototype.getFirstRayCircleIntersection=function(t,i,e,n){var o=e.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(i,2),h=Math.pow(s,2)-4*r*a;if(h<0)return 1/0;var c=(-s-Math.sqrt(h))/2*r;return c<0?1/0:c},t.prototype.checkIfDone=function(){this._position.subtract(this._goalPosition).magnitudeSqrd()<1&&(this._isDone=!0,this._position=this._goalPosition,this._direction=new s(0,0))},t}(),p=document.getElementById("config"),m=document.getElementById("agentType"),v=document.getElementById("numberOfAgents"),y=document.getElementById("canvas"),_=document.getElementById("framerate"),x=document.getElementById("playButton"),P=document.getElementById("stepButton"),M=new n(new h(y),new l),b=!1;function w(){this.reconfigure();var t=0,i=0,e=0;window.requestAnimationFrame((function n(o){var r=o-t;t=o,b&&M.update(r),M.draw(),e++,o-i>=250&&(_.textContent="FPS: "+(1e3*e/(o-i)).toFixed(1),e=0,i=o),window.requestAnimationFrame(n)}))}function R(){(b=!b)?(x.textContent="Pause",P.disabled=!0):(x.textContent="Play",P.disabled=!1)}function I(){M.update(1e3/60)}function S(){var t;b&&this.playPause();var i,e=p.value,n=m.value,o=null!==(t=parseInt(v.value))&&void 0!==t?t:0;switch(n){case"BasicAgent":i=function(t,i,e,n){return new c(t,i,e,n)};break;case"StopAgent":i=function(t,i,e,n){return new u(t,i,e,n)};break;case"VOAgent":i=function(t,i,e,n){return new d(t,i,e,n)};break;case"RVOAgent":i=function(t,i,e,n){return new f(t,i,e,n)};break;default:throw new Error("Agent not implemented")}switch(e){case"RandomToRandom":M.init(g.RandomToRandom(o,y.width,y.height,i));break;case"RandomToLine":M.init(g.RandomToLine(o,y.width,y.height,i));break;case"CircleToCircle":M.init(g.CircleToCircle(o,y.width,y.height,i));break;case"GridToGrid":M.init(g.GridToGrid(o,y.width,y.height,i));break;default:throw new Error("Configuration not implemented")}}}},i={};function e(n){if(i[n])return i[n].exports;var o=i[n]={exports:{}};return t[n](o,o.exports,e),o.exports}return e.d=(t,i)=>{for(var n in i)e.o(i,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:i[n]})},e.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e(476)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,