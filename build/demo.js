var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={740:(t,e,i)=>{i.r(e),i.d(e,{init:()=>J,playPause:()=>tt,reconfigure:()=>it,step:()=>et,switchView:()=>$});var n,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var i=this;this._agents.forEach((function(n){n.update(t,i._agents.getNeighboursInRangeEuclidean(n,e),i._obstacles)})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t.prototype.isDone=function(){var t=!0;return this._agents.forEach((function(e){t&&(t=e.isDone())})),t},t}(),r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.toString=function(){return"("+this.x+", "+this.y+")"},t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var i=Math.sqrt(Math.random())*e,n=2*Math.PI*Math.random();return new t(this.x+i*Math.cos(n),this.y+i*Math.sin(n))},t.prototype.isLeftOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)>0},t.prototype.isRightOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)<0},t}(),s=function(){function t(t,e,i){this.vertex=t,this.tangent1=e,this.tangent2=i}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),i=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&i<0},t}(),a=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){var e=new r(0,0),i=this.Position.subtract(t.getPosition()),n=this.Radius+t.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(i.x+n*Math.cos(h),i.y+n*Math.sin(h)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,l,d)},t}(),c=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){var e=this.pointVelocityObstacle(t,this.Start),i=this.pointVelocityObstacle(t,this.End);if(null==e&&null==i)return null;if(null==e)return i;if(null==i)return e;var n=e.tangent1;e.tangent2.isLeftOf(n)&&(n=e.tangent2),i.tangent1.isLeftOf(n)&&(n=i.tangent1),i.tangent2.isLeftOf(n)&&(n=i.tangent2);var o=e.tangent1;return e.tangent2.isRightOf(o)&&(o=e.tangent2),i.tangent1.isRightOf(o)&&(o=i.tangent1),i.tangent2.isRightOf(o)&&(o=i.tangent2),new s(new r(0,0),n,o)},t.prototype.pointVelocityObstacle=function(t,e){var i=new r(0,0),n=e.subtract(t.getPosition()),o=t.Radius,a=i.subtract(n),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),h=Math.atan2(a.y,a.x),l=h+u,g=new r(n.x+o*Math.cos(l),n.y+o*Math.sin(l)),d=h-u,f=new r(n.x+o*Math.cos(d),n.y+o*Math.sin(d));return new s(i,g,f)},t}(),u=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.init=function(t){},t.prototype.render=function(t){var e=this,i=800/this.cameraDist,n=t.getAgents(),o=t.getObstacles();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(i,0,0,i,this.xPan,this.yPan),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(-1e3,-500,2e3,1e3),this.context.strokeStyle="white",this.context.lineWidth=2,o.forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)})),n.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getDirection(),n=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=i.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(i.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),h=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,i){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1])},t.getPerspectiveProjectionMatrix=function(t,e,i,n){var o=1/Math.tan(t/2),r=1/(i-n);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(i+n)*r,-1,0,0,i*n*r*2,0])},t.multiplyMatrices=function(t,e){for(var i=new Float32Array(16),n=0;n<4;n++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*n+s]*e[4*s+o];i[4*n+o]=r}return i},t}(),l=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),g=function(){function t(){}return t.getVertices=function(t,e){var i=t/2,n=e/2;return[i,-n,0,0,0,1,i,n,0,0,0,1,-i,-n,0,0,0,1,-i,n,0,0,0,1]},t.indices=[1,2,0,1,3,2],t}(),d=function(){function t(){}return t.vertices=[-.92388,-.382683,1,-.9239,-.3827,0,-.92388,-.382683,0,-.9239,-.3827,0,-.707107,-.707107,1,-.7071,-.7071,0,-.707107,-.707107,0,-.7071,-.7071,0,-.382684,-.923879,1,-0,0,1,-.382684,-.923879,0,-.3827,-.9239,0,-0,-1,1,-0,0,1,-0,-1,0,0,-1,0,.382684,-.92388,1,-0,0,1,.382684,-.92388,0,.3827,-.9239,0,.707107,-.707107,1,-0,0,1,.707107,-.707107,0,.7071,-.7071,0,.92388,-.382683,1,-0,0,1,.92388,-.382683,0,.9239,-.3827,0,1,0,1,-0,0,1,1,0,0,1,0,0,.92388,.382683,1,-0,0,1,.92388,.382683,0,.9239,.3827,0,.707107,.707107,1,-0,0,1,.707107,.707107,0,.7071,.7071,0,.382684,.92388,1,-0,0,1,.382684,.92388,0,.3827,.9239,0,0,1,1,-0,0,1,0,1,0,0,1,0,-.382683,.92388,1,-0,0,1,-.382683,.92388,0,-.3827,.9239,0,-.707107,.707107,1,-0,0,1,-.707107,.707107,0,-.7071,.7071,0,-.92388,.382683,1,-0,0,1,-.92388,.382683,0,-.9239,.3827,0,-1,0,1,-0,0,1,-1,0,0,-1,0,0,.707107,.707107,1,.7071,.7071,0,.382684,.92388,1,.3827,.9239,0,-.92388,-.382683,1,-0,0,1,-.707107,-.707107,1,-0,0,1,0,1,1,0,1,0,-.382684,-.923879,1,-.3827,-.9239,0,-0,-1,1,0,-1,0,-.382683,.92388,1,-.3827,.9239,0,-.707107,.707107,1,-.7071,.7071,0,.707107,-.707107,1,.7071,-.7071,0,.92388,-.382683,1,.9239,-.3827,0,-.92388,.382683,1,-.9239,.3827,0,-1,0,1,-1,0,0,.92388,.382683,1,.9239,.3827,0,.382684,-.92388,1,.3827,-.9239,0,1,0,1,1,0,0],t.indices=[26,35,10,18,20,22,22,24,18,24,26,18,26,28,30,30,34,35,35,4,6,6,8,10,10,12,18,12,14,18,14,16,18,26,30,35,35,6,10,18,26,10,39,23,25,40,25,27,43,27,29,44,29,31,36,21,23,33,19,21,32,17,19,45,15,17,47,13,15,42,11,13,41,9,11,46,7,9,38,5,7,37,3,5,2,1,3,0,31,1,39,36,23,40,39,25,43,40,27,44,43,29,36,33,21,33,32,19,32,45,17,45,47,15,47,42,13,42,41,11,41,46,9,46,38,7,38,37,5,37,2,3,2,0,1,0,44,31],t}(),f=function(){function t(){}return t.getVertices=function(t){var e=t.Start.subtract(t.End),i=new r(-e.y,e.x).normalise();return[t.Start.x,t.Start.y,0,i.x,i.y,0,t.End.x,t.End.y,0,i.x,i.y,0,t.Start.x,t.Start.y,1,i.x,i.y,0,t.End.x,t.End.y,1,i.x,i.y,0,t.Start.x,t.Start.y,0,-i.x,-i.y,0,t.End.x,t.End.y,0,-i.x,-i.y,0,t.Start.x,t.Start.y,1,-i.x,-i.y,0,t.End.x,t.End.y,1,-i.x,-i.y,0]},t.indices=[1,2,0,1,3,2,5,4,6,5,6,7],t}(),p=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var i=h.getZRotationMatrix(e.xRot),n=h.getXRotationMatrix(e.yRot),o=h.multiplyMatrices(i,n);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var i=h.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,i);var n=h.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var i=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(i,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform float height;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * height,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,i),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.clearColor(.53,.76,.98,1),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1}),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.heightLoc=this.gl.getUniformLocation(this.program,"height"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var o=h.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),r=h.getTranslationMatrix(0,0,-this.cameraDist),s=h.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,o),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,r),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,s)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(i))}else console.error("WebGL not supported")}return t.prototype.init=function(t){var e=g.getVertices(2e3,1e3),i=t.getObstacles().filter((function(t){return t instanceof c})).map((function(t){return t})),n=i.map((function(t){return f.getVertices(t)})).reduce((function(t,e){return t.concat(e)}),[]),o=new Float32Array(l.vertices.concat(d.vertices).concat(e).concat(n));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=l.vertices.length/6,s=r+d.vertices.length/6,a=s+e.length/6,u=i.map((function(t,e){return f.indices.map((function(t){return t+a+8*e}))})).reduce((function(t,e){return t.concat(e)}),[]),h=new Uint16Array(l.indices.concat(d.indices.map((function(t){return t+r}))).concat(g.indices.map((function(t){return t+s}))).concat(u));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute)},t.prototype.render=function(t){var e=this,i=t.getAgents(),n=t.getObstacles();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),i.forEach((function(t){var i=t.getPosition();e.gl.uniform2f(e.posVecLoc,i.x,i.y);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new r(1,0)),e.gl.uniform2f(e.dirVecLoc,n.x,n.y),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,l.indices.length,e.gl.UNSIGNED_SHORT,0)}));var o=0;n.forEach((function(t){t instanceof a?(e.gl.uniform2f(e.posVecLoc,t.Position.x,t.Position.y),e.gl.uniform2f(e.dirVecLoc,1,0),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,84),e.gl.uniform3f(e.baseColourLoc,1,1,1),e.gl.drawElements(e.gl.TRIANGLES,d.indices.length,e.gl.UNSIGNED_SHORT,l.indices.length*Uint16Array.BYTES_PER_ELEMENT)):o++})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,g.indices.length,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length)*Uint16Array.BYTES_PER_ELEMENT),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,84),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,f.indices.length*o,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length+g.indices.length)*Uint16Array.BYTES_PER_ELEMENT)},t}(),m=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var i=t.getPosition().x-e,n=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,i,n,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(i){return t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var i=Math.floor(t.length/2),n=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(n.slice(0,i),!e),r=this.constructTree(n.slice(i+1,t.length),!e);return{agent:t[i],left:o,right:r}},t.prototype.rangeSearch=function(t,e,i,n,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().y>=i&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=i&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),y=function(){function t(t,e,i){this.Id=t,this.Radius=20,this._position=e,this._direction=i(e),this._getPreferredVelocity=i,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),v=function(){function t(){}return t.FromHsv=function(t,e,i){var n=(t*=6)-Math.floor(t),o=i*(1-e),r=i*(1-e*n),s=i*(1-e*(1-n));return 0<=t&&t<1?{r:255*i,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*i,b:255*o}:2<=t&&t<3?{r:255*o,g:255*i,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*i}:4<=t&&t<5?{r:255*s,g:255*o,b:255*i}:5<=t&&t<6?{r:255*i,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),x=(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.getColour=function(){return this._isDone?v.White:v.Green},e.prototype.update=function(t){if(!this._isDone){var e=this._getPreferredVelocity(this._position),i=60*t/3e3;e.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=e,this._position=this._position.add(e.multiply(i)))}},e}(y),_=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),b=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._isStuck=!1,o}return _(e,t),e.prototype.getColour=function(){return this._isDone?v.White:this._isStuck?v.Red:v.Green},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/3e3;if(n.magnitudeSqrd()<.1)this._isDone=!0;else{this._direction=n.normalise();var r=this._position.add(this._direction.multiply(25));this._isStuck=!1;for(var s=0;s<e.length;s++)if(this.collidesAgent(e[s],r))return void(this._isStuck=!0);for(s=0;s<i.length;s++)if(this.collidesObstacle(i[s],r))return void(this._isStuck=!0);this._direction=n,this._position=this._position.add(this._direction.multiply(o))}}},e.prototype.collidesAgent=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e.prototype.collidesObstacle=function(t,e){return t instanceof a&&t.Position.subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e}(y),P=function(){function t(){}return t.getClosestPointOnLine=function(t,e,i){var n=e.normalise(),o=i.subtract(t).dot(n);return t.add(n.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,i,n){var o=i.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;if(c<0)return 1/0;var u=Math.sqrt(c),h=(-s-u)/(2*r);if(h>0)return h;var l=(-s+u)/(2*r);return l>0?l:1/0},t.getLineLineIntersection=function(t,e,i,n){var o=(t.x-e.x)*(i.y-n.y)-(t.y-e.y)*(i.x-n.x),s=((e.x-t.x)*(t.y-i.y)-(e.y-t.y)*(t.x-i.x))/o;return new r(i.x+s*(n.x-i.x),i.y+s*(n.y-i.y))},t}(),S=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),M=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._colour=v.Green,o}return S(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/4e3;if(n.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new r(0,0),void(this._colour=v.White);for(var s,u,h=!0,l=0;l<e.length;l++)if(null!=(S=this.getAgentVelocityObstacle(e[l]))&&S.contains(n)){h=!1,s=S,u=l;break}for(l=0;l<i.length;l++)if(null!=(S=i[l].getVelocityObstacle(this))&&S.contains(n)){h=!1,s=S,u=-1;break}if(h)return this._direction=n,this._position=this._position.add(this._direction.multiply(o)),void(this._colour=v.Green);if(null!=s){var g=P.getClosestPointOnLine(s.vertex,s.tangent1,n),d=P.getClosestPointOnLine(s.vertex,s.tangent2,n),f=!0,p=!0;for(l=0;l<e.length;l++)l!=u&&(null!=(S=this.getAgentVelocityObstacle(e[l]))&&S.contains(g)&&(f=!1),null!=S&&S.contains(g)&&(p=!1));for(l=0;l<i.length;l++)null!=(S=i[l].getVelocityObstacle(this))&&S.contains(g)&&(f=!1),null!=S&&S.contains(g)&&(p=!1);if(f&&p?g.subtract(n).magnitudeSqrd()<d.subtract(n).magnitudeSqrd()?this._direction=g:this._direction=d:f?this._direction=g:p&&(this._direction=d),f||p)return this._position=this._position.add(this._direction.multiply(o)),void this.setColour(n)}var m=1/0,y=new r(0,0);for(l=0;l<100;l++){for(var x=new r(0,0).sample(1),w=1/0,_=0;_<e.length;_++){var b=e[_];(null==(S=this.getAgentVelocityObstacle(b))||S.contains(x))&&(M=P.getFirstRayCircleIntersection(b.getPosition().add(b.getDirection()),this.Radius+b.Radius,this._position,x.subtract(b.getDirection())))<w&&(w=M)}for(_=0;_<i.length;_++){var S;if((b=i[_])instanceof a)(null==(S=b.getVelocityObstacle(this))||S.contains(x))&&(M=P.getFirstRayCircleIntersection(b.Position,this.Radius+b.Radius,this._position,x))<w&&(w=M);else if(b instanceof c){var M;(M=(P.getLineLineIntersection(b.Start,b.End,this._position,this._position.add(x.normalise().multiply(this.Radius))).subtract(this._position).magnitude()-this.Radius)/x.magnitude())<w&&(w=M)}}w<10&&(w=0);var R=200/w+n.subtract(x).magnitude();R<m&&(m=R,y=x)}this._direction=y,this._position=this._position.add(this._direction.multiply(o)),this.setColour(n)}},e.prototype.getAgentVelocityObstacle=function(t){var e=t.getDirection(),i=t.getPosition().subtract(this._position).add(e),n=t.Radius+this.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(i.x+n*Math.cos(h),i.y+n*Math.sin(h)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,l,d)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),i=e>1?0:(1-e)/3;this._colour=v.FromHsv(i,1,1)},e}(y),R=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),E=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return R(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=e.add(i).divide(2),o=t.getPosition().subtract(this._position).add(i),a=t.Radius+this.Radius,c=i.subtract(o),u=c.magnitude();if(u<a)return null;var h=Math.acos(a/u),l=Math.atan2(c.y,c.x),g=l+h,d=new r(o.x+a*Math.cos(g),o.y+a*Math.sin(g)),f=l-h,p=new r(o.x+a*Math.cos(f),o.y+a*Math.sin(f));return new s(n,d,p)},e}(M),L=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return L(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=i,o=e.add(i).divide(2),a=t.getPosition().subtract(this._position),c=a.add(i),u=t.Radius+this.Radius,h=i.subtract(c),l=h.magnitude();if(l<u)return null;var g,d=Math.acos(u/l),f=Math.atan2(h.y,h.x),p=f+d,m=new r(c.x+u*Math.cos(p),c.y+u*Math.sin(p)),y=f-d,v=new r(c.x+u*Math.cos(y),c.y+u*Math.sin(y));return g=(a.x-i.x)*(e.y-i.y)-(a.y-i.y)*(e.x-i.x)>0?P.getLineLineIntersection(n,n.add(m),o,o.add(v)):P.getLineLineIntersection(n,n.add(v),o,o.add(m)),new s(g,m,v)},e}(M),T=function(){function t(){}return t.getAgent=function(t,e,i,n){switch(t){case"BasicAgent":return new w(e,i,n);case"StopAgent":return new b(e,i,n);case"VOAgent":return new M(e,i,n);case"RVOAgent":return new E(e,i,n);case"HRVOAgent":return new A(e,i,n);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),O=function(){function t(){}return t.getConfiguration=function(t,e,i,n,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,i,n,o);case"RandomToLine":return this.RandomToLine(e,i,n,o);case"CircleToCircle":return this.CircleToCircle(e,i,n,o);case"GridToGrid":return this.GridToGrid(e,i,n,o);case"Bollards":return this.Bollards(e,i,n,o);case"Bottleneck":return this.Bottleneck(e,i,n,o);case"BottleneckWithNav":return this.BottleneckWithNav(e,i,n,o);case"Slalom":return this.Slalom(e,i,n,o);case"SlalomWithNav":return this.SlalomWithNav(e,i,n,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))})),a=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))}));n=Math.min(s.length,a.length);for(var c=0;c<n;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))}));n=s.length;for(var a=0;a<n;a++){var c=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(new r(((a+1)/(n+1)-.5)*e,0)));o.push(c)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,i,n){for(var o=[],s=i/2-25,a=0;a<n;a++){var c=2*Math.PI*a/n,u=T.getAgent(t,a,new r(s*Math.cos(c),s*Math.sin(c)),this.preferredVelocityFromGoalPosition(new r(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI))));o.push(u)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,i,n){for(var o=[],s=Math.ceil(Math.sqrt(n/2)),a=90,c=30-e/2,u=(s-1)/2*a,h=0;h<n;h++){var l=Math.floor(h/2),g=Math.floor(l/s),d=l%s;if(h%2==0){var f=T.getAgent(t,h,new r(c+(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(-c-d*a,u-g*a)));o.push(f)}else f=T.getAgent(t,h,new r(-c-(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(c+d*a,u-g*a))),o.push(f)}return{agents:o,obstacles:[]}},t.Bollards=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var c=0;c<n;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(s[c].add(new r(e/2+200,0))));o.push(u)}var h=[];for(c=0;c<5;c++)h.push(new a(new r(0,120*c-240),20));return{agents:o,obstacles:h}},t.Bottleneck=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var a=0;a<n;a++){var u=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(s[a].add(new r(e/2+200,0))));o.push(u)}var h=[];return h.push(new c(new r(0,-500),new r(0,-100))),h.push(new c(new r(0,500),new r(0,100))),{agents:o,obstacles:h}},t.BottleneckWithNav=function(t,e,i,n){var o=this,s=[],a=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=a.length;for(var u=function(i){var n=T.getAgent(t,i,a[i],(function(t){return t.x<0?t.magnitudeSqrd()>Math.pow(90,2)?o.preferredVelocityFromGoalPosition(new r(0,0))(t):new r(1,0):o.preferredVelocityFromGoalPosition(a[i].add(new r(e/2+200,0)))(t)}));s.push(n)},h=0;h<n;h++)u(h);var l=[];return l.push(new c(new r(0,-500),new r(0,-100))),l.push(new c(new r(0,500),new r(0,100))),{agents:s,obstacles:l}},t.Slalom=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-250,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var a=i/2-200,u=0;u<n;u++){var h=T.getAgent(t,u,s[u],this.preferredVelocityFromGoalPosition(s[u].add(new r(e/2+250,0))));o.push(h)}var l=[];return l.push(new c(new r(-200,500),new r(-200,-a))),l.push(new c(new r(0,-500),new r(0,a))),l.push(new c(new r(200,500),new r(200,-a))),{agents:o,obstacles:l}},t.SlalomWithNav=function(t,e,i,n){var o=this,s=[],a=this.poissonDiskSample(e/2-250,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=a.length;for(var u=i/2-200,h=u+100,l=function(i){var n=T.getAgent(t,i,a[i],(function(t){return t.x<=-200?t.subtract(new r(-200,-h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(-200,-h))(t):t.x<=0?t.subtract(new r(0,h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(0,h))(t):t.x<=200?t.subtract(new r(200,-h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(200,-h))(t):o.preferredVelocityFromGoalPosition(new r(a[i].x+e/2+250,-a[i].y))(t)}));s.push(n)},g=0;g<n;g++)l(g);var d=[];return d.push(new c(new r(-200,500),new r(-200,-u))),d.push(new c(new r(0,-500),new r(0,u))),d.push(new c(new r(200,500),new r(200,-u))),{agents:s,obstacles:d}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var i=t.subtract(e);return i.magnitudeSqrd()<1?i:i.normalise()}},t.poissonDiskSample=function(t,e,i,n){for(var o=[],s=function(){for(var s,c=!0,u=0;c;)if(u++,c=!1,s=new r(t*Math.random(),e*Math.random()),o.forEach((function(t){s.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(c=!0)})),u>1e3)return console.warn("Failed to find poisson disk sample (placed "+a+"/"+i+")."),{value:o};o.push(s)},a=0;a<i;a++){var c=s();if("object"==typeof c)return c.value}return o},t}(),I=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d")}return t.prototype.init=function(t){var e=this;this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height),this.context.strokeStyle="white",this.context.lineWidth=2,t.getObstacles().forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)}))},t.prototype.render=function(t){var e=this;t.getAgents().forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.fillRect(e.x,-e.y,1,1)},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),C=function(){function t(){this._logging=!1,this._timeStep=0,this._agentCollisions=[],this._obstacleCollisions=[],this._frameTimes=[]}return t.prototype.start=function(){this._logging=!0,this._timeStep=0,this._frameTimes=[],this._agentCollisions=[],this._obstacleCollisions=[],console.log("Started logging")},t.prototype.stop=function(){this._logging&&(this._logging=!1,console.log("Stopped logging"),console.log("Timesteps: "+this._timeStep),console.log("Total frame time: "+(this._frameTimes.reduce((function(t,e){return t+e}),0)/1e3).toFixed(3)+" seconds"),console.log("Frame times: "+this._frameTimes),console.log("Total agent collisions: "+this._agentCollisions.reduce((function(t,e){return t+e}),0)),console.log("Agent collisions: "+this._agentCollisions),console.log("Total obstacle collisions: "+this._obstacleCollisions.reduce((function(t,e){return t+e}),0)),console.log("Obstacle collisions: "+this._obstacleCollisions))},t.prototype.log=function(t,e,i){var n=this;this._logging&&(this._frameTimes[this._timeStep]=this.round3dp(i),this._agentCollisions[this._timeStep]=0,this._obstacleCollisions[this._timeStep]=0,t.forEach((function(i){t.getNeighboursInRangeRectilinear(i,100).forEach((function(t){t.Id<i.Id&&t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&n._agentCollisions[n._timeStep]++})),e.forEach((function(t){if(t instanceof c){var e=P.getFirstRayCircleIntersection(i.getPosition(),i.Radius,t.Start,t.End.subtract(t.Start));e>0&&e<1&&n._obstacleCollisions[n._timeStep]++}else t instanceof a&&t.Position.subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&n._obstacleCollisions[n._timeStep]++}))})),this._timeStep++)},t.prototype.round3dp=function(t){return Math.round(1e3*(t+Number.EPSILON))/1e3},t}(),D=document.getElementById("config"),V=document.getElementById("agentType"),F=document.getElementById("range"),B=document.getElementById("numberOfAgents"),N=document.getElementById("canvas2d"),k=document.getElementById("canvas3d"),G=document.getElementById("canvasTrace"),U=document.getElementById("framerate"),j=document.getElementById("playButton"),Y=document.getElementById("stepButton"),q=new o(new m([])),W=new u(N),X=new p(k),H=new I(G),z=W,K=new C,Q=!1,Z=200;function J(){this.reconfigure();var t=0,e=0,i=0;window.requestAnimationFrame((function n(o){var r=o-t;t=o,Q&&(q.update(r,Z),K.log(q.getAgents(),q.getObstacles(),r)),q.isDone()&&(nt(),K.stop()),z.render(q),i++,o-e>=250&&(U.textContent="FPS: "+(1e3*i/(o-e)).toFixed(1),i=0,e=o),window.requestAnimationFrame(n)}))}function $(t){switch(t){case"2D":document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=W,N.style.display="block",k.style.display="none",G.style.display="none";break;case"3D":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=X,N.style.display="none",k.style.display="block",G.style.display="none";break;case"Trace":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),z=H,N.style.display="none",k.style.display="none",G.style.display="block";break;default:throw new Error('Unknown view "'+t+'"')}z.init(q)}function tt(){(Q=!Q)?(K.start(),K.log(q.getAgents(),q.getObstacles(),0),j.textContent="Pause",Y.disabled=!0):(K.stop(),j.textContent="Play",Y.disabled=!1)}function et(){q.update(1e3/60,Z),q.isDone()&&nt()}function it(){var t,e;Q=!1,j.textContent="Play",j.disabled=!1,Y.disabled=!1;var i=D.value,n=V.value;Z=null!==(t=parseInt(F.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(B.value))&&void 0!==e?e:0;q.init(O.getConfiguration(i,n,N.width,N.height,o)),z.init(q)}function nt(){Q=!1,j.disabled=!0,Y.disabled=!0}}},e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}return i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(740)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9TaW11bGF0aW9uLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL1ZlY3RvcjJmLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL1ZlbG9jaXR5T2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL29ic3RhY2xlcy9MaW5lT2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1JlbmRlcmVyMkQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvTWF0NGYudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL0FnZW50TWVzaC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9tZXNoZXMvRmxvb3JNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL21lc2hlcy9DeWxpbmRlck1lc2gudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL1dhbGxNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL3JlbmRlcmVycy9SZW5kZXJlcjNELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0FnZW50VHJlZS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9Db2xvdXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL1N0b3BBZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9HZW9tZXRyeS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvUlZPQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0hSVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudEZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvQ29uZmlndXJhdGlvbkZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1RyYWNlUmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbG9nZ2Vycy9TaW1wbGVMb2dnZXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvZGVtby50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJuYW1lcyI6WyJhZ2VudHMiLCJ0aGlzIiwiX2FnZW50cyIsImluaXQiLCJjb25maWd1cmF0aW9uIiwidXBkYXRlIiwiX29ic3RhY2xlcyIsIm9ic3RhY2xlcyIsImRlbHRhVCIsInJhbmdlIiwiZm9yRWFjaCIsImFnZW50IiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4iLCJnZXRBbGwiLCJnZXRBZ2VudHMiLCJnZXRPYnN0YWNsZXMiLCJpc0RvbmUiLCJkb25lIiwieCIsInkiLCJ0b1N0cmluZyIsImNvcHkiLCJ2IiwiVmVjdG9yMmYiLCJhZGQiLCJzdWJ0cmFjdCIsIm11bHRpcGx5IiwicyIsImRpdmlkZSIsImRvdCIsIm1hZ25pdHVkZVNxcmQiLCJtYWduaXR1ZGUiLCJNYXRoIiwic3FydCIsIm5vcm1hbGlzZSIsIm0iLCJzYW1wbGUiLCJtYXhSYWRpdXMiLCJyYWRpdXMiLCJyYW5kb20iLCJhbmdsZSIsIlBJIiwiY29zIiwic2luIiwiaXNMZWZ0T2YiLCJwb2ludCIsImlzUmlnaHRPZiIsInZlcnRleCIsInRhbmdlbnQxIiwidGFuZ2VudDIiLCJjb250YWlucyIsInZlbG9jaXR5IiwiZGV0ZXJtaW5hbnQxIiwiZGV0ZXJtaW5hbnQyIiwicG9zaXRpb24iLCJQb3NpdGlvbiIsIlJhZGl1cyIsImdldFZlbG9jaXR5T2JzdGFjbGUiLCJ2ZWxvY2l0eUIiLCJjZW50cmUiLCJnZXRQb3NpdGlvbiIsImRpZmYiLCJkaXN0IiwidGhldGEiLCJhY29zIiwicGhpIiwiYXRhbjIiLCJhbmdsZTEiLCJhbmdsZTIiLCJWZWxvY2l0eU9ic3RhY2xlIiwic3RhcnQiLCJlbmQiLCJTdGFydCIsIkVuZCIsInZvU3RhcnQiLCJwb2ludFZlbG9jaXR5T2JzdGFjbGUiLCJ2b0VuZCIsImxlZnQiLCJyaWdodCIsImNhbnZhcyIsImNhbWVyYURpc3QiLCJtb3VzZURvd24iLCJldmVudCIsImRyYWciLCJvbGRYIiwicGFnZVgiLCJvbGRZIiwicGFnZVkiLCJtb3VzZVVwIiwicHJldmVudERlZmF1bHQiLCJtb3VzZU1vdmUiLCJ4UGFuIiwieVBhbiIsIm1vdXNlU2Nyb2xsIiwiZGVsdGFZIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwiX3NpbXVsYXRpb24iLCJyZW5kZXIiLCJzaW11bGF0aW9uIiwic2NhbGVGYWN0b3IiLCJzZXRUcmFuc2Zvcm0iLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwib2JzdGFjbGUiLCJDaXJjbGVPYnN0YWNsZSIsImRyYXdDaXJjbGVPYnN0YWNsZSIsIkxpbmVPYnN0YWNsZSIsImRyYXdMaW5lT2JzdGFjbGUiLCJkcmF3QWdlbnQiLCJkaXJlY3Rpb24iLCJnZXREaXJlY3Rpb24iLCJjb2xvdXIiLCJnZXRDb2xvdXIiLCJiZWdpblBhdGgiLCJyIiwiZyIsImIiLCJhcmMiLCJtb3ZlVG8iLCJuZXdQb3MiLCJsaW5lVG8iLCJzdHJva2UiLCJkIiwiU1FSVDFfMiIsImdldElkZW50aXR5TWF0cml4IiwiRmxvYXQzMkFycmF5IiwiZ2V0WFJvdGF0aW9uTWF0cml4IiwiYyIsImdldFlSb3RhdGlvbk1hdHJpeCIsImdldFpSb3RhdGlvbk1hdHJpeCIsImdldFRyYW5zbGF0aW9uTWF0cml4IiwieiIsImdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeCIsImZvdiIsImFzcGVjdFJhdGlvIiwibmVhciIsImZhciIsImYiLCJ0YW4iLCJpIiwibXVsdGlwbHlNYXRyaWNlcyIsImEiLCJyZXN1bHQiLCJqIiwibnVtIiwiayIsInZlcnRpY2VzIiwiaW5kaWNlcyIsImdldFZlcnRpY2VzIiwidyIsImgiLCJ3YWxsIiwibm9ybWFsIiwieFJvdCIsInlSb3QiLCJ4Um90TWF0IiwiTWF0NGYiLCJ5Um90TWF0Iiwid29ybGRNYXRyaXgiLCJnbCIsInVuaWZvcm1NYXRyaXg0ZnYiLCJ3b3JsZE1hdExvYyIsInZpZXdNYXRyaXgiLCJ2aWV3TWF0TG9jIiwicHJvamVjdGlvbk1hdHJpeCIsInByb2pNYXRMb2MiLCJ2ZXJ0ZXhTaGFkZXIiLCJjcmVhdGVTaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiZnJhZ21lbnRTaGFkZXIiLCJGUkFHTUVOVF9TSEFERVIiLCJzaGFkZXJTb3VyY2UiLCJjb21waWxlU2hhZGVyIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJwcm9ncmFtIiwiY3JlYXRlUHJvZ3JhbSIsImF0dGFjaFNoYWRlciIsImxpbmtQcm9ncmFtIiwiZ2V0UHJvZ3JhbVBhcmFtZXRlciIsIkxJTktfU1RBVFVTIiwidmFsaWRhdGVQcm9ncmFtIiwiVkFMSURBVEVfU1RBVFVTIiwidXNlUHJvZ3JhbSIsImVuYWJsZSIsIkRFUFRIX1RFU1QiLCJjbGVhckNvbG9yIiwiQ1VMTF9GQUNFIiwiZnJvbnRGYWNlIiwiQ0NXIiwiY3VsbEZhY2UiLCJCQUNLIiwiZ2V0VW5pZm9ybUxvY2F0aW9uIiwicG9zVmVjTG9jIiwiZGlyVmVjTG9jIiwicmFkaXVzTG9jIiwiaGVpZ2h0TG9jIiwiYmFzZUNvbG91ckxvYyIsImNvbnNvbGUiLCJlcnJvciIsImdldFByb2dyYW1JbmZvTG9nIiwiZ2V0U2hhZGVySW5mb0xvZyIsImZsb29yVmVydHMiLCJGbG9vck1lc2giLCJ3YWxscyIsImZpbHRlciIsIm1hcCIsIndhbGxWZXJ0cyIsIldhbGxNZXNoIiwicmVkdWNlIiwiYWNjIiwidmFsIiwiY29uY2F0IiwiQWdlbnRNZXNoIiwiQ3lsaW5kZXJNZXNoIiwiVmVydGV4QnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiYmluZEJ1ZmZlciIsIkFSUkFZX0JVRkZFUiIsImJ1ZmZlckRhdGEiLCJTVEFUSUNfRFJBVyIsImN5bGluZGVyT2Zmc2V0IiwibGVuZ3RoIiwiZmxvb3JPZmZzZXQiLCJ3YWxsc09mZnNldCIsIndhbGxJbmRpY2VzIiwiX3dhbGwiLCJVaW50MTZBcnJheSIsIkluZGV4QnVmZmVyIiwiRUxFTUVOVF9BUlJBWV9CVUZGRVIiLCJwb3NpdGlvbkF0dHJpYnV0ZSIsImdldEF0dHJpYkxvY2F0aW9uIiwidmVydGV4QXR0cmliUG9pbnRlciIsIkZMT0FUIiwiQllURVNfUEVSX0VMRU1FTlQiLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsIm5vcm1hbEF0dHJpYnV0ZSIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJwb3MiLCJ1bmlmb3JtMmYiLCJkaXIiLCJ1bmlmb3JtMWYiLCJjb2xvciIsInVuaWZvcm0zZiIsImRyYXdFbGVtZW50cyIsIlRSSUFOR0xFUyIsIlVOU0lHTkVEX1NIT1JUIiwid2FsbENvdW50IiwiX3Jvb3QiLCJjb25zdHJ1Y3RUcmVlIiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhciIsIm1pblgiLCJtaW5ZIiwibWF4WCIsIm1heFkiLCJyYW5nZVNlYXJjaCIsIm90aGVyIiwiSWQiLCJmdW4iLCJ4QXhpcyIsIm1pZCIsImZsb29yIiwic29ydGVkIiwic29ydCIsInNsaWNlIiwicm9vdCIsInJlcyIsInB1c2giLCJpZCIsInN0YXJ0UG9zaXRpb24iLCJnZXRQcmVmZXJyZWRWZWxvY2l0eSIsIl9wb3NpdGlvbiIsIl9kaXJlY3Rpb24iLCJfZ2V0UHJlZmVycmVkVmVsb2NpdHkiLCJfaXNEb25lIiwiRnJvbUhzdiIsImZyYWN0IiwiUCIsIlEiLCJUIiwiV2hpdGUiLCJSZWQiLCJHcmVlbiIsIkNvbG91ciIsInByZWZlcnJlZFZlbG9jaXR5Iiwic3RlcFNpemUiLCJBZ2VudCIsIl9pc1N0dWNrIiwibmVpZ2hib3VycyIsImhlYWRpbmciLCJjb2xsaWRlc0FnZW50IiwiY29sbGlkZXNPYnN0YWNsZSIsImdldENsb3Nlc3RQb2ludE9uTGluZSIsImxpbmVQb2ludCIsImxpbmVEaXJlY3Rpb24iLCJkaXN0YW5jZSIsImdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uIiwib3JpZ2luIiwiZGVsdGEiLCJkaXNjcmltIiwiSW5maW5pdHkiLCJzcXJ0RGlzY3JpbSIsImQxIiwiZDIiLCJnZXRMaW5lTGluZUludGVyc2VjdGlvbiIsImExIiwiYTIiLCJiMSIsImIyIiwidSIsIl9jb2xvdXIiLCJjb2xsaXNpb24iLCJzYWZlIiwidmVsb2NpdHlPYnN0YWNsZSIsImdldEFnZW50VmVsb2NpdHlPYnN0YWNsZSIsIkdlb21ldHJ5IiwibGVmdFNhZmUiLCJyaWdodFNhZmUiLCJzZXRDb2xvdXIiLCJtaW5QZW5hbHR5IiwiYmVzdFZlbG9jaXR5IiwibWluVGltZVRvQ29sbGlzaW9uIiwidGltZVRvQ29sbGlzaW9uIiwicGVuYWx0eSIsInN0cmVzcyIsImh1ZSIsInZlbG9jaXR5QSIsIlZPQWdlbnQiLCJ2b1ZlcnRleCIsInJ2b1ZlcnRleCIsInBvc2l0aW9uQiIsImdldEFnZW50IiwidHlwZSIsIkJhc2ljQWdlbnQiLCJTdG9wQWdlbnQiLCJSVk9BZ2VudCIsIkhSVk9BZ2VudCIsIkVycm9yIiwiZ2V0Q29uZmlndXJhdGlvbiIsImFnZW50VHlwZSIsIm51bWJlck9mQWdlbnRzIiwiUmFuZG9tVG9SYW5kb20iLCJSYW5kb21Ub0xpbmUiLCJDaXJjbGVUb0NpcmNsZSIsIkdyaWRUb0dyaWQiLCJCb2xsYXJkcyIsIkJvdHRsZW5lY2siLCJCb3R0bGVuZWNrV2l0aE5hdiIsIlNsYWxvbSIsIlNsYWxvbVdpdGhOYXYiLCJzdGFydFBvc2l0aW9ucyIsInBvaXNzb25EaXNrU2FtcGxlIiwiZ29hbFBvc2l0aW9ucyIsIm1pbiIsIkFnZW50RmFjdG9yeSIsInByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbiIsIl93aWR0aCIsIl9oZWlnaHQiLCJncmlkU2l6ZSIsImNlaWwiLCJvZmZzZXQiLCJpZHgiLCJyb3ciLCJjb2wiLCJnYXBXaWR0aCIsIndhbGxIZWlnaHQiLCJtaWRHYXAiLCJnYXBIZWlnaHQiLCJnb2FsUG9zaXRpb24iLCJnb2FsRGlyZWN0aW9uIiwieFJhbmdlIiwieVJhbmdlIiwibiIsInRocmVzaG9sZCIsInNhbXBsZXMiLCJyZXNhbXBsZSIsImF0dGVtcHRzIiwid2FybiIsIl9sb2dnaW5nIiwiX3RpbWVTdGVwIiwiX2FnZW50Q29sbGlzaW9ucyIsIl9vYnN0YWNsZUNvbGxpc2lvbnMiLCJfZnJhbWVUaW1lcyIsImxvZyIsInN0b3AiLCJ0b0ZpeGVkIiwicm91bmQzZHAiLCJuZWlnaGJvdXIiLCJ0Iiwicm91bmQiLCJOdW1iZXIiLCJFUFNJTE9OIiwiY29uZmlnU2VsZWN0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFnZW50VHlwZVNlbGVjdCIsInJhbmdlSW5wdXQiLCJudW1iZXJPZkFnZW50c0lucHV0IiwiY2FudmFzMmQiLCJjYW52YXMzZCIsImNhbnZhc1RyYWNlIiwiZnJhbWVyYXRlIiwicGxheUJ1dHRvbiIsInN0ZXBCdXR0b24iLCJTaW11bGF0aW9uIiwiQWdlbnRUcmVlIiwicmVuZGVyZXIyZCIsIlJlbmRlcmVyMkQiLCJyZW5kZXJlcjNkIiwiUmVuZGVyZXIzRCIsInJlbmRlcmVyVHJhY2UiLCJUcmFjZVJlbmRlcmVyIiwicmVuZGVyZXIiLCJsb2dnZXIiLCJTaW1wbGVMb2dnZXIiLCJwbGF5IiwicmVjb25maWd1cmUiLCJsYXN0UmVuZGVyIiwibGFzdEZQUyIsImZyYW1lcyIsIndpbmRvdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImxvb3AiLCJ0aW1lc3RhbXAiLCJ0ZXh0Q29udGVudCIsInN3aXRjaFZpZXciLCJ2aWV3IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwic3R5bGUiLCJkaXNwbGF5IiwicGxheVBhdXNlIiwiZGlzYWJsZWQiLCJzdGVwIiwiY29uZmlnIiwidmFsdWUiLCJwYXJzZUludCIsIkNvbmZpZ3VyYXRpb25GYWN0b3J5IiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyJdLCJtYXBwaW5ncyI6InNLQUlBLEksRUFBQSxhQUlFLFdBQVlBLEdBQ1ZDLEtBQUtDLFFBQVVGLEVBb0NuQixPQWpDRSxZQUFBRyxLQUFBLFNBQUtDLEdBQ0hILEtBQUtDLFFBQVFHLE9BQU9E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LEdBQ2xDLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFBSyxFQUNwQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQzFDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFFBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEdBQU0sR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNuQyxTQUFXLFFBQVUsR0FBTSxFQUFLLEVBQUssRUFDdEMsU0FBVyxRQUFVLEVBQUssR0FBTSxFQUFLLEdBQ3BDLFNBQVcsUUFBVSxFQUFLLEdBQU0sRUFBSyxFQUN0QyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQzNDLFNBQVcsUUFBVSxRQUFVLEdBQU0sRUFBSyxHQUN6QyxTQUFXLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFDM0MsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLEtBQU8sU0FBVSxHQUFNLEVBQUssR0FDdkMsU0FBVyxLQUFPLFVBQVcsRUFBSyxFQUFLLEVBQ3hDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxFQUN2QyxTQUFXLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDdEMsU0FBVyxLQUFPLFNBQVUsR0FBTSxFQUFLLEVBQ3ZDLFNBQVcsS0FBTyxTQUFVLEVBQUssRUFBSyxHQUNyQyxTQUFXLEtBQU8sU0FBVSxHQUFNLEVBQUssR0FDdkMsU0FBVyxLQUFPLFVBQVcsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsS0FBTyxVQUFXLEVBQUssRUFBSyxHQUN0QyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssR0FDckMsUUFBVSxLQUFPLFVBQVcsRUFBSyxFQUFLLEdBQ3RDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUN0QyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDckMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3JDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDckMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUMxQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDekMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxHQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDMUMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLE9BQVMsUUFBVSxRQUFVLEdBQU0sRUFBSyxHQUN4QyxPQUFTLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDekMsT0FBUyxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQ3hDLE9BQVMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN2QyxPQUFTLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDeEMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3RDLE9BQVMsUUFBVSxTQUFVLEdBQU0sRUFBSyxHQUN4QyxPQUFTLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDeEMsT0FBUyxRQUFVLFNBQVcsRUFBSyxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxPQUFTLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDeEMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLE9BQVMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN2QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDdkMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN0QyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDcEMsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUFLLEVBQ3JDLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNwQyxRQUFVLFFBQVUsRUFBSyxHQUFNLEVBQUssR0FDbkMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUFNLEdBQ3BDLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUNyQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQU0sRUFDcEMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ2xDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxRQUFVLEdBQU0sRUFBSyxHQUN4QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQzFDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxFQUMxQyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFNBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxRQUFVLEdBQU0sRUFBSyxHQUN6QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzFDLFFBQVUsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUN6QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxTQUFXLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDckMsU0FBVyxRQUFVLEVBQUssRUFBSyxFQUFLLEVBQ3JDLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbkMsU0FBVyxRQUFVLEVBQUssRUFBSyxHQUFNLEdBQ3JDLFNBQVcsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUN0QyxTQUFXLFFBQVUsRUFBSyxFQUFLLEdBQU0sRUFDckMsU0FBVyxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ25DLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDMUMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQzNDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQzFDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDM0MsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBSXBDLEVBQUFDLFFBQVUsQ0FDZixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixFQUFHLEVBQUcsRUFDTixFQUFHLEVBQUcsRUFDTixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixFQUFHLEdBQUksRUFDUCxJQUFLLEdBQUksR0FDVCxJQUFLLElBQUssR0FDVixJQUFLLElBQUssSUFDVixJQUFLLEdBQUksSUFDVCxHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLEdBQUksSUFDVCxHQUFJLElBQUssR0FDVCxHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixHQUFJLElBQUssSUFDVCxJQUFLLEdBQUksR0FDVCxHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixFQUFHLEVBQUcsRUFDTixFQUFHLEVBQUcsRUFDTixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixFQUFHLEdBQUksR0FDUCxJQUFLLElBQUssR0FDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssR0FDVixHQUFJLEdBQUksR0FDUixHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLEdBQUksR0FDVCxHQUFJLElBQUssSUFDVCxHQUFJLEdBQUksR0FDUixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixJQUFLLElBQUssSUFDVixHQUFJLEdBQUksR0FDUixHQUFJLEdB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QUFNLEVBQUssR0FDM0IsUUFBVSxPQUFTLEdBQU0sTUFBUSxNQUFRLEdBQ3pDLFFBQVUsUUFBVSxHQUFNLE1BQVEsTUFBUSxFQUMzQyxTQUFXLFFBQVUsRUFBSyxPQUFTLE1BQVEsRUFDM0MsUUFBVSxRQUFVLEVBQUssT0FBUyxNQUFRLEdBQ3pDLE9BQVMsUUFBVSxHQUFNLE1BQVEsTUFBUSxHQUN6QyxFQUFLLEVBQUssR0FBTSxFQUFLLEVBQUssRUFDM0IsT0FBUyxRQUFVLEVBQUssTUFBUSxNQUFRLEVBQ3hDLFNBQVcsT0FBUyxFQUFLLE9BQVMsTUFBUSxFQUMxQyxFQUFLLEVBQUssRUFBSyxFQUFLLEVBQUssR0FJcEIsRUFBQUMsUUFBVSxDQUNmLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksRUFBRyxFQUNQLEVBQUcsRUFBRyxHQUNOLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksRUFBRyxHQUNQLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksRUFBRyxHQUNQLEdBQUksRUFBRyxFQUNQLEdBQUksRUFBRyxFQUNQLEdBQUksRUFBRyxFQUNQLEVBQUcsRUFBRyxFQUNOLEVBQUcsR0FBSSxFQUNQLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUks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clYsRUFBV3BHLEtBQ1QyYixFQUFxQm5HLGlCQUNuQmdHLEVBQ0EvRixFQUNBMkQsRUFBU3RULE1BQ1RzVCxFQUFTclQsT0FDVDJQLElBSUp3RSxFQUFTbGEsS0FBS29HLEdBR2hCLFNBQVNrUyxLQUNQK0IsR0FBTyxFQUNQYixFQUFXOEIsVUFBVyxFQUN0QjdCLEVBQVc2QixVQUFXLEtDdEtwQk0sRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLEdBQUdGLEVBQXlCRSxHQUMzQixPQUFPRixFQUF5QkUsR0FBVUMsUUFHM0MsSUFBSUMsRUFBU0osRUFBeUJFLEdBQVksQ0FHakRDLFFBQVMsSUFPVixPQUhBRSxFQUFvQkgsR0FBVUUsRUFBUUEsRUFBT0QsUUFBU0YsR0FHL0NHLEVBQU9ELFFDakJmLE9DRkFGLEVBQW9CL1QsRUFBSSxDQUFDaVUsRUFBU0csS0FDakMsSUFBSSxJQUFJQyxLQUFPRCxFQUNYTCxFQUFvQk8sRUFBRUYsRUFBWUMsS0FBU04sRUFBb0JPLEVBQUVMLEVBQVNJLElBQzVFRSxPQUFPQyxlQUFlUCxFQUFTSSxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VOLEVBQW9CTyxFQUFJLENBQUNLLEVBQUtDLElBQVNMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2pGYixFQUFvQnZVLEVBQUt5VSxJQUNILG9CQUFYZSxRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVQLEVBQVNlLE9BQU9DLFlBQWEsQ0FBRXRCLE1BQU8sV0FFN0RZLE9BQU9DLGVBQWVQLEVBQVMsYUFBYyxDQUFFTixPQUFPLEtIRmhESSxFQUFvQixNIiwiZmlsZSI6ImRlbW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4vSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL0NvbmZpZ3VyYXRpb25GYWN0b3J5XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU2ltdWxhdGlvbiB7XHJcbiAgcHJpdmF0ZSBfYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uO1xyXG4gIHByaXZhdGUgX29ic3RhY2xlczogSU9ic3RhY2xlW107XHJcblxyXG4gIGNvbnN0cnVjdG9yKGFnZW50czogSUFnZW50Q29sbGVjdGlvbikge1xyXG4gICAgdGhpcy5fYWdlbnRzID0gYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgaW5pdChjb25maWd1cmF0aW9uOiBDb25maWd1cmF0aW9uKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMudXBkYXRlKGNvbmZpZ3VyYXRpb24uYWdlbnRzKTtcclxuICAgIHRoaXMuX29ic3RhY2xlcyA9IGNvbmZpZ3VyYXRpb24ub2JzdGFjbGVzO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCByYW5nZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgYWdlbnQudXBkYXRlKFxyXG4gICAgICAgIGRlbHRhVCxcclxuICAgICAgICB0aGlzLl9hZ2VudHMuZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4oYWdlbnQsIHJhbmdlKSxcclxuICAgICAgICB0aGlzLl9vYnN0YWNsZXNcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFJlcXVpcmVkIHRvIHJlLWNvbnN0cnVjdCBhZ2VudCB0cmVlXHJcbiAgICB0aGlzLl9hZ2VudHMudXBkYXRlKHRoaXMuX2FnZW50cy5nZXRBbGwoKSk7XHJcbiAgfVxyXG5cclxuICBnZXRBZ2VudHMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgZ2V0T2JzdGFjbGVzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29ic3RhY2xlcztcclxuICB9XHJcblxyXG4gIGlzRG9uZSgpIHtcclxuICAgIGxldCBkb25lID0gdHJ1ZTtcclxuICAgIHRoaXMuX2FnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICBkb25lICYmPSBhZ2VudC5pc0RvbmUoKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGRvbmU7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBWZWN0b3IyZiB7XHJcbiAgeDogbnVtYmVyO1xyXG4gIHk6IG51bWJlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIpIHtcclxuICAgIHRoaXMueCA9IHg7XHJcbiAgICB0aGlzLnkgPSB5O1xyXG4gIH1cclxuXHJcbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgKCR7dGhpcy54fSwgJHt0aGlzLnl9KWA7XHJcbiAgfVxyXG5cclxuICBjb3B5KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih2LngsIHYueSk7XHJcbiAgfVxyXG5cclxuICBhZGQodjogVmVjdG9yMmYpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCArIHYueCwgdGhpcy55ICsgdi55KTtcclxuICB9XHJcblxyXG4gIHN1YnRyYWN0KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih0aGlzLnggLSB2LngsIHRoaXMueSAtIHYueSk7XHJcbiAgfVxyXG5cclxuICBtdWx0aXBseShzOiBudW1iZXIpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCAqIHMsIHRoaXMueSAqIHMpO1xyXG4gIH1cclxuXHJcbiAgZGl2aWRlKHM6IG51bWJlcik6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYodGhpcy54IC8gcywgdGhpcy55IC8gcyk7XHJcbiAgfVxyXG5cclxuICBkb3QodjogVmVjdG9yMmYpIHtcclxuICAgIHJldHVybiB0aGlzLnggKiB2LnggKyB0aGlzLnkgKiB2Lnk7XHJcbiAgfVxyXG5cclxuICBtYWduaXR1ZGVTcXJkKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy54ICoqIDIgKyB0aGlzLnkgKiogMjtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLm1hZ25pdHVkZVNxcmQoKSk7XHJcbiAgfVxyXG5cclxuICBub3JtYWxpc2UoKTogVmVjdG9yMmYge1xyXG4gICAgbGV0IG0gPSB0aGlzLm1hZ25pdHVkZSgpO1xyXG4gICAgcmV0dXJuIG0gPT0gMCA/IG5ldyBWZWN0b3IyZigwLCAwKSA6IHRoaXMuZGl2aWRlKG0pO1xyXG4gIH1cclxuXHJcbiAgc2FtcGxlKG1heFJhZGl1czogbnVtYmVyKSB7XHJcbiAgICAvLyBVbmlmb3JtbHkgc2FtcGxlIHRoZSBjaXJjbGUgY2VudHJlZCBhdCB0aGlzIHBvaW50IHdpdGggcmFkaXVzIG1heFJhZGl1c1xyXG4gICAgbGV0IHJhZGl1cyA9IE1hdGguc3FydChNYXRoLnJhbmRvbSgpKSAqIG1heFJhZGl1cztcclxuICAgIGxldCBhbmdsZSA9IDIgKiBNYXRoLlBJICogTWF0aC5yYW5kb20oKTtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIHRoaXMueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKSxcclxuICAgICAgdGhpcy55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBwb2ludCBsaWVzIHRvIHRoZSBsZWZ0IG9mIHRoZSBsaW5lIGZyb20gdGhlXHJcbiAgLy8gb3JpZ2luIHRvIHRoaXMgdmVjdG9yLCBvdGhlcndpc2UgcmV0dXJucyBmYWxzZVxyXG4gIGlzTGVmdE9mKHBvaW50OiBWZWN0b3IyZik6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIChwb2ludC55IC0gdGhpcy55KSAtIHRoaXMueSAqIChwb2ludC54IC0gdGhpcy54KSA+IDA7XHJcbiAgfVxyXG5cclxuICAvLyBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIHBvaW50IGxpZXMgdG8gdGhlIHJpZ2h0IG9mIHRoZSBsaW5lIGZyb20gdGhlXHJcbiAgLy8gb3JpZ2luIHRvIHRoaXMgdmVjdG9yLCBvdGhlcndpc2UgcmV0dXJucyBmYWxzZVxyXG4gIGlzUmlnaHRPZihwb2ludDogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnggKiAocG9pbnQueSAtIHRoaXMueSkgLSB0aGlzLnkgKiAocG9pbnQueCAtIHRoaXMueCkgPCAwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgdmVydGV4OiBWZWN0b3IyZjtcclxuICB0YW5nZW50MTogVmVjdG9yMmY7XHJcbiAgdGFuZ2VudDI6IFZlY3RvcjJmO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih2ZXJ0ZXg6IFZlY3RvcjJmLCB0YW5nZW50MTogVmVjdG9yMmYsIHRhbmdlbnQyOiBWZWN0b3IyZikge1xyXG4gICAgdGhpcy52ZXJ0ZXggPSB2ZXJ0ZXg7XHJcbiAgICB0aGlzLnRhbmdlbnQxID0gdGFuZ2VudDE7XHJcbiAgICB0aGlzLnRhbmdlbnQyID0gdGFuZ2VudDI7XHJcbiAgfVxyXG5cclxuICBjb250YWlucyh2ZWxvY2l0eTogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIC8vIEZpcnN0IGhhbGYtcGxhbmVcclxuICAgIGNvbnN0IGRldGVybWluYW50MSA9XHJcbiAgICAgICh0aGlzLnRhbmdlbnQxLnggLSB0aGlzLnZlcnRleC54KSAqICh2ZWxvY2l0eS55IC0gdGhpcy52ZXJ0ZXgueSkgLVxyXG4gICAgICAodGhpcy50YW5nZW50MS55IC0gdGhpcy52ZXJ0ZXgueSkgKiAodmVsb2NpdHkueCAtIHRoaXMudmVydGV4LngpO1xyXG5cclxuICAgIC8vIFNlY29uZCBoYWxmLXBsYW5lXHJcbiAgICBjb25zdCBkZXRlcm1pbmFudDIgPVxyXG4gICAgICAodGhpcy50YW5nZW50Mi54IC0gdGhpcy52ZXJ0ZXgueCkgKiAodmVsb2NpdHkueSAtIHRoaXMudmVydGV4LnkpIC1cclxuICAgICAgKHRoaXMudGFuZ2VudDIueSAtIHRoaXMudmVydGV4LnkpICogKHZlbG9jaXR5LnggLSB0aGlzLnZlcnRleC54KTtcclxuXHJcbiAgICByZXR1cm4gZGV0ZXJtaW5hbnQxID4gMCAmJiBkZXRlcm1pbmFudDIgPCAwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vSU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIENpcmNsZU9ic3RhY2xlIGltcGxlbWVudHMgSU9ic3RhY2xlIHtcclxuICByZWFkb25seSBQb3NpdGlvbjogVmVjdG9yMmY7XHJcbiAgcmVhZG9ubHkgUmFkaXVzOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHBvc2l0aW9uOiBWZWN0b3IyZiwgcmFkaXVzOiBudW1iZXIpIHtcclxuICAgIHRoaXMuUG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgIHRoaXMuUmFkaXVzID0gcmFkaXVzO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmVsb2NpdHlPYnN0YWNsZShhZ2VudDogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHtcclxuICAgIC8vIFJlcHJlc2VudCBjaXJjdWxhciBvYnN0YWNsZSBhcyBhbiBhZ2VudCB3aXRoIHplcm8gdmVsb2NpdHlcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoZSBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSB0aGlzLlBvc2l0aW9uLnN1YnRyYWN0KGFnZW50LmdldFBvc2l0aW9uKCkpO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQjtcclxuICAgIGNvbnN0IHJhZGl1cyA9IHRoaXMuUmFkaXVzICsgYWdlbnQuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGluZU9ic3RhY2xlIGltcGxlbWVudHMgSU9ic3RhY2xlIHtcclxuICByZWFkb25seSBTdGFydDogVmVjdG9yMmY7XHJcbiAgcmVhZG9ubHkgRW5kOiBWZWN0b3IyZjtcclxuXHJcbiAgY29uc3RydWN0b3Ioc3RhcnQ6IFZlY3RvcjJmLCBlbmQ6IFZlY3RvcjJmKSB7XHJcbiAgICB0aGlzLlN0YXJ0ID0gc3RhcnQ7XHJcbiAgICB0aGlzLkVuZCA9IGVuZDtcclxuICB9XHJcblxyXG4gIGdldFZlbG9jaXR5T2JzdGFjbGUoYWdlbnQ6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgICBjb25zdCB2b1N0YXJ0ID0gdGhpcy5wb2ludFZlbG9jaXR5T2JzdGFjbGUoYWdlbnQsIHRoaXMuU3RhcnQpO1xyXG4gICAgY29uc3Qgdm9FbmQgPSB0aGlzLnBvaW50VmVsb2NpdHlPYnN0YWNsZShhZ2VudCwgdGhpcy5FbmQpO1xyXG5cclxuICAgIGlmICh2b1N0YXJ0ID09IG51bGwgJiYgdm9FbmQgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH0gZWxzZSBpZiAodm9TdGFydCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiB2b0VuZDtcclxuICAgIH0gZWxzZSBpZiAodm9FbmQgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gdm9TdGFydDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgbGVmdCA9IHZvU3RhcnQudGFuZ2VudDE7XHJcbiAgICBpZiAodm9TdGFydC50YW5nZW50Mi5pc0xlZnRPZihsZWZ0KSkge1xyXG4gICAgICBsZWZ0ID0gdm9TdGFydC50YW5nZW50MjtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50MS5pc0xlZnRPZihsZWZ0KSkge1xyXG4gICAgICBsZWZ0ID0gdm9FbmQudGFuZ2VudDE7XHJcbiAgICB9XHJcbiAgICBpZiAodm9FbmQudGFuZ2VudDIuaXNMZWZ0T2YobGVmdCkpIHtcclxuICAgICAgbGVmdCA9IHZvRW5kLnRhbmdlbnQyO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByaWdodCA9IHZvU3RhcnQudGFuZ2VudDE7XHJcbiAgICBpZiAodm9TdGFydC50YW5nZW50Mi5pc1JpZ2h0T2YocmlnaHQpKSB7XHJcbiAgICAgIHJpZ2h0ID0gdm9TdGFydC50YW5nZW50MjtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50MS5pc1JpZ2h0T2YocmlnaHQpKSB7XHJcbiAgICAgIHJpZ2h0ID0gdm9FbmQudGFuZ2VudDE7XHJcbiAgICB9XHJcbiAgICBpZiAodm9FbmQudGFuZ2VudDIuaXNSaWdodE9mKHJpZ2h0KSkge1xyXG4gICAgICByaWdodCA9IHZvRW5kLnRhbmdlbnQyO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgMCksIGxlZnQsIHJpZ2h0KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcG9pbnRWZWxvY2l0eU9ic3RhY2xlKFxyXG4gICAgYWdlbnQ6IEFnZW50LFxyXG4gICAgcG9zaXRpb246IFZlY3RvcjJmXHJcbiAgKTogVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgICAvLyBSZXByZXNlbnQgY2lyY3VsYXIgb2JzdGFjbGUgYXMgYW4gYWdlbnQgd2l0aCB6ZXJvIHZlbG9jaXR5XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGUgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gcG9zaXRpb24uc3VidHJhY3QoYWdlbnQuZ2V0UG9zaXRpb24oKSk7XHJcblxyXG4gICAgLy8gRmluZCBNaW5rb3dza2kgc3VtIG9mIGFnZW50c1xyXG4gICAgY29uc3QgY2VudHJlID0gcG9zaXRpb25CO1xyXG4gICAgY29uc3QgcmFkaXVzID0gYWdlbnQuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IElSZW5kZXJlciB9IGZyb20gXCIuLi9JUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuLi9TaW11bGF0aW9uXCI7XHJcbmltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IENpcmNsZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9DaXJjbGVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBMaW5lT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0xpbmVPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlbmRlcmVyMkQgaW1wbGVtZW50cyBJUmVuZGVyZXIge1xyXG4gIHByaXZhdGUgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuICBwcml2YXRlIGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcclxuXHJcbiAgLy8gQ2FtZXJhIGNvbnRyb2xzXHJcbiAgcHJpdmF0ZSBkcmFnOiBib29sZWFuO1xyXG4gIHByaXZhdGUgb2xkWDogbnVtYmVyO1xyXG4gIHByaXZhdGUgb2xkWTogbnVtYmVyO1xyXG4gIHByaXZhdGUgeFBhbjogbnVtYmVyO1xyXG4gIHByaXZhdGUgeVBhbjogbnVtYmVyO1xyXG4gIHByaXZhdGUgY2FtZXJhRGlzdCA9IDgwMDsgLy8gU3RhcnQgY2FtZXJhIDgwMCAncHgnIGF3YXlcclxuXHJcbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCkge1xyXG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XHJcbiAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICB0aGlzLnhQYW4gPSB0aGlzLmNhbnZhcy53aWR0aCAvIDI7XHJcbiAgICB0aGlzLnlQYW4gPSB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyO1xyXG5cclxuICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lcnNcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5tb3VzZURvd24sIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIHRoaXMubW91c2VVcCwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsIHRoaXMubW91c2VVcCwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB0aGlzLm1vdXNlTW92ZSwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsIHRoaXMubW91c2VTY3JvbGwsIHsgcGFzc2l2ZTogZmFsc2UgfSk7XHJcbiAgfVxyXG5cclxuICBpbml0KF9zaW11bGF0aW9uOiBTaW11bGF0aW9uKSB7fVxyXG5cclxuICByZW5kZXIoc2ltdWxhdGlvbjogU2ltdWxhdGlvbikge1xyXG4gICAgY29uc3Qgc2NhbGVGYWN0b3IgPSA4MDAgLyB0aGlzLmNhbWVyYURpc3Q7XHJcbiAgICBjb25zdCBhZ2VudHMgPSBzaW11bGF0aW9uLmdldEFnZW50cygpO1xyXG4gICAgY29uc3Qgb2JzdGFjbGVzID0gc2ltdWxhdGlvbi5nZXRPYnN0YWNsZXMoKTtcclxuXHJcbiAgICAvLyBDbGVhciBiYWNrZ3JvdW5kXHJcbiAgICB0aGlzLmNvbnRleHQuc2V0VHJhbnNmb3JtKDEsIDAsIDAsIDEsIDAsIDApO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmdiKDEzNSwgMTk0LCAyNTApXCI7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIHRoaXMuY29udGV4dC5jYW52YXMud2lkdGgsXHJcbiAgICAgIHRoaXMuY29udGV4dC5jYW52YXMuaGVpZ2h0XHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oXHJcbiAgICAgIHNjYWxlRmFjdG9yLFxyXG4gICAgICAwLFxyXG4gICAgICAwLFxyXG4gICAgICBzY2FsZUZhY3RvcixcclxuICAgICAgdGhpcy54UGFuLFxyXG4gICAgICB0aGlzLnlQYW5cclxuICAgICk7XHJcblxyXG4gICAgLy8gRHJhdyBmbG9vclxyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmdiKDUxLCA1MSwgNTEpXCI7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoLTEwMDAsIC01MDAsIDIwMDAsIDEwMDApO1xyXG5cclxuICAgIC8vIERyYXcgb2JzdGFjbGVzXHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSBcIndoaXRlXCI7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVdpZHRoID0gMjtcclxuICAgIG9ic3RhY2xlcy5mb3JFYWNoKChvYnN0YWNsZSkgPT4ge1xyXG4gICAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlKTtcclxuICAgICAgfSBlbHNlIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0xpbmVPYnN0YWNsZShvYnN0YWNsZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIERyYXcgYWdlbnRzXHJcbiAgICBhZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgdGhpcy5kcmF3QWdlbnQoYWdlbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRyYXdBZ2VudChhZ2VudDogQWdlbnQpOiB2b2lkIHtcclxuICAgIGNvbnN0IHBvc2l0aW9uID0gYWdlbnQuZ2V0UG9zaXRpb24oKTtcclxuICAgIGNvbnN0IGRpcmVjdGlvbiA9IGFnZW50LmdldERpcmVjdGlvbigpO1xyXG4gICAgY29uc3QgY29sb3VyID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZVN0eWxlID0gYHJnYigke2NvbG91ci5yfSwgJHtjb2xvdXIuZ30sICR7Y29sb3VyLmJ9KWA7XHJcblxyXG4gICAgLy8geSBwb3NpdGlvbiBpbnZlcnRlZCB0byBtYXRjaCAzRCB2aWV3XHJcbiAgICB0aGlzLmNvbnRleHQuYXJjKHBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCBhZ2VudC5SYWRpdXMsIDAsIDIgKiBNYXRoLlBJKTtcclxuXHJcbiAgICBsZXQgbWFnbml0dWRlID0gZGlyZWN0aW9uLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKG1hZ25pdHVkZSAhPT0gMCkge1xyXG4gICAgICB0aGlzLmNvbnRleHQubW92ZVRvKHBvc2l0aW9uLngsIC1wb3NpdGlvbi55KTtcclxuICAgICAgbGV0IG5ld1BvcyA9IHBvc2l0aW9uLmFkZChcclxuICAgICAgICBkaXJlY3Rpb24uZGl2aWRlKG1hZ25pdHVkZSkubXVsdGlwbHkoYWdlbnQuUmFkaXVzKVxyXG4gICAgICApO1xyXG4gICAgICB0aGlzLmNvbnRleHQubGluZVRvKG5ld1Bvcy54LCAtbmV3UG9zLnkpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlOiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5hcmMoXHJcbiAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgIC1vYnN0YWNsZS5Qb3NpdGlvbi55LCAvLyB5IHBvc2l0aW9uIGludmVydGVkIHRvIG1hdGNoIDNEIHZpZXdcclxuICAgICAgb2JzdGFjbGUuUmFkaXVzLFxyXG4gICAgICAwLFxyXG4gICAgICAyICogTWF0aC5QSVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBkID0gb2JzdGFjbGUuUmFkaXVzICogTWF0aC5TUVJUMV8yO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuUG9zaXRpb24ueCAtIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgLSBkKTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuUG9zaXRpb24ueCArIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgKyBkKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggKyBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55IC0gZCk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggLSBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55ICsgZCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3TGluZU9ic3RhY2xlKG9ic3RhY2xlOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlN0YXJ0LngsIC1vYnN0YWNsZS5TdGFydC55KTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuRW5kLngsIC1vYnN0YWNsZS5FbmQueSk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBtb3VzZURvd24gPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZyA9IHRydWU7XHJcbiAgICB0aGlzLm9sZFggPSBldmVudC5wYWdlWDtcclxuICAgIHRoaXMub2xkWSA9IGV2ZW50LnBhZ2VZO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VVcCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gZmFsc2U7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHRoaXMueFBhbiArPSBldmVudC5wYWdlWCAtIHRoaXMub2xkWDtcclxuICAgIHRoaXMueVBhbiArPSBldmVudC5wYWdlWSAtIHRoaXMub2xkWTtcclxuXHJcbiAgICB0aGlzLm9sZFggPSBldmVudC5wYWdlWDtcclxuICAgIHRoaXMub2xkWSA9IGV2ZW50LnBhZ2VZO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VTY3JvbGwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcclxuICAgIHRoaXMuY2FtZXJhRGlzdCArPSBldmVudC5kZWx0YVk7XHJcbiAgICBpZiAodGhpcy5jYW1lcmFEaXN0IDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuY2FtZXJhRGlzdCA9IDAuMTtcclxuICAgIH1cclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIE1hdDRmIHtcclxuICBzdGF0aWMgZ2V0SWRlbnRpdHlNYXRyaXgoKTogRmxvYXQzMkFycmF5IHtcclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRYUm90YXRpb25NYXRyaXgoYW5nbGU6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBzID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgY29uc3QgYyA9IE1hdGguY29zKGFuZ2xlKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgMCwgYywgcywgMCxcclxuICAgICAgMCwtcywgYywgMCxcclxuICAgICAgMCwgMCwgMCwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0WVJvdGF0aW9uTWF0cml4KGFuZ2xlOiBudW1iZXIpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcyA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgIGNvbnN0IGMgPSBNYXRoLmNvcyhhbmdsZSk7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIGMsIDAsLXMsIDAsXHJcbiAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgIHMsIDAsIGMsIDAsXHJcbiAgICAgIDAsIDAsIDAsIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFpSb3RhdGlvbk1hdHJpeChhbmdsZTogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IHMgPSBNYXRoLnNpbihhbmdsZSk7XHJcbiAgICBjb25zdCBjID0gTWF0aC5jb3MoYW5nbGUpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICBjLCBzLCAwLCAwLFxyXG4gICAgIC1zLCBjLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRUcmFuc2xhdGlvbk1hdHJpeCh4OiBudW1iZXIsIHk6IG51bWJlciwgejogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICB4LCB5LCB6LCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRQZXJzcGVjdGl2ZVByb2plY3Rpb25NYXRyaXgoXHJcbiAgICBmb3Y6IG51bWJlcixcclxuICAgIGFzcGVjdFJhdGlvOiBudW1iZXIsXHJcbiAgICBuZWFyOiBudW1iZXIsXHJcbiAgICBmYXI6IG51bWJlclxyXG4gICk6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBmID0gMS4wIC8gTWF0aC50YW4oZm92IC8gMik7XHJcbiAgICBjb25zdCBpID0gMS4wIC8gKG5lYXIgLSBmYXIpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICBmIC8gYXNwZWN0UmF0aW8sIDAsICAgICAgICAgICAgICAgICAgMCwgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgMCwgZiwgICAgICAgICAgICAgICAgICAwLCAgMCxcclxuICAgICAgICAgICAgICAgICAgICAwLCAwLCAgIChuZWFyICsgZmFyKSAqIGksIC0xLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsIG5lYXIgKiBmYXIgKiBpICogMiwgIDBcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIG11bHRpcGx5TWF0cmljZXMoYTogRmxvYXQzMkFycmF5LCBiOiBGbG9hdDMyQXJyYXkpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCA0OyBqKyspIHtcclxuICAgICAgICBsZXQgbnVtID0gMDtcclxuICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IDQ7IGsrKykge1xyXG4gICAgICAgICAgbnVtICs9IGFbaSAqIDQgKyBrXSAqIGJbayAqIDQgKyBqXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzdWx0W2kgKiA0ICsgal0gPSBudW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQWdlbnRNZXNoIHtcclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgdmVydGljZXMgPSBbXHJcbiAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgNC4wMjUwODcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgMy40OTM0NjUsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4yMjc4ODEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMy4yNDc0MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAzLjI0NzQwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gIF07XHJcblxyXG4gIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gIHN0YXRpYyBpbmRpY2VzID0gW1xyXG4gICAgNjgsIDY0LCA2NixcclxuICAgIDY1LCA3NCwgNzIsXHJcbiAgICA3NSwgNzYsIDczLFxyXG4gICAgNzksIDY3LCA3NyxcclxuICAgIDYsIDAsIDIsXHJcbiAgICAzLCA1LCA3LFxyXG4gICAgOTEsIDg0LCA5NCxcclxuICAgIDkyLCA5MCwgOTUsXHJcbiAgICA4MywgMTMsIDg1LFxyXG4gICAgODAsIDE1LCA4NyxcclxuICAgIDEyLCA4MSwgODgsXHJcbiAgICA4LCAxMSwgOSxcclxuICAgIDEwMCwgOTYsIDk4LFxyXG4gICAgMTAzLCAxMDQsIDk3LFxyXG4gICAgMTA3LCAxMDgsIDEwNSxcclxuICAgIDExMSwgOTksIDEwOSxcclxuICAgIDIyLCAxNiwgMTgsXHJcbiAgICAxOSwgMjEsIDIzLFxyXG4gICAgMTE2LCAxMTQsIDExMixcclxuICAgIDEyMiwgMTI0LCAxMjAsXHJcbiAgICAxMjMsIDExMywgMTE1LFxyXG4gICAgMTI3LCAyNCwgMTE5LFxyXG4gICAgMjksIDExNywgMjUsXHJcbiAgICAzMSwgMjYsIDI3LFxyXG4gICAgMTMyLCAxMjgsIDEzMCxcclxuICAgIDEzNSwgMTM2LCAxMjksXHJcbiAgICAxMzksIDE0MCwgMTM3LFxyXG4gICAgMTQzLCAxMzEsIDE0MSxcclxuICAgIDM4LCAzMiwgMzQsXHJcbiAgICAzNSwgMzcsIDM5LFxyXG4gICAgMTQ0LCAxNDgsIDE0NixcclxuICAgIDE1MiwgMTUxLCAxNDUsXHJcbiAgICAxNTYsIDE1NSwgMTUzLFxyXG4gICAgMTQ3LCAxNTksIDE1NyxcclxuICAgIDQwLCA0NiwgNDIsXHJcbiAgICA0NSwgNDMsIDQ3LFxyXG4gICAgMTYyLCAxNjQsIDE2MCxcclxuICAgIDE3MiwgMTcwLCAxNjgsXHJcbiAgICAxNjEsIDE3MSwgMTYzLFxyXG4gICAgNDgsIDE3NSwgMTY3LFxyXG4gICAgMTY1LCA1MywgNDksXHJcbiAgICA1MCwgNTUsIDUxLFxyXG4gICAgMTc2LCAxODAsIDE3OCxcclxuICAgIDE4NCwgMTgzLCAxNzcsXHJcbiAgICAxODgsIDE4NywgMTg1LFxyXG4gICAgMTc5LCAxOTEsIDE4OSxcclxuICAgIDU2LCA2MiwgNTgsXHJcbiAgICA2MSwgNTksIDYzLFxyXG4gICAgNjgsIDcwLCA2NCxcclxuICAgIDY1LCA3MSwgNzQsXHJcbiAgICA3NSwgNzgsIDc2LFxyXG4gICAgNzksIDY5LCA2NyxcclxuICAgIDYsIDQsIDAsXHJcbiAgICAzLCAxLCA1LFxyXG4gICAgOTEsIDg2LCA4NCxcclxuICAgIDkyLCA4OSwgOTAsXHJcbiAgICA4MywgOTMsIDEzLFxyXG4gICAgODAsIDgyLCAxNSxcclxuICAgIDEyLCAxNCwgODEsXHJcbiAgICA4LCAxMCwgMTEsXHJcbiAgICAxMDAsIDEwMiwgOTYsXHJcbiAgICAxMDMsIDEwNiwgMTA0LFxyXG4gICAgMTA3LCAxMTAsIDEwOCxcclxuICAgIDExMSwgMTAxLCA5OSxcclxuICAgIDIyLCAyMCwgMTYsXHJcbiAgICAxOSwgMTcsIDIxLFxyXG4gICAgMTE2LCAxMTgsIDExNCxcclxuICAgIDEyMiwgMTI2LCAxMjQsXHJcbiAgICAxMjMsIDEyMSwgMTEzLFxyXG4gICAgMTI3LCAyOCwgMjQsXHJcbiAgICAyOSwgMTI1LCAxMTcsXHJcbiAgICAzMSwgMzAsIDI2LFxyXG4gICAgMTMyLCAxMzQsIDEyOCxcclxuICAgIDEzNSwgMTM4LCAxMzYsXHJcbiAgICAxMzksIDE0MiwgMTQwLFxyXG4gICAgMTQzLCAxMzMsIDEzMSxcclxuICAgIDM4LCAzNiwgMzIsXHJcbiAgICAzNSwgMzMsIDM3LFxyXG4gICAgMTQ0LCAxNTAsIDE0OCxcclxuICAgIDE1MiwgMTU0LCAxNTEsXHJcbiAgICAxNTYsIDE1OCwgMTU1LFxyXG4gICAgMTQ3LCAxNDksIDE1OSxcclxuICAgIDQwLCA0NCwgNDYsXHJcbiAgICA0NSwgNDEsIDQzLFxyXG4gICAgMTYyLCAxNjYsIDE2NCxcclxuICAgIDE3MiwgMTc0LCAxNzAsXHJcbiAgICAxNjEsIDE2OSwgMTcxLFxyXG4gICAgNDgsIDUyLCAxNzUsXHJcbiAgICAxNjUsIDE3MywgNTMsXHJcbiAgICA1MCwgNTQsIDU1LFxyXG4gICAgMTc2LCAxODIsIDE4MCxcclxuICAgIDE4NCwgMTg2LCAxODMsXHJcbiAgICAxODgsIDE5MCwgMTg3LFxyXG4gICAgMTc5LCAxODEsIDE5MSxcclxuICAgIDU2LCA2MCwgNjIsXHJcbiAgICA2MSwgNTcsIDU5LFxyXG4gIF07XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIEZsb29yTWVzaCB7XHJcbiAgc3RhdGljIGdldFZlcnRpY2VzKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XHJcbiAgICBjb25zdCB3ID0gd2lkdGggLyAyO1xyXG4gICAgY29uc3QgaCA9IGhlaWdodCAvIDI7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gW1xyXG4gICAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgICAgdywgLWgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgICAgIHcsICBoLCAwLjAsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAgIC13LCAtaCwgMC4wLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgICAtdywgIGgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIF07XHJcbiAgfVxyXG5cclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgaW5kaWNlcyA9IFtcclxuICAgIDEsIDIsIDAsXHJcbiAgICAxLCAzLCAyLFxyXG4gIF1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ3lsaW5kZXJNZXNoIHtcclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgdmVydGljZXMgPSBbXHJcbiAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgLTAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAtMC45MjM5LCAtMC4zODI3LCAwLjAsXHJcbiAgICAtMC45MjM4OCwgLTAuMzgyNjgzLCAwLjAsIC0wLjkyMzksIC0wLjM4MjcsIDAuMCxcclxuICAgIC0wLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIC0wLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIC0wLjcwNzEwNywgLTAuNzA3MTA3LCAwLjAsIC0wLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIC0wLjM4MjY4NCwgLTAuOTIzODc5LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMzgyNjg0LCAtMC45MjM4NzksIDAuMCwgLTAuMzgyNywgLTAuOTIzOSwgMC4wLFxyXG4gICAgLTAuMCwgLTEuMCwgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjAsIC0xLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjM4MjY4NCwgLTAuOTIzODgsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjM4MjY4NCwgLTAuOTIzODgsIDAuMCwgMC4zODI3LCAtMC45MjM5LCAwLjAsXHJcbiAgICAwLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC43MDcxMDcsIC0wLjcwNzEwNywgMC4wLCAwLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIDAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuOTIzODgsIC0wLjM4MjY4MywgMC4wLCAwLjkyMzksIC0wLjM4MjcsIDAuMCxcclxuICAgIDEuMCwgMC4wLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMS4wLCAwLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC45MjM4OCwgMC4zODI2ODMsIDAuMCwgMC45MjM5LCAwLjM4MjcsIDAuMCxcclxuICAgIDAuNzA3MTA3LCAwLjcwNzEwNywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNzA3MTA3LCAwLjcwNzEwNywgMC4wLCAwLjcwNzEsIDAuNzA3MSwgMC4wLFxyXG4gICAgMC4zODI2ODQsIDAuOTIzODgsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjM4MjY4NCwgMC45MjM4OCwgMC4wLCAwLjM4MjcsIDAuOTIzOSwgMC4wLFxyXG4gICAgMC4wLCAxLjAsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjAsIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMzgyNjgzLCAwLjkyMzg4LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMzgyNjgzLCAwLjkyMzg4LCAwLjAsIC0wLjM4MjcsIDAuOTIzOSwgMC4wLFxyXG4gICAgLTAuNzA3MTA3LCAwLjcwNzEwNywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjcwNzEwNywgMC43MDcxMDcsIDAuMCwgLTAuNzA3MSwgMC43MDcxLCAwLjAsXHJcbiAgICAtMC45MjM4OCwgMC4zODI2ODMsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC45MjM4OCwgMC4zODI2ODMsIDAuMCwgLTAuOTIzOSwgMC4zODI3LCAwLjAsXHJcbiAgICAtMS4wLCAwLjAsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgMC43MDcxLCAwLjcwNzEsIDAuMCxcclxuICAgIDAuMzgyNjg0LCAwLjkyMzg4LCAxLjAsIDAuMzgyNywgMC45MjM5LCAwLjAsXHJcbiAgICAtMC45MjM4OCwgLTAuMzgyNjgzLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuNzA3MTA3LCAtMC43MDcxMDcsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjAsIDEuMCwgMS4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMzgyNjg0LCAtMC45MjM4NzksIDEuMCwgLTAuMzgyNywgLTAuOTIzOSwgMC4wLFxyXG4gICAgLTAuMCwgLTEuMCwgMS4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjM4MjY4MywgMC45MjM4OCwgMS4wLCAtMC4zODI3LCAwLjkyMzksIDAuMCxcclxuICAgIC0wLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgLTAuNzA3MSwgMC43MDcxLCAwLjAsXHJcbiAgICAwLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIDAuNzA3MSwgLTAuNzA3MSwgMC4wLFxyXG4gICAgMC45MjM4OCwgLTAuMzgyNjgzLCAxLjAsIDAuOTIzOSwgLTAuMzgyNywgMC4wLFxyXG4gICAgLTAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIC0wLjkyMzksIDAuMzgyNywgMC4wLFxyXG4gICAgLTEuMCwgMC4wLCAxLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC45MjM4OCwgMC4zODI2ODMsIDEuMCwgMC45MjM5LCAwLjM4MjcsIDAuMCxcclxuICAgIDAuMzgyNjg0LCAtMC45MjM4OCwgMS4wLCAwLjM4MjcsIC0wLjkyMzksIDAuMCxcclxuICAgIDEuMCwgMC4wLCAxLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgXTtcclxuXHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIGluZGljZXMgPSBbXHJcbiAgICAyNiwgMzUsIDEwLFxyXG4gICAgMTgsIDIwLCAyMixcclxuICAgIDIyLCAyNCwgMTgsXHJcbiAgICAyNCwgMjYsIDE4LFxyXG4gICAgMjYsIDI4LCAzMCxcclxuICAgIDMwLCAzNCwgMzUsXHJcbiAgICAzNSwgNCwgNixcclxuICAgIDYsIDgsIDEwLFxyXG4gICAgMTAsIDEyLCAxOCxcclxuICAgIDEyLCAxNCwgMTgsXHJcbiAgICAxNCwgMTYsIDE4LFxyXG4gICAgMjYsIDMwLCAzNSxcclxuICAgIDM1LCA2LCAxMCxcclxuICAgIDE4LCAyNiwgMTAsXHJcbiAgICAzOSwgMjMsIDI1LFxyXG4gICAgNDAsIDI1LCAyNyxcclxuICAgIDQzLCAyNywgMjksXHJcbiAgICA0NCwgMjksIDMxLFxyXG4gICAgMzYsIDIxLCAyMyxcclxuICAgIDMzLCAxOSwgMjEsXHJcbiAgICAzMiwgMTcsIDE5LFxyXG4gICAgNDUsIDE1LCAxNyxcclxuICAgIDQ3LCAxMywgMTUsXHJcbiAgICA0MiwgMTEsIDEzLFxyXG4gICAgNDEsIDksIDExLFxyXG4gICAgNDYsIDcsIDksXHJcbiAgICAzOCwgNSwgNyxcclxuICAgIDM3LCAzLCA1LFxyXG4gICAgMiwgMSwgMyxcclxuICAgIDAsIDMxLCAxLFxyXG4gICAgMzksIDM2LCAyMyxcclxuICAgIDQwLCAzOSwgMjUsXHJcbiAgICA0MywgNDAsIDI3LFxyXG4gICAgNDQsIDQzLCAyOSxcclxuICAgIDM2LCAzMywgMjEsXHJcbiAgICAzMywgMzIsIDE5LFxyXG4gICAgMzIsIDQ1LCAxNyxcclxuICAgIDQ1LCA0NywgMTUsXHJcbiAgICA0NywgNDIsIDEzLFxyXG4gICAgNDIsIDQxLCAxMSxcclxuICAgIDQxLCA0NiwgOSxcclxuICAgIDQ2LCAzOCwgNyxcclxuICAgIDM4LCAzNywgNSxcclxuICAgIDM3LCAyLCAzLFxyXG4gICAgMiwgMCwgMSxcclxuICAgIDAsIDQ0LCAzMSxcclxuICBdO1xyXG59XHJcbiIsImltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV2FsbE1lc2gge1xyXG4gIHN0YXRpYyBnZXRWZXJ0aWNlcyh3YWxsOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIGNvbnN0IGRpcmVjdGlvbiA9IHdhbGwuU3RhcnQuc3VidHJhY3Qod2FsbC5FbmQpO1xyXG4gICAgY29uc3Qgbm9ybWFsID0gbmV3IFZlY3RvcjJmKC1kaXJlY3Rpb24ueSwgZGlyZWN0aW9uLngpLm5vcm1hbGlzZSgpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIFtcclxuICAgICAgLy8gUG9zaXRpb24gKyBub3JtYWxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDAuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDAuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDEuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDEuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDAuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDAuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDEuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDEuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgIF07XHJcbiAgfVxyXG5cclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgaW5kaWNlcyA9IFtcclxuICAgICAgMSwgMiwgMCxcclxuICAgICAgMSwgMywgMixcclxuICAgICAgNSwgNCwgNixcclxuICAgICAgNSwgNiwgNyxcclxuICAgIF1cclxufVxyXG4iLCJpbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi4vSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFNpbXVsYXRpb24gfSBmcm9tIFwiLi4vU2ltdWxhdGlvblwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBNYXQ0ZiB9IGZyb20gXCIuLi9NYXQ0ZlwiO1xyXG5pbXBvcnQgeyBBZ2VudE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0FnZW50TWVzaFwiO1xyXG5pbXBvcnQgeyBGbG9vck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0Zsb29yTWVzaFwiO1xyXG5pbXBvcnQgeyBDeWxpbmRlck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0N5bGluZGVyTWVzaFwiO1xyXG5pbXBvcnQgeyBDaXJjbGVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgV2FsbE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL1dhbGxNZXNoXCI7XHJcblxyXG5jb25zdCB2ZXJ0ZXhTaGFkZXJUZXh0ID0gYFxyXG4gIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG4gIGF0dHJpYnV0ZSB2ZWMzIHZlcnRQb3NpdGlvbjtcclxuICBhdHRyaWJ1dGUgdmVjMyB2ZXJ0Tm9ybWFsO1xyXG4gIHZhcnlpbmcgdmVjMyBmcmFnQ29sb3VyO1xyXG5cclxuICB1bmlmb3JtIG1hdDQgcHJvak1hdDtcclxuICB1bmlmb3JtIG1hdDQgdmlld01hdDtcclxuICB1bmlmb3JtIG1hdDQgd29ybGRNYXQ7XHJcblxyXG4gIHVuaWZvcm0gdmVjMiBwb3NpdGlvbjtcclxuICB1bmlmb3JtIHZlYzIgZGlyZWN0aW9uO1xyXG4gIHVuaWZvcm0gZmxvYXQgcmFkaXVzO1xyXG4gIHVuaWZvcm0gZmxvYXQgaGVpZ2h0O1xyXG4gIHVuaWZvcm0gdmVjMyBiYXNlQ29sb3VyO1xyXG5cclxuICB2b2lkIG1haW4oKVxyXG4gIHtcclxuICAgIG1lZGl1bXAgdmVjMyBhbWJpZW50ID0gdmVjMygwLjI2LCAwLjM4LCAwLjQ5KTtcclxuICAgIG1lZGl1bXAgdmVjMyBsaWdodENvbG91ciA9IHZlYzMoMS4wLCAxLjAsIDAuOCk7XHJcbiAgICBtZWRpdW1wIHZlYzMgbGlnaHREaXJlY3Rpb24gPSBub3JtYWxpemUodmVjMygtMC4yLCAtMC4zLCAxLjApKTtcclxuXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZFZlcnQgPSB2ZWMzKHZlcnRQb3NpdGlvbi54ICogZGlyZWN0aW9uLnggLSB2ZXJ0UG9zaXRpb24ueSAqIGRpcmVjdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0UG9zaXRpb24ueCAqIGRpcmVjdGlvbi55ICsgdmVydFBvc2l0aW9uLnkgKiBkaXJlY3Rpb24ueCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydFBvc2l0aW9uLnopO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgIGdsX1Bvc2l0aW9uID0gcHJvak1hdCAqIHZpZXdNYXQgKiB3b3JsZE1hdCAqIHZlYzQocm90YXRlZFZlcnQueCAqIHJhZGl1cyArIHBvc2l0aW9uLngsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZWRWZXJ0LnkgKiByYWRpdXMgKyBwb3NpdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGVkVmVydC56ICogaGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLjApO1xyXG4gICAgXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZE5vcm1hbCA9IHZlYzModmVydE5vcm1hbC54ICogZGlyZWN0aW9uLnggLSB2ZXJ0Tm9ybWFsLnkgKiBkaXJlY3Rpb24ueSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0Tm9ybWFsLnggKiBkaXJlY3Rpb24ueSArIHZlcnROb3JtYWwueSAqIGRpcmVjdGlvbi54LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnROb3JtYWwueik7XHJcbiAgICBcclxuICAgIG1lZGl1bXAgdmVjMyBkaXJlY3Rpb25hbCA9IGxpZ2h0Q29sb3VyICogbWF4KGRvdChyb3RhdGVkTm9ybWFsLCBsaWdodERpcmVjdGlvbiksIDAuMCk7XHJcbiAgICBmcmFnQ29sb3VyID0gKGFtYmllbnQgKyBkaXJlY3Rpb25hbCkgKiBiYXNlQ29sb3VyO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGZyYWdtZW50U2hhZGVyVGV4dCA9IGBcclxuICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuICB2YXJ5aW5nIHZlYzMgZnJhZ0NvbG91cjtcclxuXHJcbiAgdm9pZCBtYWluKClcclxuICB7XHJcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGZyYWdDb2xvdXIsIDEpO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjbGFzcyBSZW5kZXJlcjNEIGltcGxlbWVudHMgSVJlbmRlcmVyIHtcclxuICAvLyBSZW5kZXJpbmdcclxuICBwcml2YXRlIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgcHJpdmF0ZSBnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0O1xyXG4gIHByaXZhdGUgcHJvZ3JhbTogV2ViR0xQcm9ncmFtO1xyXG4gIHByaXZhdGUgVmVydGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIEluZGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIHBvc2l0aW9uQXR0cmlidXRlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBub3JtYWxBdHRyaWJ1dGU6IG51bWJlcjtcclxuICBwcml2YXRlIHByb2pNYXRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgdmlld01hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSB3b3JsZE1hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBwb3NWZWNMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgZGlyVmVjTG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIHJhZGl1c0xvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBoZWlnaHRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgYmFzZUNvbG91ckxvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcblxyXG4gIC8vIENhbWVyYSBjb250cm9sc1xyXG4gIHByaXZhdGUgZHJhZzogYm9vbGVhbjtcclxuICBwcml2YXRlIG9sZFg6IG51bWJlcjtcclxuICBwcml2YXRlIG9sZFk6IG51bWJlcjtcclxuICBwcml2YXRlIHhSb3QgPSAwO1xyXG4gIHByaXZhdGUgeVJvdCA9IDA7XHJcbiAgcHJpdmF0ZSBjYW1lcmFEaXN0ID0gODAwOyAvLyBTdGFydCBjYW1lcmEgODAwICdweCcgYXdheVxyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuXHJcbiAgICAvLyBHZXQgV2ViR0wgY29udGV4dFxyXG4gICAgdGhpcy5nbCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIldlYkdMIG5vdCBzdXBwb3J0ZWRcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDb21waWxlIHNoYWRlcnNcclxuICAgIGNvbnN0IHZlcnRleFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuVkVSVEVYX1NIQURFUik7XHJcbiAgICBjb25zdCBmcmFnbWVudFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuRlJBR01FTlRfU0hBREVSKTtcclxuXHJcbiAgICB0aGlzLmdsLnNoYWRlclNvdXJjZSh2ZXJ0ZXhTaGFkZXIsIHZlcnRleFNoYWRlclRleHQpO1xyXG4gICAgdGhpcy5nbC5zaGFkZXJTb3VyY2UoZnJhZ21lbnRTaGFkZXIsIGZyYWdtZW50U2hhZGVyVGV4dCk7XHJcblxyXG4gICAgdGhpcy5nbC5jb21waWxlU2hhZGVyKHZlcnRleFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKHZlcnRleFNoYWRlciwgdGhpcy5nbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBcIkVSUk9SIGNvbXBpbGluZyB2ZXJ0ZXggc2hhZGVyXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRTaGFkZXJJbmZvTG9nKHZlcnRleFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcihmcmFnbWVudFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKGZyYWdtZW50U2hhZGVyLCB0aGlzLmdsLkNPTVBJTEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgY29tcGlsaW5nIGZyYWdtZW50IHNoYWRlclwiLFxyXG4gICAgICAgIHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyhmcmFnbWVudFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENyZWF0ZSBhbmQgdmFsaWRhdGUgcHJvZ3JhbVxyXG4gICAgdGhpcy5wcm9ncmFtID0gdGhpcy5nbC5jcmVhdGVQcm9ncmFtKCk7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIHZlcnRleFNoYWRlcik7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIGZyYWdtZW50U2hhZGVyKTtcclxuICAgIHRoaXMuZ2wubGlua1Byb2dyYW0odGhpcy5wcm9ncmFtKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuTElOS19TVEFUVVMpKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgXCJFUlJPUiBsaW5raW5nIHByb2dyYW1cIixcclxuICAgICAgICB0aGlzLmdsLmdldFByb2dyYW1JbmZvTG9nKHRoaXMucHJvZ3JhbSlcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wudmFsaWRhdGVQcm9ncmFtKHRoaXMucHJvZ3JhbSk7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuVkFMSURBVEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgdmFsaWRhdGluZyBwcm9ncmFtXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRQcm9ncmFtSW5mb0xvZyh0aGlzLnByb2dyYW0pXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTZXQgV2ViR0wgc2V0dGluZ3NcclxuICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xyXG4gICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5ERVBUSF9URVNUKTtcclxuICAgIHRoaXMuZ2wuY2xlYXJDb2xvcigwLjUzLCAwLjc2LCAwLjk4LCAxLjApO1xyXG5cclxuICAgIHRoaXMuZ2wuZW5hYmxlKHRoaXMuZ2wuQ1VMTF9GQUNFKTtcclxuICAgIHRoaXMuZ2wuZnJvbnRGYWNlKHRoaXMuZ2wuQ0NXKTtcclxuICAgIHRoaXMuZ2wuY3VsbEZhY2UodGhpcy5nbC5CQUNLKTtcclxuXHJcbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMubW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgdGhpcy5tb3VzZU1vdmUsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLm1vdXNlU2Nyb2xsLCB7IHBhc3NpdmU6IGZhbHNlIH0pO1xyXG5cclxuICAgIC8vIEdldCB1bmlmb3JtIGxvY2F0aW9uc1xyXG4gICAgdGhpcy5wcm9qTWF0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInByb2pNYXRcIik7XHJcbiAgICB0aGlzLnZpZXdNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwidmlld01hdFwiKTtcclxuICAgIHRoaXMud29ybGRNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwid29ybGRNYXRcIik7XHJcbiAgICB0aGlzLnBvc1ZlY0xvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJwb3NpdGlvblwiKTtcclxuICAgIHRoaXMuZGlyVmVjTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImRpcmVjdGlvblwiKTtcclxuICAgIHRoaXMucmFkaXVzTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInJhZGl1c1wiKTtcclxuICAgIHRoaXMuaGVpZ2h0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImhlaWdodFwiKTtcclxuICAgIHRoaXMuYmFzZUNvbG91ckxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJiYXNlQ29sb3VyXCIpO1xyXG5cclxuICAgIC8vIFNldCB1cCBtYXRyaWNlc1xyXG4gICAgY29uc3QgcHJvamVjdGlvbk1hdHJpeCA9IE1hdDRmLmdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgICAgNDUgKiAoTWF0aC5QSSAvIDE4MCksIC8vIDQ1ZGVnIHktYXhpcyBGT1ZcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmNhbnZhcy5oZWlnaHQsXHJcbiAgICAgIDAuMSxcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ICsgMjAwMFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB2aWV3TWF0cml4ID0gTWF0NGYuZ2V0VHJhbnNsYXRpb25NYXRyaXgoMCwgMCwgLXRoaXMuY2FtZXJhRGlzdCk7IC8vIE1vdmUgY2FtZXJhIGJhY2sgb24geiBheGlzXHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLmdldElkZW50aXR5TWF0cml4KCk7XHJcblxyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMudmlld01hdExvYywgZmFsc2UsIHZpZXdNYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMud29ybGRNYXRMb2MsIGZhbHNlLCB3b3JsZE1hdHJpeCk7XHJcbiAgfVxyXG5cclxuICBpbml0KHNpbXVsYXRpb246IFNpbXVsYXRpb24pOiB2b2lkIHtcclxuICAgIGNvbnN0IGZsb29yVmVydHMgPSBGbG9vck1lc2guZ2V0VmVydGljZXMoMjAwMCwgMTAwMCk7XHJcblxyXG4gICAgY29uc3Qgd2FsbHM6IExpbmVPYnN0YWNsZVtdID0gc2ltdWxhdGlvblxyXG4gICAgICAuZ2V0T2JzdGFjbGVzKClcclxuICAgICAgLmZpbHRlcigoeCkgPT4geCBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSlcclxuICAgICAgLm1hcCgoeCkgPT4geCBhcyBMaW5lT2JzdGFjbGUpOyAvLyBrbHVkZ2UgZHVlIHRvIGtub3duIGlzc3VlIHdpdGggVFMgdHlwZSBpbmZlcmVuY2VcclxuXHJcbiAgICBjb25zdCB3YWxsVmVydHMgPSB3YWxsc1xyXG4gICAgICAubWFwKCh3YWxsKSA9PiBXYWxsTWVzaC5nZXRWZXJ0aWNlcyh3YWxsKSlcclxuICAgICAgLnJlZHVjZSgoYWNjLCB2YWwpID0+IGFjYy5jb25jYXQodmFsKSwgW10pO1xyXG5cclxuICAgIC8vIEluaXRpYWxpc2UgdmVydGV4IGFuZCBpbmRleCBidWZmZXJcclxuICAgIGNvbnN0IHZlcnRpY2VzID0gbmV3IEZsb2F0MzJBcnJheShcclxuICAgICAgQWdlbnRNZXNoLnZlcnRpY2VzXHJcbiAgICAgICAgLmNvbmNhdChDeWxpbmRlck1lc2gudmVydGljZXMpXHJcbiAgICAgICAgLmNvbmNhdChmbG9vclZlcnRzKVxyXG4gICAgICAgIC5jb25jYXQod2FsbFZlcnRzKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLlZlcnRleEJ1ZmZlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XHJcbiAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIHRoaXMuVmVydGV4QnVmZmVyKTtcclxuICAgIHRoaXMuZ2wuYnVmZmVyRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgdmVydGljZXMsIHRoaXMuZ2wuU1RBVElDX0RSQVcpO1xyXG5cclxuICAgIGNvbnN0IGN5bGluZGVyT2Zmc2V0ID0gQWdlbnRNZXNoLnZlcnRpY2VzLmxlbmd0aCAvIDY7XHJcbiAgICBjb25zdCBmbG9vck9mZnNldCA9IGN5bGluZGVyT2Zmc2V0ICsgQ3lsaW5kZXJNZXNoLnZlcnRpY2VzLmxlbmd0aCAvIDY7XHJcbiAgICBjb25zdCB3YWxsc09mZnNldCA9IGZsb29yT2Zmc2V0ICsgZmxvb3JWZXJ0cy5sZW5ndGggLyA2O1xyXG5cclxuICAgIGNvbnN0IHdhbGxJbmRpY2VzID0gd2FsbHNcclxuICAgICAgLm1hcCgoX3dhbGwsIGkpID0+IFdhbGxNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgd2FsbHNPZmZzZXQgKyBpICogOCkpXHJcbiAgICAgIC5yZWR1Y2UoKGFjYywgdmFsKSA9PiBhY2MuY29uY2F0KHZhbCksIFtdKTtcclxuXHJcbiAgICBjb25zdCBpbmRpY2VzID0gbmV3IFVpbnQxNkFycmF5KFxyXG4gICAgICBBZ2VudE1lc2guaW5kaWNlc1xyXG4gICAgICAgIC5jb25jYXQoQ3lsaW5kZXJNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgY3lsaW5kZXJPZmZzZXQpKVxyXG4gICAgICAgIC5jb25jYXQoRmxvb3JNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgZmxvb3JPZmZzZXQpKVxyXG4gICAgICAgIC5jb25jYXQod2FsbEluZGljZXMpXHJcbiAgICApO1xyXG4gICAgdGhpcy5JbmRleEJ1ZmZlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XHJcbiAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUiwgdGhpcy5JbmRleEJ1ZmZlcik7XHJcbiAgICB0aGlzLmdsLmJ1ZmZlckRhdGEoXHJcbiAgICAgIHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsXHJcbiAgICAgIGluZGljZXMsXHJcbiAgICAgIHRoaXMuZ2wuU1RBVElDX0RSQVdcclxuICAgICk7XHJcblxyXG4gICAgLy8gR2V0IGF0dHJpYnV0ZSBsb2NhdGlvbnNcclxuICAgIHRoaXMucG9zaXRpb25BdHRyaWJ1dGUgPSB0aGlzLmdsLmdldEF0dHJpYkxvY2F0aW9uKFxyXG4gICAgICB0aGlzLnByb2dyYW0sXHJcbiAgICAgIFwidmVydFBvc2l0aW9uXCJcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKFxyXG4gICAgICB0aGlzLnBvc2l0aW9uQXR0cmlidXRlLFxyXG4gICAgICAzLFxyXG4gICAgICB0aGlzLmdsLkZMT0FULFxyXG4gICAgICBmYWxzZSxcclxuICAgICAgNiAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCxcclxuICAgICAgMFxyXG4gICAgKTtcclxuICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGhpcy5wb3NpdGlvbkF0dHJpYnV0ZSk7XHJcblxyXG4gICAgdGhpcy5ub3JtYWxBdHRyaWJ1dGUgPSB0aGlzLmdsLmdldEF0dHJpYkxvY2F0aW9uKFxyXG4gICAgICB0aGlzLnByb2dyYW0sXHJcbiAgICAgIFwidmVydE5vcm1hbFwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihcclxuICAgICAgdGhpcy5ub3JtYWxBdHRyaWJ1dGUsXHJcbiAgICAgIDMsXHJcbiAgICAgIHRoaXMuZ2wuRkxPQVQsXHJcbiAgICAgIGZhbHNlLFxyXG4gICAgICA2ICogRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULFxyXG4gICAgICAzICogRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICApO1xyXG4gICAgdGhpcy5nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh0aGlzLm5vcm1hbEF0dHJpYnV0ZSk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoc2ltdWxhdGlvbjogU2ltdWxhdGlvbik6IHZvaWQge1xyXG4gICAgY29uc3QgYWdlbnRzID0gc2ltdWxhdGlvbi5nZXRBZ2VudHMoKTtcclxuICAgIGNvbnN0IG9ic3RhY2xlcyA9IHNpbXVsYXRpb24uZ2V0T2JzdGFjbGVzKCk7XHJcblxyXG4gICAgLy8gQ2xlYXIgYmFja2dyb3VuZFxyXG4gICAgdGhpcy5nbC5jbGVhcih0aGlzLmdsLkNPTE9SX0JVRkZFUl9CSVQgfCB0aGlzLmdsLkRFUFRIX0JVRkZFUl9CSVQpO1xyXG5cclxuICAgIC8vIERyYXcgYWdlbnRzXHJcbiAgICBhZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgLy8gUG9zaXRpb25cclxuICAgICAgY29uc3QgcG9zID0gYWdlbnQuZ2V0UG9zaXRpb24oKTtcclxuICAgICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5wb3NWZWNMb2MsIHBvcy54LCBwb3MueSk7XHJcblxyXG4gICAgICAvLyBEaXJlY3Rpb25cclxuICAgICAgbGV0IGRpciA9IGFnZW50LmdldERpcmVjdGlvbigpLm5vcm1hbGlzZSgpO1xyXG4gICAgICBpZiAoZGlyLnggPT0gMCAmJiBkaXIueSA9PSAwKSB7XHJcbiAgICAgICAgZGlyID0gbmV3IFZlY3RvcjJmKDEsIDApO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCBkaXIueCwgZGlyLnkpO1xyXG5cclxuICAgICAgLy8gUmFkaXVzICsgaGVpZ2h0XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMucmFkaXVzTG9jLCBhZ2VudC5SYWRpdXMpO1xyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLmhlaWdodExvYywgYWdlbnQuUmFkaXVzKTtcclxuXHJcbiAgICAgIC8vIEJhc2UgY29sb3VyXHJcbiAgICAgIGNvbnN0IGNvbG9yID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTNmKFxyXG4gICAgICAgIHRoaXMuYmFzZUNvbG91ckxvYyxcclxuICAgICAgICBjb2xvci5yIC8gMjU1LFxyXG4gICAgICAgIGNvbG9yLmcgLyAyNTUsXHJcbiAgICAgICAgY29sb3IuYiAvIDI1NVxyXG4gICAgICApO1xyXG5cclxuICAgICAgLy8gRHJhdyBtZXNoXHJcbiAgICAgIHRoaXMuZ2wuZHJhd0VsZW1lbnRzKFxyXG4gICAgICAgIHRoaXMuZ2wuVFJJQU5HTEVTLFxyXG4gICAgICAgIEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCxcclxuICAgICAgICB0aGlzLmdsLlVOU0lHTkVEX1NIT1JULFxyXG4gICAgICAgIDBcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIERyYXcgb2JzdGFjbGVzXHJcbiAgICBsZXQgd2FsbENvdW50ID0gMDtcclxuICAgIG9ic3RhY2xlcy5mb3JFYWNoKChvYnN0YWNsZSkgPT4ge1xyXG4gICAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICAgIC8vIFBvc2l0aW9uXHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmYoXHJcbiAgICAgICAgICB0aGlzLnBvc1ZlY0xvYyxcclxuICAgICAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgICAgICBvYnN0YWNsZS5Qb3NpdGlvbi55XHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgLy8gRGlyZWN0aW9uXHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5kaXJWZWNMb2MsIDEsIDApO1xyXG5cclxuICAgICAgICAvLyBSYWRpdXMgKyBoZWlnaHRcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLnJhZGl1c0xvYywgb2JzdGFjbGUuUmFkaXVzKTtcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLmhlaWdodExvYywgODQpO1xyXG5cclxuICAgICAgICAvLyBDb2xvdXJcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0zZih0aGlzLmJhc2VDb2xvdXJMb2MsIDEuMCwgMS4wLCAxLjApO1xyXG5cclxuICAgICAgICAvLyBEcmF3IG1lc2hcclxuICAgICAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgICAgIHRoaXMuZ2wuVFJJQU5HTEVTLFxyXG4gICAgICAgICAgQ3lsaW5kZXJNZXNoLmluZGljZXMubGVuZ3RoLFxyXG4gICAgICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgICAgIEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCAqIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB3YWxsQ291bnQrKztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gRHJhdyBmbG9vclxyXG4gICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5wb3NWZWNMb2MsIDAsIDApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5kaXJWZWNMb2MsIDEsIDApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5yYWRpdXNMb2MsIDEpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5oZWlnaHRMb2MsIDEpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtM2YodGhpcy5iYXNlQ29sb3VyTG9jLCAwLjIsIDAuMiwgMC4yKTtcclxuXHJcbiAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgdGhpcy5nbC5UUklBTkdMRVMsXHJcbiAgICAgIEZsb29yTWVzaC5pbmRpY2VzLmxlbmd0aCxcclxuICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgKEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCArIEN5bGluZGVyTWVzaC5pbmRpY2VzLmxlbmd0aCkgKlxyXG4gICAgICAgIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICApO1xyXG5cclxuICAgIC8vIERyYXcgd2FsbHNcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMucG9zVmVjTG9jLCAwLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCAxLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMucmFkaXVzTG9jLCAxKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMuaGVpZ2h0TG9jLCA4NCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0zZih0aGlzLmJhc2VDb2xvdXJMb2MsIDEuMCwgMS4wLCAxLjApO1xyXG5cclxuICAgIHRoaXMuZ2wuZHJhd0VsZW1lbnRzKFxyXG4gICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgV2FsbE1lc2guaW5kaWNlcy5sZW5ndGggKiB3YWxsQ291bnQsXHJcbiAgICAgIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsXHJcbiAgICAgIChBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGggK1xyXG4gICAgICAgIEN5bGluZGVyTWVzaC5pbmRpY2VzLmxlbmd0aCArXHJcbiAgICAgICAgRmxvb3JNZXNoLmluZGljZXMubGVuZ3RoKSAqXHJcbiAgICAgICAgVWludDE2QXJyYXkuQllURVNfUEVSX0VMRU1FTlRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG1vdXNlRG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gdHJ1ZTtcclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VVcCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gZmFsc2U7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHRoaXMueFJvdCArPSAoKGV2ZW50LnBhZ2VYIC0gdGhpcy5vbGRYKSAqIDIgKiBNYXRoLlBJKSAvIHRoaXMuY2FudmFzLndpZHRoO1xyXG4gICAgdGhpcy55Um90ICs9ICgoZXZlbnQucGFnZVkgLSB0aGlzLm9sZFkpICogMiAqIE1hdGguUEkpIC8gdGhpcy5jYW52YXMuaGVpZ2h0O1xyXG4gICAgdGhpcy5vbGRYID0gZXZlbnQucGFnZVg7XHJcbiAgICB0aGlzLm9sZFkgPSBldmVudC5wYWdlWTtcclxuXHJcbiAgICAvLyBDbGFtcCBZIHJvdGF0aW9uXHJcbiAgICBpZiAodGhpcy55Um90ID4gMCkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnlSb3QgPCAtTWF0aC5QSSkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAtTWF0aC5QSTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB4Um90TWF0ID0gTWF0NGYuZ2V0WlJvdGF0aW9uTWF0cml4KHRoaXMueFJvdCk7XHJcbiAgICBjb25zdCB5Um90TWF0ID0gTWF0NGYuZ2V0WFJvdGF0aW9uTWF0cml4KHRoaXMueVJvdCk7XHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLm11bHRpcGx5TWF0cmljZXMoeFJvdE1hdCwgeVJvdE1hdCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy53b3JsZE1hdExvYywgZmFsc2UsIHdvcmxkTWF0cml4KTtcclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VTY3JvbGwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcclxuICAgIHRoaXMuY2FtZXJhRGlzdCArPSBldmVudC5kZWx0YVk7XHJcbiAgICBpZiAodGhpcy5jYW1lcmFEaXN0IDwgMCkge1xyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHZpZXdNYXRyaXggPSBNYXQ0Zi5nZXRUcmFuc2xhdGlvbk1hdHJpeCgwLCAwLCAtdGhpcy5jYW1lcmFEaXN0KTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDRmdih0aGlzLnZpZXdNYXRMb2MsIGZhbHNlLCB2aWV3TWF0cml4KTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0aW9uTWF0cml4ID0gTWF0NGYuZ2V0UGVyc3BlY3RpdmVQcm9qZWN0aW9uTWF0cml4KFxyXG4gICAgICA0NSAqIChNYXRoLlBJIC8gMTgwKSwgLy8gNDVkZWcgeS1heGlzIEZPVlxyXG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIHRoaXMuY2FudmFzLmhlaWdodCxcclxuICAgICAgMC4xLFxyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgKyAyMDAwXHJcbiAgICApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG5cclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxufVxyXG4iLCJpbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4vSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcblxyXG5pbnRlcmZhY2UgTm9kZSB7XHJcbiAgYWdlbnQ6IEFnZW50O1xyXG4gIGxlZnQ6IE5vZGU7XHJcbiAgcmlnaHQ6IE5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBZ2VudFRyZWUgaW1wbGVtZW50cyBJQWdlbnRDb2xsZWN0aW9uIHtcclxuICBwcml2YXRlIF9hZ2VudHM6IEFnZW50W107XHJcbiAgcHJpdmF0ZSBfcm9vdDogTm9kZTtcclxuXHJcbiAgY29uc3RydWN0b3IoYWdlbnRzOiBBZ2VudFtdKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgICB0aGlzLl9yb290ID0gdGhpcy5jb25zdHJ1Y3RUcmVlKHRoaXMuX2FnZW50cywgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoYWdlbnRzOiBBZ2VudFtdKTogdm9pZCB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgICB0aGlzLl9yb290ID0gdGhpcy5jb25zdHJ1Y3RUcmVlKHRoaXMuX2FnZW50cywgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXRBbGwoKTogQWdlbnRbXSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhcihhZ2VudDogQWdlbnQsIHJhbmdlOiBudW1iZXIpOiBBZ2VudFtdIHtcclxuICAgIGxldCBtaW5YID0gYWdlbnQuZ2V0UG9zaXRpb24oKS54IC0gcmFuZ2U7XHJcbiAgICBsZXQgbWluWSA9IGFnZW50LmdldFBvc2l0aW9uKCkueSAtIHJhbmdlO1xyXG4gICAgbGV0IG1heFggPSBhZ2VudC5nZXRQb3NpdGlvbigpLnggKyByYW5nZTtcclxuICAgIGxldCBtYXhZID0gYWdlbnQuZ2V0UG9zaXRpb24oKS55ICsgcmFuZ2U7XHJcblxyXG4gICAgbGV0IGNhbmRpZGF0ZXMgPSB0aGlzLnJhbmdlU2VhcmNoKHRoaXMuX3Jvb3QsIG1pblgsIG1pblksIG1heFgsIG1heFksIHRydWUpO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZXMuZmlsdGVyKChvdGhlcikgPT4gb3RoZXIuSWQgIT09IGFnZW50LklkKTtcclxuICB9XHJcblxyXG4gIGdldE5laWdoYm91cnNJblJhbmdlRXVjbGlkZWFuKGFnZW50OiBBZ2VudCwgcmFuZ2U6IG51bWJlcik6IEFnZW50W10ge1xyXG4gICAgbGV0IGNhbmRpZGF0ZXMgPSB0aGlzLmdldE5laWdoYm91cnNJblJhbmdlUmVjdGlsaW5lYXIoYWdlbnQsIHJhbmdlKTtcclxuICAgIHJldHVybiBjYW5kaWRhdGVzLmZpbHRlcihcclxuICAgICAgKG90aGVyKSA9PlxyXG4gICAgICAgIGFnZW50LmdldFBvc2l0aW9uKCkuc3VidHJhY3Qob3RoZXIuZ2V0UG9zaXRpb24oKSkubWFnbml0dWRlU3FyZCgpIDw9XHJcbiAgICAgICAgcmFuZ2UgKiogMlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGZvckVhY2goZnVuOiAoYWdlbnQ6IEFnZW50KSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICB0aGlzLl9hZ2VudHMuZm9yRWFjaChmdW4pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RUcmVlKGFnZW50czogQWdlbnRbXSwgeEF4aXM6IGJvb2xlYW4pOiBOb2RlIHtcclxuICAgIGlmIChhZ2VudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBtaWQgPSBNYXRoLmZsb29yKGFnZW50cy5sZW5ndGggLyAyKTtcclxuXHJcbiAgICBsZXQgc29ydGVkID0geEF4aXNcclxuICAgICAgPyBhZ2VudHMuc29ydCgoYSwgYikgPT4gYS5nZXRQb3NpdGlvbigpLnggLSBiLmdldFBvc2l0aW9uKCkueClcclxuICAgICAgOiBhZ2VudHMuc29ydCgoYSwgYikgPT4gYS5nZXRQb3NpdGlvbigpLnkgLSBiLmdldFBvc2l0aW9uKCkueSk7XHJcblxyXG4gICAgbGV0IGxlZnQgPSB0aGlzLmNvbnN0cnVjdFRyZWUoc29ydGVkLnNsaWNlKDAsIG1pZCksICF4QXhpcyk7XHJcbiAgICBsZXQgcmlnaHQgPSB0aGlzLmNvbnN0cnVjdFRyZWUoXHJcbiAgICAgIHNvcnRlZC5zbGljZShtaWQgKyAxLCBhZ2VudHMubGVuZ3RoKSxcclxuICAgICAgIXhBeGlzXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50OiBhZ2VudHNbbWlkXSwgbGVmdDogbGVmdCwgcmlnaHQ6IHJpZ2h0IH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHJhbmdlU2VhcmNoKFxyXG4gICAgcm9vdDogTm9kZSxcclxuICAgIG1pblg6IG51bWJlcixcclxuICAgIG1pblk6IG51bWJlcixcclxuICAgIG1heFg6IG51bWJlcixcclxuICAgIG1heFk6IG51bWJlcixcclxuICAgIHhBeGlzOiBib29sZWFuXHJcbiAgKTogQWdlbnRbXSB7XHJcbiAgICBpZiAocm9vdCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgcmVzOiBBZ2VudFtdID0gW107XHJcbiAgICBpZiAoeEF4aXMpIHtcclxuICAgICAgLy8gSWYgeCA8PSBtYXhYIG5lZWQgdG8gY2hlY2sgcmlnaHQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPD0gbWF4WCkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QucmlnaHQsIG1pblgsIG1pblksIG1heFgsIG1heFksICF4QXhpcylcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBJZiB4ID49IG1pblggbmVlZCB0byBjaGVjayBsZWZ0IHN1YnRyZWVcclxuICAgICAgaWYgKHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS54ID49IG1pblgpIHtcclxuICAgICAgICByZXMgPSByZXMuY29uY2F0KFxyXG4gICAgICAgICAgdGhpcy5yYW5nZVNlYXJjaChyb290LmxlZnQsIG1pblgsIG1pblksIG1heFgsIG1heFksICF4QXhpcylcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBJZiB5IDw9IG1heFkgbmVlZCB0byBjaGVjayByaWdodCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA8PSBtYXhZKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5yaWdodCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIElmIHkgPj0gbWluWSBuZWVkIHRvIGNoZWNrIGxlZnQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnkgPj0gbWluWSkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QubGVmdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB0aGUgYWdlbnQgaXMgaW4gcmFuZ2UgcmFuZ2UgYWRkIHRvIHRoZSByZXN1bHRcclxuICAgIGlmIChcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPj0gbWluWCAmJlxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA+PSBtaW5ZICYmXHJcbiAgICAgIHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS54IDw9IG1heFggJiZcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnkgPD0gbWF4WVxyXG4gICAgKSB7XHJcbiAgICAgIHJlcy5wdXNoKHJvb3QuYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXM7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuL0NvbG91clwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFnZW50IHtcclxuICByZWFkb25seSBSYWRpdXM6IG51bWJlcjtcclxuICByZWFkb25seSBJZDogbnVtYmVyO1xyXG5cclxuICBwcm90ZWN0ZWQgX3Bvc2l0aW9uOiBWZWN0b3IyZjtcclxuICBwcm90ZWN0ZWQgX2RpcmVjdGlvbjogVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9nZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9pc0RvbmU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICB0aGlzLklkID0gaWQ7XHJcbiAgICB0aGlzLlJhZGl1cyA9IDIwO1xyXG5cclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gc3RhcnRQb3NpdGlvbjtcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGdldFByZWZlcnJlZFZlbG9jaXR5KHN0YXJ0UG9zaXRpb24pOyAvLyBTdGFydCBwb2ludGluZyBpbiBnb2FsIGRpcmVjdGlvblxyXG4gICAgdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkgPSBnZXRQcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgIHRoaXMuX2lzRG9uZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0UG9zaXRpb24oKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Bvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgZ2V0RGlyZWN0aW9uKCk6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXJlY3Rpb247XHJcbiAgfVxyXG5cclxuICBpc0RvbmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5faXNEb25lO1xyXG4gIH1cclxuXHJcbiAgYWJzdHJhY3QgZ2V0Q29sb3VyKCk6IENvbG91cjtcclxuICBhYnN0cmFjdCB1cGRhdGUoXHJcbiAgICBkZWx0YVQ6IG51bWJlcixcclxuICAgIG5laWdoYm91cnM6IEFnZW50W10sXHJcbiAgICBvYnN0YWNsZXM6IElPYnN0YWNsZVtdXHJcbiAgKTogdm9pZDtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ29sb3VyIHtcclxuICByOiBudW1iZXI7XHJcbiAgZzogbnVtYmVyO1xyXG4gIGI6IG51bWJlcjtcclxuXHJcbiAgc3RhdGljIFdoaXRlOiBDb2xvdXIgPSB7XHJcbiAgICByOiAyNTUsXHJcbiAgICBnOiAyNTUsXHJcbiAgICBiOiAyNTUsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIFJlZDogQ29sb3VyID0ge1xyXG4gICAgcjogMjU1LFxyXG4gICAgZzogMCxcclxuICAgIGI6IDAsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIEdyZWVuOiBDb2xvdXIgPSB7XHJcbiAgICByOiAwLFxyXG4gICAgZzogMjU1LFxyXG4gICAgYjogMCxcclxuICB9O1xyXG5cclxuICBzdGF0aWMgRnJvbUhzdihoOiBudW1iZXIsIHM6IG51bWJlciwgdjogbnVtYmVyKTogQ29sb3VyIHtcclxuICAgIC8vIGFzc3VtaW5nIGhzdiB2YWx1ZXMgaW4gcmFuZ2UgMC0xXHJcbiAgICBoICo9IDY7XHJcblxyXG4gICAgY29uc3QgZnJhY3QgPSBoIC0gTWF0aC5mbG9vcihoKTtcclxuICAgIGNvbnN0IFAgPSB2ICogKDEgLSBzKTtcclxuICAgIGNvbnN0IFEgPSB2ICogKDEgLSBzICogZnJhY3QpO1xyXG4gICAgY29uc3QgVCA9IHYgKiAoMSAtIHMgKiAoMSAtIGZyYWN0KSk7XHJcblxyXG4gICAgaWYgKDAgPD0gaCAmJiBoIDwgMSkge1xyXG4gICAgICByZXR1cm4geyByOiB2ICogMjU1LCBnOiBUICogMjU1LCBiOiBQICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDEgPD0gaCAmJiBoIDwgMikge1xyXG4gICAgICByZXR1cm4geyByOiBRICogMjU1LCBnOiB2ICogMjU1LCBiOiBQICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDIgPD0gaCAmJiBoIDwgMykge1xyXG4gICAgICByZXR1cm4geyByOiBQICogMjU1LCBnOiB2ICogMjU1LCBiOiBUICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDMgPD0gaCAmJiBoIDwgNCkge1xyXG4gICAgICByZXR1cm4geyByOiBQICogMjU1LCBnOiBRICogMjU1LCBiOiB2ICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDQgPD0gaCAmJiBoIDwgNSkge1xyXG4gICAgICByZXR1cm4geyByOiBUICogMjU1LCBnOiBQICogMjU1LCBiOiB2ICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDUgPD0gaCAmJiBoIDwgNikge1xyXG4gICAgICByZXR1cm4geyByOiB2ICogMjU1LCBnOiBQICogMjU1LCBiOiBRICogMjU1IH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4geyByOiAwLCBnOiAwLCBiOiAwIH07XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuLi9Db2xvdXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCYXNpY0FnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIGdldENvbG91cigpIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5XaGl0ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuR3JlZW47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGFUOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZlcnJlZFZlbG9jaXR5ID0gdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkodGhpcy5fcG9zaXRpb24pO1xyXG4gICAgY29uc3Qgc3RlcFNpemUgPSAoZGVsdGFUICogNjApIC8gMzAwMDtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBkb25lXHJcbiAgICBpZiAocHJlZmVycmVkVmVsb2NpdHkubWFnbml0dWRlU3FyZCgpIDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuX2lzRG9uZSA9IHRydWU7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTdGVwIHRvd2FyZHMgZ29hbFxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZChwcmVmZXJyZWRWZWxvY2l0eS5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBDb2xvdXIgfSBmcm9tIFwiLi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU3RvcEFnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIHByaXZhdGUgX2lzU3R1Y2s6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgdGhpcy5faXNTdHVjayA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29sb3VyKCk6IENvbG91ciB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuV2hpdGU7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2lzU3R1Y2spIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5SZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gQ29sb3VyLkdyZWVuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCBuZWlnaGJvdXJzOiBBZ2VudFtdLCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVmZXJyZWRWZWxvY2l0eSA9IHRoaXMuX2dldFByZWZlcnJlZFZlbG9jaXR5KHRoaXMuX3Bvc2l0aW9uKTtcclxuICAgIGNvbnN0IHN0ZXBTaXplID0gKGRlbHRhVCAqIDYwKSAvIDMwMDA7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgZG9uZVxyXG4gICAgaWYgKHByZWZlcnJlZFZlbG9jaXR5Lm1hZ25pdHVkZVNxcmQoKSA8IDAuMSkge1xyXG4gICAgICB0aGlzLl9pc0RvbmUgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHkubm9ybWFsaXNlKCk7XHJcbiAgICBjb25zdCBoZWFkaW5nID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseSgyNSkpO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIGJsb2NrZWQgYnkgYW5vdGhlciBhZ2VudFxyXG4gICAgdGhpcy5faXNTdHVjayA9IGZhbHNlO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbGxpZGVzQWdlbnQobmVpZ2hib3Vyc1tpXSwgaGVhZGluZykpIHtcclxuICAgICAgICB0aGlzLl9pc1N0dWNrID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGVjayBpZiBibG9ja2VkIGJ5IGFuIG9ic3RhY2xlXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAodGhpcy5jb2xsaWRlc09ic3RhY2xlKG9ic3RhY2xlc1tpXSwgaGVhZGluZykpIHtcclxuICAgICAgICB0aGlzLl9pc1N0dWNrID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBTdGVwIHRvd2FyZHMgZ29hbFxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZCh0aGlzLl9kaXJlY3Rpb24ubXVsdGlwbHkoc3RlcFNpemUpKTtcclxuICB9XHJcblxyXG4gIGNvbGxpZGVzQWdlbnQoYWdlbnQ6IEFnZW50LCBwb3NpdGlvbjogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGFnZW50LmdldFBvc2l0aW9uKCkuc3VidHJhY3QocG9zaXRpb24pLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgIChhZ2VudC5SYWRpdXMgKyB0aGlzLlJhZGl1cykgKiAoYWdlbnQuUmFkaXVzICsgdGhpcy5SYWRpdXMpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgY29sbGlkZXNPYnN0YWNsZShvYnN0YWNsZTogSU9ic3RhY2xlLCBwb3NpdGlvbjogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIENpcmNsZU9ic3RhY2xlKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgb2JzdGFjbGUuUG9zaXRpb24uc3VidHJhY3QocG9zaXRpb24pLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgICAgKG9ic3RhY2xlLlJhZGl1cyArIHRoaXMuUmFkaXVzKSAqIChvYnN0YWNsZS5SYWRpdXMgKyB0aGlzLlJhZGl1cylcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFRPRE86IEltcGxlbWVudCBMaW5lT2JzdGFjbGUgY29sbGlzaW9uXHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5IHtcclxuICBzdGF0aWMgZ2V0Q2xvc2VzdFBvaW50T25MaW5lKFxyXG4gICAgbGluZVBvaW50OiBWZWN0b3IyZixcclxuICAgIGxpbmVEaXJlY3Rpb246IFZlY3RvcjJmLFxyXG4gICAgcG9pbnQ6IFZlY3RvcjJmXHJcbiAgKTogVmVjdG9yMmYge1xyXG4gICAgY29uc3QgZGlyZWN0aW9uID0gbGluZURpcmVjdGlvbi5ub3JtYWxpc2UoKTtcclxuICAgIGNvbnN0IHZlY3RvciA9IHBvaW50LnN1YnRyYWN0KGxpbmVQb2ludCk7XHJcbiAgICBjb25zdCBkaXN0YW5jZSA9IHZlY3Rvci5kb3QoZGlyZWN0aW9uKTtcclxuXHJcbiAgICByZXR1cm4gbGluZVBvaW50LmFkZChkaXJlY3Rpb24ubXVsdGlwbHkoZGlzdGFuY2UpKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRGaXJzdFJheUNpcmNsZUludGVyc2VjdGlvbihcclxuICAgIGNlbnRyZTogVmVjdG9yMmYsXHJcbiAgICByYWRpdXM6IG51bWJlcixcclxuICAgIG9yaWdpbjogVmVjdG9yMmYsXHJcbiAgICBkaXJlY3Rpb246IFZlY3RvcjJmXHJcbiAgKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IGRlbHRhID0gb3JpZ2luLnN1YnRyYWN0KGNlbnRyZSk7XHJcblxyXG4gICAgY29uc3QgYSA9IGRpcmVjdGlvbi5kb3QoZGlyZWN0aW9uKTtcclxuICAgIGNvbnN0IGIgPSAyICogZGlyZWN0aW9uLmRvdChkZWx0YSk7XHJcbiAgICBjb25zdCBjID0gZGVsdGEuZG90KGRlbHRhKSAtIHJhZGl1cyAqKiAyO1xyXG5cclxuICAgIGNvbnN0IGRpc2NyaW0gPSBiICoqIDIgLSA0ICogYSAqIGM7XHJcblxyXG4gICAgaWYgKGRpc2NyaW0gPCAwKSB7XHJcbiAgICAgIC8vIE5vIGludGVyc2VjdGlvblxyXG4gICAgICByZXR1cm4gSW5maW5pdHk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc3FydERpc2NyaW0gPSBNYXRoLnNxcnQoZGlzY3JpbSk7XHJcblxyXG4gICAgY29uc3QgZDEgPSAoLWIgLSBzcXJ0RGlzY3JpbSkgLyAoMiAqIGEpO1xyXG5cclxuICAgIGlmIChkMSA+IDApIHtcclxuICAgICAgcmV0dXJuIGQxO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGQyID0gKC1iICsgc3FydERpc2NyaW0pIC8gKDIgKiBhKTtcclxuXHJcbiAgICBpZiAoZDIgPiAwKSB7XHJcbiAgICAgIHJldHVybiBkMjtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gSW5maW5pdHk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICBhMTogVmVjdG9yMmYsXHJcbiAgICBhMjogVmVjdG9yMmYsXHJcbiAgICBiMTogVmVjdG9yMmYsXHJcbiAgICBiMjogVmVjdG9yMmZcclxuICApOiBWZWN0b3IyZiB7XHJcbiAgICBjb25zdCBkID0gKGExLnggLSBhMi54KSAqIChiMS55IC0gYjIueSkgLSAoYTEueSAtIGEyLnkpICogKGIxLnggLSBiMi54KTtcclxuICAgIGNvbnN0IHUgPVxyXG4gICAgICAoKGEyLnggLSBhMS54KSAqIChhMS55IC0gYjEueSkgLSAoYTIueSAtIGExLnkpICogKGExLnggLSBiMS54KSkgLyBkO1xyXG5cclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYoYjEueCArIHUgKiAoYjIueCAtIGIxLngpLCBiMS55ICsgdSAqIChiMi55IC0gYjEueSkpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBDb2xvdXIgfSBmcm9tIFwiLi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL0dlb21ldHJ5XCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFZPQWdlbnQgZXh0ZW5kcyBBZ2VudCB7XHJcbiAgcHJpdmF0ZSBfY29sb3VyOiBDb2xvdXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgdGhpcy5fY29sb3VyID0gQ29sb3VyLkdyZWVuO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29sb3VyKCk6IENvbG91ciB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29sb3VyO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCBuZWlnaGJvdXJzOiBBZ2VudFtdLCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVmZXJyZWRWZWxvY2l0eSA9IHRoaXMuX2dldFByZWZlcnJlZFZlbG9jaXR5KHRoaXMuX3Bvc2l0aW9uKTtcclxuICAgIGNvbnN0IHN0ZXBTaXplID0gKGRlbHRhVCAqIDYwKSAvIDQwMDA7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgZG9uZVxyXG4gICAgaWYgKHByZWZlcnJlZFZlbG9jaXR5Lm1hZ25pdHVkZVNxcmQoKSA8IDAuMSkge1xyXG4gICAgICB0aGlzLl9pc0RvbmUgPSB0cnVlO1xyXG4gICAgICB0aGlzLl9kaXJlY3Rpb24gPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcbiAgICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5XaGl0ZTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBzYWZlID0gdHJ1ZTtcclxuICAgIGxldCBjb2xsaXNpb247XHJcbiAgICBsZXQgYWdlbnQ7XHJcblxyXG4gICAgLy8gQ2hlY2sgZm9yIGNvbGxpc2lvbiB3aXRoIG5laWdoYm91cmluZyBhZ2VudHNcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gdGhpcy5nZXRBZ2VudFZlbG9jaXR5T2JzdGFjbGUobmVpZ2hib3Vyc1tpXSk7XHJcbiAgICAgIGlmIChcclxuICAgICAgICB2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiZcclxuICAgICAgICB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHByZWZlcnJlZFZlbG9jaXR5KVxyXG4gICAgICApIHtcclxuICAgICAgICBzYWZlID0gZmFsc2U7XHJcbiAgICAgICAgY29sbGlzaW9uID0gdmVsb2NpdHlPYnN0YWNsZTtcclxuICAgICAgICBhZ2VudCA9IGk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGVjayBmb3IgY29sbGlzaW9uIHdpdGggb2JzdGFjbGVzXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gb2JzdGFjbGVzW2ldLmdldFZlbG9jaXR5T2JzdGFjbGUodGhpcyk7XHJcbiAgICAgIGlmIChcclxuICAgICAgICB2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiZcclxuICAgICAgICB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHByZWZlcnJlZFZlbG9jaXR5KVxyXG4gICAgICApIHtcclxuICAgICAgICBzYWZlID0gZmFsc2U7XHJcbiAgICAgICAgY29sbGlzaW9uID0gdmVsb2NpdHlPYnN0YWNsZTtcclxuICAgICAgICBhZ2VudCA9IC0xOyAvLyBub3QgY29sbGlkaW5nIHdpdGggYW4gYWdlbnRcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIHByZWZlcnJlZCB2ZWxvY2l0eSBpcyBzYWZlLCBnbyBpbiB0aGF0IGRpcmVjdGlvblxyXG4gICAgaWYgKHNhZmUpIHtcclxuICAgICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gICAgICB0aGlzLl9jb2xvdXIgPSBDb2xvdXIuR3JlZW47XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiBub3QsIHRyeSBjbG9zZXN0IHBvaW50IG9uIGxlZnQgYW5kIHJpZ2h0IGVkZ2Ugb2YgY29uZVxyXG4gICAgaWYgKGNvbGxpc2lvbiAhPSBudWxsKSB7XHJcbiAgICAgIGNvbnN0IGxlZnQgPSBHZW9tZXRyeS5nZXRDbG9zZXN0UG9pbnRPbkxpbmUoXHJcbiAgICAgICAgY29sbGlzaW9uLnZlcnRleCxcclxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudDEsXHJcbiAgICAgICAgcHJlZmVycmVkVmVsb2NpdHlcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbnN0IHJpZ2h0ID0gR2VvbWV0cnkuZ2V0Q2xvc2VzdFBvaW50T25MaW5lKFxyXG4gICAgICAgIGNvbGxpc2lvbi52ZXJ0ZXgsXHJcbiAgICAgICAgY29sbGlzaW9uLnRhbmdlbnQyLFxyXG4gICAgICAgIHByZWZlcnJlZFZlbG9jaXR5XHJcbiAgICAgICk7XHJcblxyXG4gICAgICBsZXQgbGVmdFNhZmUgPSB0cnVlO1xyXG4gICAgICBsZXQgcmlnaHRTYWZlID0gdHJ1ZTtcclxuXHJcbiAgICAgIC8vIENoZWNrIGZvciBjb2xsaXNpb24gd2l0aCBuZWlnaGJvdXJpbmcgYWdlbnRzXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChpICE9IGFnZW50KSB7XHJcbiAgICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gdGhpcy5nZXRBZ2VudFZlbG9jaXR5T2JzdGFjbGUobmVpZ2hib3Vyc1tpXSk7XHJcbiAgICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSAhPSBudWxsICYmIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMobGVmdCkpIHtcclxuICAgICAgICAgICAgbGVmdFNhZmUgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiYgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhsZWZ0KSkge1xyXG4gICAgICAgICAgICByaWdodFNhZmUgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENoZWNrIGZvciBjb2xsaXNpb24gd2l0aCBvYnN0YWNsZXNcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYnN0YWNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gb2JzdGFjbGVzW2ldLmdldFZlbG9jaXR5T2JzdGFjbGUodGhpcyk7XHJcbiAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJiB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKGxlZnQpKSB7XHJcbiAgICAgICAgICBsZWZ0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSAhPSBudWxsICYmIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMobGVmdCkpIHtcclxuICAgICAgICAgIHJpZ2h0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGxlZnRTYWZlICYmIHJpZ2h0U2FmZSkge1xyXG4gICAgICAgIC8vIElmIGJvdGggYXJlIHNhZmUgdGFrZSBjbG9zZXN0IHRvIHByZWZlcnJlZCB2ZWxvY2l0eVxyXG4gICAgICAgIGlmIChcclxuICAgICAgICAgIGxlZnQuc3VidHJhY3QocHJlZmVycmVkVmVsb2NpdHkpLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgICAgICByaWdodC5zdWJ0cmFjdChwcmVmZXJyZWRWZWxvY2l0eSkubWFnbml0dWRlU3FyZCgpXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSBsZWZ0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSByaWdodDtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSBpZiAobGVmdFNhZmUpIHtcclxuICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSBsZWZ0O1xyXG4gICAgICB9IGVsc2UgaWYgKHJpZ2h0U2FmZSkge1xyXG4gICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IHJpZ2h0O1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobGVmdFNhZmUgfHwgcmlnaHRTYWZlKSB7XHJcbiAgICAgICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgICAgICAgdGhpcy5zZXRDb2xvdXIocHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEVsc2UsIHNhbXBsZSByYW5kb20gdmVsb2NpdGllcyBhbmQgc2VsZWN0IHRoZSBvbmUgd2l0aCB0aGUgbGVhc3QgcGVuYWx0eVxyXG4gICAgY29uc3Qgc2FtcGxlcyA9IDEwMDsgLy8gbnVtYmVyIG9mIHZlbG9jaXRpZXMgdG8gdHJ5XHJcbiAgICBjb25zdCB3ID0gMjAwOyAvLyBwYXJhbWV0ZXIgZm9yIHBlbmFsdHlcclxuICAgIGxldCBtaW5QZW5hbHR5ID0gSW5maW5pdHk7XHJcbiAgICBsZXQgYmVzdFZlbG9jaXR5ID0gbmV3IFZlY3RvcjJmKDAsIDApO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2FtcGxlczsgaSsrKSB7XHJcbiAgICAgIC8vIFNhbXBsZSB2ZWxvY2l0eSBmcm9tIGVudGlyZSBhbGxvd2VkIHZlbG9jaXR5IHNwYWNlXHJcbiAgICAgIGNvbnN0IHNhbXBsZSA9IG5ldyBWZWN0b3IyZigwLCAwKS5zYW1wbGUoMSk7XHJcbiAgICAgIGxldCBtaW5UaW1lVG9Db2xsaXNpb24gPSBJbmZpbml0eTtcclxuXHJcbiAgICAgIC8vIEZpbmQgdGltZSB0byBmaXJzdCBjb2xsaXNpb24gd2l0aCBhbm90aGVyIGFnZW50XHJcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGorKykge1xyXG4gICAgICAgIGNvbnN0IGIgPSBuZWlnaGJvdXJzW2pdO1xyXG4gICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSB0aGlzLmdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShiKTtcclxuXHJcbiAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgPT0gbnVsbCB8fCB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHNhbXBsZSkpIHtcclxuICAgICAgICAgIGNvbnN0IHRpbWVUb0NvbGxpc2lvbiA9IEdlb21ldHJ5LmdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uKFxyXG4gICAgICAgICAgICBiLmdldFBvc2l0aW9uKCkuYWRkKGIuZ2V0RGlyZWN0aW9uKCkpLFxyXG4gICAgICAgICAgICB0aGlzLlJhZGl1cyArIGIuUmFkaXVzLFxyXG4gICAgICAgICAgICB0aGlzLl9wb3NpdGlvbixcclxuICAgICAgICAgICAgc2FtcGxlLnN1YnRyYWN0KGIuZ2V0RGlyZWN0aW9uKCkpXHJcbiAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgIGlmICh0aW1lVG9Db2xsaXNpb24gPCBtaW5UaW1lVG9Db2xsaXNpb24pIHtcclxuICAgICAgICAgICAgbWluVGltZVRvQ29sbGlzaW9uID0gdGltZVRvQ29sbGlzaW9uO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gRmluZCB0aW1lIHRvIGZpcnN0IGNvbGxpc2lvbiB3aXRoIGFuIG9ic3RhY2xlXHJcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgb2JzdGFjbGVzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgY29uc3QgYiA9IG9ic3RhY2xlc1tqXTtcclxuICAgICAgICBpZiAoYiBpbnN0YW5jZW9mIENpcmNsZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gYi5nZXRWZWxvY2l0eU9ic3RhY2xlKHRoaXMpO1xyXG5cclxuICAgICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlID09IG51bGwgfHwgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhzYW1wbGUpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRpbWVUb0NvbGxpc2lvbiA9IEdlb21ldHJ5LmdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uKFxyXG4gICAgICAgICAgICAgIGIuUG9zaXRpb24sXHJcbiAgICAgICAgICAgICAgdGhpcy5SYWRpdXMgKyBiLlJhZGl1cyxcclxuICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbixcclxuICAgICAgICAgICAgICBzYW1wbGVcclxuICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aW1lVG9Db2xsaXNpb24gPCBtaW5UaW1lVG9Db2xsaXNpb24pIHtcclxuICAgICAgICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSB0aW1lVG9Db2xsaXNpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKGIgaW5zdGFuY2VvZiBMaW5lT2JzdGFjbGUpIHtcclxuICAgICAgICAgIGNvbnN0IHRpbWVUb0NvbGxpc2lvbiA9XHJcbiAgICAgICAgICAgIChHZW9tZXRyeS5nZXRMaW5lTGluZUludGVyc2VjdGlvbihcclxuICAgICAgICAgICAgICBiLlN0YXJ0LFxyXG4gICAgICAgICAgICAgIGIuRW5kLFxyXG4gICAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uLFxyXG4gICAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uLmFkZChzYW1wbGUubm9ybWFsaXNlKCkubXVsdGlwbHkodGhpcy5SYWRpdXMpKVxyXG4gICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgLnN1YnRyYWN0KHRoaXMuX3Bvc2l0aW9uKVxyXG4gICAgICAgICAgICAgIC5tYWduaXR1ZGUoKSAtXHJcbiAgICAgICAgICAgICAgdGhpcy5SYWRpdXMpIC9cclxuICAgICAgICAgICAgc2FtcGxlLm1hZ25pdHVkZSgpO1xyXG5cclxuICAgICAgICAgIGlmICh0aW1lVG9Db2xsaXNpb24gPCBtaW5UaW1lVG9Db2xsaXNpb24pIHtcclxuICAgICAgICAgICAgbWluVGltZVRvQ29sbGlzaW9uID0gdGltZVRvQ29sbGlzaW9uO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQXR0ZW1wdCB0byBwcmV2ZW50IGludGVyc2VjdGlvblxyXG4gICAgICBpZiAobWluVGltZVRvQ29sbGlzaW9uIDwgMTApIHtcclxuICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSAwO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBDYWxjdWxhdGUgcGVuYWx0eVxyXG4gICAgICBjb25zdCBwZW5hbHR5ID1cclxuICAgICAgICB3IC8gbWluVGltZVRvQ29sbGlzaW9uICsgcHJlZmVycmVkVmVsb2NpdHkuc3VidHJhY3Qoc2FtcGxlKS5tYWduaXR1ZGUoKTsgLy8gVFMgY29ycmVjdGx5IGhhbmRsZXMgZGl2aWRlIGJ5IHplcm8gb3IgaW5maW5pdHlcclxuXHJcbiAgICAgIGlmIChwZW5hbHR5IDwgbWluUGVuYWx0eSkge1xyXG4gICAgICAgIG1pblBlbmFsdHkgPSBwZW5hbHR5O1xyXG4gICAgICAgIGJlc3RWZWxvY2l0eSA9IHNhbXBsZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGJlc3RWZWxvY2l0eTtcclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gICAgdGhpcy5zZXRDb2xvdXIocHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShiOiBBZ2VudCk6IFZlbG9jaXR5T2JzdGFjbGUgfCBudWxsIHtcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IGIuZ2V0RGlyZWN0aW9uKCk7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGlzIGFnZW50J3MgcG9zaXRpb25cclxuICAgIGNvbnN0IHBvc2l0aW9uQiA9IGIuZ2V0UG9zaXRpb24oKS5zdWJ0cmFjdCh0aGlzLl9wb3NpdGlvbik7XHJcblxyXG4gICAgLy8gRmluZCBNaW5rb3dza2kgc3VtIG9mIGFnZW50c1xyXG4gICAgY29uc3QgY2VudHJlID0gcG9zaXRpb25CLmFkZCh2ZWxvY2l0eUIpO1xyXG4gICAgY29uc3QgcmFkaXVzID0gYi5SYWRpdXMgKyB0aGlzLlJhZGl1cztcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgYW5nbGVzXHJcbiAgICBjb25zdCBkaWZmID0gdmVsb2NpdHlCLnN1YnRyYWN0KGNlbnRyZSk7XHJcbiAgICBjb25zdCBkaXN0ID0gZGlmZi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChkaXN0IDwgcmFkaXVzKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHRoZXRhID0gTWF0aC5hY29zKHJhZGl1cyAvIGRpc3QpO1xyXG4gICAgY29uc3QgcGhpID0gTWF0aC5hdGFuMihkaWZmLnksIGRpZmYueCk7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIHRhbmdlbnQgdmVjdG9yc1xyXG4gICAgY29uc3QgYW5nbGUxID0gcGhpICsgdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MSA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTEpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYW5nbGUyID0gcGhpIC0gdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTIpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMilcclxuICAgICk7XHJcblxyXG4gICAgLy8gUmV0dXJuIHZlbG9jaXR5IG9ic3RhY2xlXHJcbiAgICByZXR1cm4gbmV3IFZlbG9jaXR5T2JzdGFjbGUodmVsb2NpdHlCLCB0YW5nZW50MSwgdGFuZ2VudDIpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIHNldENvbG91cihwcmVmZXJyZWRWZWxvY2l0eTogVmVjdG9yMmYpIHtcclxuICAgIGNvbnN0IHN0cmVzcyA9IHByZWZlcnJlZFZlbG9jaXR5LnN1YnRyYWN0KHRoaXMuX2RpcmVjdGlvbikubWFnbml0dWRlKCk7XHJcbiAgICBjb25zdCBodWUgPSBzdHJlc3MgPiAxID8gMCA6ICgxIC0gc3RyZXNzKSAvIDM7XHJcbiAgICB0aGlzLl9jb2xvdXIgPSBDb2xvdXIuRnJvbUhzdihodWUsIDEsIDEpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBWT0FnZW50IH0gZnJvbSBcIi4vVk9BZ2VudFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBWZWxvY2l0eU9ic3RhY2xlIH0gZnJvbSBcIi4uL1ZlbG9jaXR5T2JzdGFjbGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBSVk9BZ2VudCBleHRlbmRzIFZPQWdlbnQge1xyXG4gIC8vIE92ZXJyaWRlIGdldFZlbG9jaXR5T2JzdGFjbGUgdG8gcHJvZHVjZSBSZWNpcHJvY2FsIFZlbG9jaXR5IE9ic3RhY2xlXHJcbiAgcHJvdGVjdGVkIGdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShiOiBBZ2VudCk6IFZlbG9jaXR5T2JzdGFjbGUgfCBudWxsIHtcclxuICAgIGNvbnN0IHZlbG9jaXR5QSA9IHRoaXMuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBiLmdldERpcmVjdGlvbigpO1xyXG4gICAgY29uc3QgdmVydGV4ID0gdmVsb2NpdHlBLmFkZCh2ZWxvY2l0eUIpLmRpdmlkZSgyKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoaXMgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gYi5nZXRQb3NpdGlvbigpLnN1YnRyYWN0KHRoaXMuX3Bvc2l0aW9uKTtcclxuXHJcbiAgICAvLyBGaW5kIE1pbmtvd3NraSBzdW0gb2YgYWdlbnRzXHJcbiAgICBjb25zdCBjZW50cmUgPSBwb3NpdGlvbkIuYWRkKHZlbG9jaXR5Qik7XHJcbiAgICBjb25zdCByYWRpdXMgPSBiLlJhZGl1cyArIHRoaXMuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZXJ0ZXgsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IFZPQWdlbnQgfSBmcm9tIFwiLi9WT0FnZW50XCI7XHJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL0dlb21ldHJ5XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEhSVk9BZ2VudCBleHRlbmRzIFZPQWdlbnQge1xyXG4gIC8vIE92ZXJyaWRlIGdldFZlbG9jaXR5T2JzdGFjbGUgdG8gcHJvZHVjZSBIeWJyaWQgUmVjaXByb2NhbCBWZWxvY2l0eSBPYnN0YWNsZVxyXG4gIHByb3RlY3RlZCBnZXRBZ2VudFZlbG9jaXR5T2JzdGFjbGUoYjogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHwgbnVsbCB7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUEgPSB0aGlzLmdldERpcmVjdGlvbigpO1xyXG4gICAgY29uc3QgdmVsb2NpdHlCID0gYi5nZXREaXJlY3Rpb24oKTtcclxuXHJcbiAgICAvLyBHZXQgcmVzcGVjdGl2ZSB2ZXJ0aWNlc1xyXG4gICAgY29uc3Qgdm9WZXJ0ZXggPSB2ZWxvY2l0eUI7XHJcbiAgICBjb25zdCBydm9WZXJ0ZXggPSB2ZWxvY2l0eUEuYWRkKHZlbG9jaXR5QikuZGl2aWRlKDIpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIENoZWNrIHdoaWNoIHNpZGUgdG8gcGFzcyBvblxyXG4gICAgY29uc3Qgc2lkZSA9XHJcbiAgICAgIChwb3NpdGlvbkIueCAtIHZlbG9jaXR5Qi54KSAqICh2ZWxvY2l0eUEueSAtIHZlbG9jaXR5Qi55KSAtXHJcbiAgICAgIChwb3NpdGlvbkIueSAtIHZlbG9jaXR5Qi55KSAqICh2ZWxvY2l0eUEueCAtIHZlbG9jaXR5Qi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdmVydGV4IGFzIGludGVyc2VjdGlvbiBvZiBWTyBhbmQgUlZPIGNvbmVcclxuICAgIGxldCB2ZXJ0ZXg7XHJcbiAgICBpZiAoc2lkZSA+IDApIHtcclxuICAgICAgLy8gXCJMZWZ0XCJcclxuICAgICAgdmVydGV4ID0gR2VvbWV0cnkuZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgdm9WZXJ0ZXgsXHJcbiAgICAgICAgdm9WZXJ0ZXguYWRkKHRhbmdlbnQxKSxcclxuICAgICAgICBydm9WZXJ0ZXgsXHJcbiAgICAgICAgcnZvVmVydGV4LmFkZCh0YW5nZW50MilcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFwiUmlnaHRcIlxyXG4gICAgICB2ZXJ0ZXggPSBHZW9tZXRyeS5nZXRMaW5lTGluZUludGVyc2VjdGlvbihcclxuICAgICAgICB2b1ZlcnRleCxcclxuICAgICAgICB2b1ZlcnRleC5hZGQodGFuZ2VudDIpLFxyXG4gICAgICAgIHJ2b1ZlcnRleCxcclxuICAgICAgICBydm9WZXJ0ZXguYWRkKHRhbmdlbnQxKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJldHVybiBoeWJyaWQgcmVjaXByaWNvbCB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlcnRleCwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IEJhc2ljQWdlbnQgfSBmcm9tIFwiLi9hZ2VudHMvQmFzaWNBZ2VudFwiO1xyXG5pbXBvcnQgeyBTdG9wQWdlbnQgfSBmcm9tIFwiLi9hZ2VudHMvU3RvcEFnZW50XCI7XHJcbmltcG9ydCB7IFZPQWdlbnQgfSBmcm9tIFwiLi9hZ2VudHMvVk9BZ2VudFwiO1xyXG5pbXBvcnQgeyBSVk9BZ2VudCB9IGZyb20gXCIuL2FnZW50cy9SVk9BZ2VudFwiO1xyXG5pbXBvcnQgeyBIUlZPQWdlbnQgfSBmcm9tIFwiLi9hZ2VudHMvSFJWT0FnZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQWdlbnRGYWN0b3J5IHtcclxuICBzdGF0aWMgZ2V0QWdlbnQoXHJcbiAgICB0eXBlOiBzdHJpbmcsXHJcbiAgICBpZDogbnVtYmVyLFxyXG4gICAgc3RhcnRQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmZcclxuICApOiBBZ2VudCB7XHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSBcIkJhc2ljQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IEJhc2ljQWdlbnQoaWQsIHN0YXJ0UG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgY2FzZSBcIlN0b3BBZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgU3RvcEFnZW50KGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgIGNhc2UgXCJWT0FnZW50XCI6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBWT0FnZW50KGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgIGNhc2UgXCJSVk9BZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgUlZPQWdlbnQoaWQsIHN0YXJ0UG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgY2FzZSBcIkhSVk9BZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgSFJWT0FnZW50KGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGFnZW50IHR5cGUgXFxcIiR7dHlwZX1cXFwiYCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgQWdlbnRGYWN0b3J5IH0gZnJvbSBcIi4vQWdlbnRGYWN0b3J5XCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuL0lPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBDaXJjbGVPYnN0YWNsZSB9IGZyb20gXCIuL29ic3RhY2xlcy9DaXJjbGVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBMaW5lT2JzdGFjbGUgfSBmcm9tIFwiLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vVmVjdG9yMmZcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvbiB7XHJcbiAgYWdlbnRzOiBBZ2VudFtdO1xyXG4gIG9ic3RhY2xlczogSU9ic3RhY2xlW107XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0aW9uRmFjdG9yeSB7XHJcbiAgc3RhdGljIGdldENvbmZpZ3VyYXRpb24oXHJcbiAgICB0eXBlOiBzdHJpbmcsXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICBjYXNlIFwiUmFuZG9tVG9SYW5kb21cIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5SYW5kb21Ub1JhbmRvbShhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIlJhbmRvbVRvTGluZVwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLlJhbmRvbVRvTGluZShhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkNpcmNsZVRvQ2lyY2xlXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQ2lyY2xlVG9DaXJjbGUoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJHcmlkVG9HcmlkXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuR3JpZFRvR3JpZChhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkJvbGxhcmRzXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm9sbGFyZHMoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJCb3R0bGVuZWNrXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm90dGxlbmVjayhhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkJvdHRsZW5lY2tXaXRoTmF2XCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm90dGxlbmVja1dpdGhOYXYoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJTbGFsb21cIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5TbGFsb20oYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJTbGFsb21XaXRoTmF2XCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuU2xhbG9tV2l0aE5hdihhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29uZmlndXJhdGlvbiB0eXBlIFxcXCIke3R5cGV9XFxcImApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgUmFuZG9tVG9SYW5kb20oXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIC8vIFJhbmRvbSBzdGFydCBwb3NpdGlvbiB0byByYW5kb20gZ29hbCBwb3NpdGlvblxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3Qgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgNTBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKSk7XHJcblxyXG4gICAgY29uc3QgZ29hbFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoLFxyXG4gICAgICBoZWlnaHQsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA1MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMikpKTtcclxuICAgIG51bWJlck9mQWdlbnRzID0gTWF0aC5taW4oc3RhcnRQb3NpdGlvbnMubGVuZ3RoLCBnb2FsUG9zaXRpb25zLmxlbmd0aCk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbnNbaV0pXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBbXSB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgUmFuZG9tVG9MaW5lKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBSYW5kb20gc3RhcnQgcG9zaXRpb24gdG8gZml4ZWQgcG9zaXRpb24gb24gbGluZVxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgbGV0IHN0YXJ0UG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGgsXHJcbiAgICAgIGhlaWdodCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDUwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgbmV3IFZlY3RvcjJmKCgoaSArIDEpIC8gKG51bWJlck9mQWdlbnRzICsgMSkgLSAxIC8gMikgKiB3aWR0aCwgMClcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBbXSB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgQ2lyY2xlVG9DaXJjbGUoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIF93aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBQb3NpdGlvbiBvbiByYWRpdXMgb2YgY2lyY2xlIHRvIG9wcG9zaXRlIHBvaW50XHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCByYWRpdXMgPSBoZWlnaHQgLyAyIC0gMjU7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFuZ2xlID0gKDIgKiBNYXRoLlBJICogaSkgLyBudW1iZXJPZkFnZW50cztcclxuICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgIGksXHJcbiAgICAgICAgbmV3IFZlY3RvcjJmKHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKSwgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpKSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgIG5ldyBWZWN0b3IyZihcclxuICAgICAgICAgICAgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUgKyBNYXRoLlBJKSxcclxuICAgICAgICAgICAgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUgKyBNYXRoLlBJKVxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IFtdIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBHcmlkVG9HcmlkKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgX2hlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgLy8gVHdvIG9wcG9zaW5nIGdyaWRzIG9mIGFnZW50cyBwYXNzaW5nIHRocm91Z2ggZWFjaG90aGVyXHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBncmlkU2l6ZSA9IE1hdGguY2VpbChNYXRoLnNxcnQobnVtYmVyT2ZBZ2VudHMgLyAyKSk7XHJcbiAgICBjb25zdCBvZmZzZXQgPSA5MDtcclxuICAgIGxldCB4ID0gMzAgLSB3aWR0aCAvIDI7XHJcbiAgICBsZXQgeSA9ICgoZ3JpZFNpemUgLSAxKSAvIDIpICogb2Zmc2V0O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBpZHggPSBNYXRoLmZsb29yKGkgLyAyKTtcclxuICAgICAgY29uc3Qgcm93ID0gTWF0aC5mbG9vcihpZHggLyBncmlkU2l6ZSk7XHJcbiAgICAgIGNvbnN0IGNvbCA9IGlkeCAlIGdyaWRTaXplO1xyXG5cclxuICAgICAgaWYgKGkgJSAyID09IDApIHtcclxuICAgICAgICAvLyBMSFNcclxuICAgICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICAgIGksXHJcbiAgICAgICAgICBuZXcgVmVjdG9yMmYoeCArIChncmlkU2l6ZSAtIDEgLSBjb2wpICogb2Zmc2V0LCB5IC0gcm93ICogb2Zmc2V0KSxcclxuICAgICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgICBuZXcgVmVjdG9yMmYoLXggLSBjb2wgKiBvZmZzZXQsIHkgLSByb3cgKiBvZmZzZXQpXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgKTtcclxuICAgICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gUkhTXHJcbiAgICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgICBpLFxyXG4gICAgICAgICAgbmV3IFZlY3RvcjJmKC14IC0gKGdyaWRTaXplIC0gMSAtIGNvbCkgKiBvZmZzZXQsIHkgLSByb3cgKiBvZmZzZXQpLFxyXG4gICAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICAgIG5ldyBWZWN0b3IyZih4ICsgY29sICogb2Zmc2V0LCB5IC0gcm93ICogb2Zmc2V0KVxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogW10gfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIEJvbGxhcmRzKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICBjb25zdCBhZ2VudHM6IEFnZW50W10gPSBbXTtcclxuICAgIGNvbnN0IHN0YXJ0UG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGggLyAyIC0gMjAwLFxyXG4gICAgICBoZWlnaHQgLSA0MCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDgwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyIC0gMjApKSk7XHJcbiAgICBudW1iZXJPZkFnZW50cyA9IHN0YXJ0UG9zaXRpb25zLmxlbmd0aDtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mQWdlbnRzOyBpKyspIHtcclxuICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgIGksXHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbnNbaV0sXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICBzdGFydFBvc2l0aW9uc1tpXS5hZGQobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiArIDIwMCwgMCkpXHJcbiAgICAgICAgKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSA9IFtdO1xyXG5cclxuICAgIC8vIENlbnRyYWwgbGluZSBvZiBib2xsYXJkc1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcclxuICAgICAgb2JzdGFjbGVzLnB1c2gobmV3IENpcmNsZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAxMjAgKiBpIC0gMjQwKSwgMjApKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBvYnN0YWNsZXMgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIEJvdHRsZW5lY2soXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IGdhcFdpZHRoID0gMjAwO1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgc3RhcnRQb3NpdGlvbnNbaV0uYWRkKG5ldyBWZWN0b3IyZih3aWR0aCAvIDIgKyAyMDAsIDApKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG9ic3RhY2xlczogSU9ic3RhY2xlW10gPSBbXTtcclxuXHJcbiAgICAvLyBDZW50cmFsIHdhbGwgd2l0aCBuYXJyb3cgb3BlbmluZ1xyXG4gICAgb2JzdGFjbGVzLnB1c2goXHJcbiAgICAgIG5ldyBMaW5lT2JzdGFjbGUobmV3IFZlY3RvcjJmKDAsIC01MDApLCBuZXcgVmVjdG9yMmYoMCwgLWdhcFdpZHRoIC8gMikpXHJcbiAgICApO1xyXG4gICAgb2JzdGFjbGVzLnB1c2goXHJcbiAgICAgIG5ldyBMaW5lT2JzdGFjbGUobmV3IFZlY3RvcjJmKDAsIDUwMCksIG5ldyBWZWN0b3IyZigwLCBnYXBXaWR0aCAvIDIpKVxyXG4gICAgKTtcclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBvYnN0YWNsZXMgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIEJvdHRsZW5lY2tXaXRoTmF2KFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICBjb25zdCBnYXBXaWR0aCA9IDIwMDtcclxuICAgIGNvbnN0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3Qgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCAvIDIgLSAyMDAsXHJcbiAgICAgIGhlaWdodCAtIDQwLFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgODBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIgLSAyMCkpKTtcclxuICAgIG51bWJlck9mQWdlbnRzID0gc3RhcnRQb3NpdGlvbnMubGVuZ3RoO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBwcmVmVmVsID0gKHBvczogVmVjdG9yMmYpID0+IHtcclxuICAgICAgICBpZiAocG9zLnggPCAwKSB7XHJcbiAgICAgICAgICBpZiAocG9zLm1hZ25pdHVkZVNxcmQoKSA+ICgoZ2FwV2lkdGggLSAyMCkgLyAyKSAqKiAyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihuZXcgVmVjdG9yMmYoMCwgMCkpKFxyXG4gICAgICAgICAgICAgIHBvc1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyZigxLCAwKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgICBzdGFydFBvc2l0aW9uc1tpXS5hZGQobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiArIDIwMCwgMCkpXHJcbiAgICAgICAgICApKHBvcyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICBwcmVmVmVsXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gQ2VudHJhbCB3YWxsIHdpdGggbmFycm93IG9wZW5pbmdcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAtNTAwKSwgbmV3IFZlY3RvcjJmKDAsIC1nYXBXaWR0aCAvIDIpKVxyXG4gICAgKTtcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCA1MDApLCBuZXcgVmVjdG9yMmYoMCwgZ2FwV2lkdGggLyAyKSlcclxuICAgICk7XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogb2JzdGFjbGVzIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBTbGFsb20oXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3Qgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCAvIDIgLSAyNTAsXHJcbiAgICAgIGhlaWdodCAtIDQwLFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgODBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIgLSAyMCkpKTtcclxuICAgIG51bWJlck9mQWdlbnRzID0gc3RhcnRQb3NpdGlvbnMubGVuZ3RoO1xyXG5cclxuICAgIGNvbnN0IGdhcEhlaWdodCA9IDIwMDtcclxuICAgIGNvbnN0IHdhbGxIZWlnaHQgPSBoZWlnaHQgLyAyIC0gZ2FwSGVpZ2h0O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLmFkZChuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjUwLCAwKSlcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gU2xhbG9tXHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoLTIwMCwgNTAwKSwgbmV3IFZlY3RvcjJmKC0yMDAsIC13YWxsSGVpZ2h0KSlcclxuICAgICk7XHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgLTUwMCksIG5ldyBWZWN0b3IyZigwLCB3YWxsSGVpZ2h0KSlcclxuICAgICk7XHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMjAwLCA1MDApLCBuZXcgVmVjdG9yMmYoMjAwLCAtd2FsbEhlaWdodCkpXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IG9ic3RhY2xlcyB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgU2xhbG9tV2l0aE5hdihcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDI1MCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgY29uc3QgZ2FwSGVpZ2h0ID0gMjAwO1xyXG4gICAgY29uc3Qgd2FsbEhlaWdodCA9IGhlaWdodCAvIDIgLSBnYXBIZWlnaHQ7XHJcbiAgICBjb25zdCBtaWRHYXAgPSB3YWxsSGVpZ2h0ICsgZ2FwSGVpZ2h0IC8gMjtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mQWdlbnRzOyBpKyspIHtcclxuICAgICAgY29uc3QgcHJlZlZlbCA9IChwb3M6IFZlY3RvcjJmKSA9PiB7XHJcbiAgICAgICAgaWYgKHBvcy54IDw9IC0yMDApIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgcG9zLnN1YnRyYWN0KG5ldyBWZWN0b3IyZigtMjAwLCAtbWlkR2FwKSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKGdhcEhlaWdodCAtIDIwKSAqKiAyIC8vIFN1YnRyYWN0IGFnZW50IHJhZGl1c1xyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgVmVjdG9yMmYoMSwgMCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICAgICAgbmV3IFZlY3RvcjJmKC0yMDAsIC1taWRHYXApXHJcbiAgICAgICAgICAgICkocG9zKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHBvcy54IDw9IDApIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgcG9zLnN1YnRyYWN0KG5ldyBWZWN0b3IyZigwLCBtaWRHYXApKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgICAgICAoZ2FwSGVpZ2h0IC0gMjApICoqIDIgLy8gU3VidHJhY3QgYWdlbnQgcmFkaXVzXHJcbiAgICAgICAgICApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyZigxLCAwKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgICAgICBuZXcgVmVjdG9yMmYoMCwgbWlkR2FwKVxyXG4gICAgICAgICAgICApKHBvcyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChwb3MueCA8PSAyMDApIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgcG9zLnN1YnRyYWN0KG5ldyBWZWN0b3IyZigyMDAsIC1taWRHYXApKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgICAgICAoZ2FwSGVpZ2h0IC0gMjApICoqIDIgLy8gU3VidHJhY3QgYWdlbnQgcmFkaXVzXHJcbiAgICAgICAgICApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyZigxLCAwKTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgICAgICBuZXcgVmVjdG9yMmYoMjAwLCAtbWlkR2FwKVxyXG4gICAgICAgICAgICApKHBvcyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJldHVybiB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgICAgbmV3IFZlY3RvcjJmKFxyXG4gICAgICAgICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLnggKyB3aWR0aCAvIDIgKyAyNTAsXHJcbiAgICAgICAgICAgICAgLXN0YXJ0UG9zaXRpb25zW2ldLnlcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgKShwb3MpO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgIGksXHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbnNbaV0sXHJcbiAgICAgICAgcHJlZlZlbFxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSA9IFtdO1xyXG5cclxuICAgIC8vIFNsYWxvbVxyXG4gICAgb2JzdGFjbGVzLnB1c2goXHJcbiAgICAgIG5ldyBMaW5lT2JzdGFjbGUobmV3IFZlY3RvcjJmKC0yMDAsIDUwMCksIG5ldyBWZWN0b3IyZigtMjAwLCAtd2FsbEhlaWdodCkpXHJcbiAgICApO1xyXG4gICAgb2JzdGFjbGVzLnB1c2goXHJcbiAgICAgIG5ldyBMaW5lT2JzdGFjbGUobmV3IFZlY3RvcjJmKDAsIC01MDApLCBuZXcgVmVjdG9yMmYoMCwgd2FsbEhlaWdodCkpXHJcbiAgICApO1xyXG4gICAgb2JzdGFjbGVzLnB1c2goXHJcbiAgICAgIG5ldyBMaW5lT2JzdGFjbGUobmV3IFZlY3RvcjJmKDIwMCwgNTAwKSwgbmV3IFZlY3RvcjJmKDIwMCwgLXdhbGxIZWlnaHQpKVxyXG4gICAgKTtcclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBvYnN0YWNsZXMgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIHByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgIGdvYWxQb3NpdGlvbjogVmVjdG9yMmZcclxuICApOiAocG9zOiBWZWN0b3IyZikgPT4gVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIChwb3MpID0+IHtcclxuICAgICAgY29uc3QgZ29hbERpcmVjdGlvbiA9IGdvYWxQb3NpdGlvbi5zdWJ0cmFjdChwb3MpO1xyXG4gICAgICBpZiAoZ29hbERpcmVjdGlvbi5tYWduaXR1ZGVTcXJkKCkgPCAxKSB7XHJcbiAgICAgICAgcmV0dXJuIGdvYWxEaXJlY3Rpb247XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGdvYWxEaXJlY3Rpb24ubm9ybWFsaXNlKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBwb2lzc29uRGlza1NhbXBsZShcclxuICAgIHhSYW5nZTogbnVtYmVyLFxyXG4gICAgeVJhbmdlOiBudW1iZXIsXHJcbiAgICBuOiBudW1iZXIsXHJcbiAgICB0aHJlc2hvbGQ6IG51bWJlclxyXG4gICk6IFZlY3RvcjJmW10ge1xyXG4gICAgbGV0IHNhbXBsZXM6IFZlY3RvcjJmW10gPSBbXTtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47IGkrKykge1xyXG4gICAgICBsZXQgcmVzYW1wbGUgPSB0cnVlO1xyXG4gICAgICBsZXQgcG9zOiBWZWN0b3IyZjtcclxuXHJcbiAgICAgIGxldCBhdHRlbXB0cyA9IDA7XHJcbiAgICAgIHdoaWxlIChyZXNhbXBsZSkge1xyXG4gICAgICAgIGF0dGVtcHRzKys7XHJcbiAgICAgICAgcmVzYW1wbGUgPSBmYWxzZTtcclxuICAgICAgICBwb3MgPSBuZXcgVmVjdG9yMmYoeFJhbmdlICogTWF0aC5yYW5kb20oKSwgeVJhbmdlICogTWF0aC5yYW5kb20oKSk7XHJcblxyXG4gICAgICAgIHNhbXBsZXMuZm9yRWFjaCgoc2FtcGxlKSA9PiB7XHJcbiAgICAgICAgICBpZiAocG9zLnN1YnRyYWN0KHNhbXBsZSkubWFnbml0dWRlU3FyZCgpIDwgdGhyZXNob2xkICoqIDIpIHtcclxuICAgICAgICAgICAgcmVzYW1wbGUgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBQcmV2ZW50IGNyYXNoIGlmIHRoZXJlIGlzIGluc3VmZmljaWVudCBzcGFjZSB0byBhZGQgYSBuZXcgYWdlbnRcclxuICAgICAgICBpZiAoYXR0ZW1wdHMgPiAxMDAwKSB7XHJcbiAgICAgICAgICBjb25zb2xlLndhcm4oXHJcbiAgICAgICAgICAgIGBGYWlsZWQgdG8gZmluZCBwb2lzc29uIGRpc2sgc2FtcGxlIChwbGFjZWQgJHtpfS8ke259KS5gXHJcbiAgICAgICAgICApO1xyXG4gICAgICAgICAgcmV0dXJuIHNhbXBsZXM7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBzYW1wbGVzLnB1c2gocG9zKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2FtcGxlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4uL0lSZW5kZXJlclwiO1xyXG5pbXBvcnQgeyBTaW11bGF0aW9uIH0gZnJvbSBcIi4uL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVHJhY2VSZW5kZXJlciBpbXBsZW1lbnRzIElSZW5kZXJlciB7XHJcbiAgcHJpdmF0ZSBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG4gIHByaXZhdGUgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICB9XHJcblxyXG4gIGluaXQoc2ltdWxhdGlvbjogU2ltdWxhdGlvbikge1xyXG4gICAgLy8gQ2xlYXIgYmFja2dyb3VuZFxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcclxuICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcInJnYigxMzUsIDE5NCwgMjUwKVwiO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oXHJcbiAgICAgIDEsXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIDEsXHJcbiAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gMixcclxuICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMlxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBEcmF3IGZsb29yXHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoNTEsIDUxLCA1MSlcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdChcclxuICAgICAgLXRoaXMuY2FudmFzLndpZHRoICogMC41NSxcclxuICAgICAgLXRoaXMuY2FudmFzLmhlaWdodCAqIDAuNTUsXHJcbiAgICAgIHRoaXMuY2FudmFzLndpZHRoICogMS4xLFxyXG4gICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgKiAxLjFcclxuICAgICk7XHJcblxyXG4gICAgLy8gRHJhdyBvYnN0YWNsZXNcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgIHRoaXMuY29udGV4dC5saW5lV2lkdGggPSAyO1xyXG4gICAgc2ltdWxhdGlvbi5nZXRPYnN0YWNsZXMoKS5mb3JFYWNoKChvYnN0YWNsZSkgPT4ge1xyXG4gICAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlKTtcclxuICAgICAgfSBlbHNlIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0xpbmVPYnN0YWNsZShvYnN0YWNsZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKHNpbXVsYXRpb246IFNpbXVsYXRpb24pIHtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcblxyXG4gICAgLy8gRHJhdyBhZ2VudHNcclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICB0aGlzLmRyYXdBZ2VudChhZ2VudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50KGFnZW50OiBBZ2VudCk6IHZvaWQge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgY29uc3QgY29sb3VyID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IGByZ2IoJHtjb2xvdXIucn0sICR7Y29sb3VyLmd9LCAke2NvbG91ci5ifSlgO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KHBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCAxLCAxKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlOiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5hcmMoXHJcbiAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgIC1vYnN0YWNsZS5Qb3NpdGlvbi55LCAvLyB5IHBvc2l0aW9uIGludmVydGVkIHRvIG1hdGNoIDNEIHZpZXdcclxuICAgICAgb2JzdGFjbGUuUmFkaXVzLFxyXG4gICAgICAwLFxyXG4gICAgICAyICogTWF0aC5QSVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBkID0gb2JzdGFjbGUuUmFkaXVzICogTWF0aC5TUVJUMV8yO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuUG9zaXRpb24ueCAtIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgLSBkKTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuUG9zaXRpb24ueCArIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgKyBkKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggKyBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55IC0gZCk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggLSBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55ICsgZCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3TGluZU9ic3RhY2xlKG9ic3RhY2xlOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlN0YXJ0LngsIC1vYnN0YWNsZS5TdGFydC55KTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuRW5kLngsIC1vYnN0YWNsZS5FbmQueSk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9HZW9tZXRyeVwiO1xyXG5pbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4uL0lBZ2VudENvbGxlY3Rpb25cIjtcclxuaW1wb3J0IHsgSUxvZ2dlciB9IGZyb20gXCIuLi9JTG9nZ2VyXCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcblxyXG4vLyBTaW1wbGUgbG9nZ2VyIGltcGxlbWVudGF0aW9uIGZvciBiYXNpYyBhbmFseXNpc1xyXG5leHBvcnQgY2xhc3MgU2ltcGxlTG9nZ2VyIGltcGxlbWVudHMgSUxvZ2dlciB7XHJcbiAgcHJpdmF0ZSBfbG9nZ2luZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX3RpbWVTdGVwOiBudW1iZXIgPSAwO1xyXG4gIHByaXZhdGUgX2FnZW50Q29sbGlzaW9uczogbnVtYmVyW10gPSBbXTtcclxuICBwcml2YXRlIF9vYnN0YWNsZUNvbGxpc2lvbnM6IG51bWJlcltdID0gW107XHJcbiAgcHJpdmF0ZSBfZnJhbWVUaW1lczogbnVtYmVyW10gPSBbXTtcclxuXHJcbiAgc3RhcnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLl9sb2dnaW5nID0gdHJ1ZTtcclxuICAgIHRoaXMuX3RpbWVTdGVwID0gMDtcclxuICAgIHRoaXMuX2ZyYW1lVGltZXMgPSBbXTtcclxuICAgIHRoaXMuX2FnZW50Q29sbGlzaW9ucyA9IFtdO1xyXG4gICAgdGhpcy5fb2JzdGFjbGVDb2xsaXNpb25zID0gW107XHJcbiAgICBjb25zb2xlLmxvZyhcIlN0YXJ0ZWQgbG9nZ2luZ1wiKTtcclxuICB9XHJcblxyXG4gIHN0b3AoKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuX2xvZ2dpbmcpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2xvZ2dpbmcgPSBmYWxzZTtcclxuICAgIGNvbnNvbGUubG9nKFwiU3RvcHBlZCBsb2dnaW5nXCIpO1xyXG4gICAgY29uc29sZS5sb2coYFRpbWVzdGVwczogJHt0aGlzLl90aW1lU3RlcH1gKTtcclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgVG90YWwgZnJhbWUgdGltZTogJHsoXHJcbiAgICAgICAgdGhpcy5fZnJhbWVUaW1lcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKSAvIDEwMDBcclxuICAgICAgKS50b0ZpeGVkKDMpfSBzZWNvbmRzYFxyXG4gICAgKTtcclxuICAgIGNvbnNvbGUubG9nKGBGcmFtZSB0aW1lczogJHt0aGlzLl9mcmFtZVRpbWVzfWApO1xyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBUb3RhbCBhZ2VudCBjb2xsaXNpb25zOiAke3RoaXMuX2FnZW50Q29sbGlzaW9ucy5yZWR1Y2UoXHJcbiAgICAgICAgKGEsIGIpID0+IGEgKyBiLFxyXG4gICAgICAgIDBcclxuICAgICAgKX1gXHJcbiAgICApO1xyXG4gICAgY29uc29sZS5sb2coYEFnZW50IGNvbGxpc2lvbnM6ICR7dGhpcy5fYWdlbnRDb2xsaXNpb25zfWApO1xyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGBUb3RhbCBvYnN0YWNsZSBjb2xsaXNpb25zOiAke3RoaXMuX29ic3RhY2xlQ29sbGlzaW9ucy5yZWR1Y2UoXHJcbiAgICAgICAgKGEsIGIpID0+IGEgKyBiLFxyXG4gICAgICAgIDBcclxuICAgICAgKX1gXHJcbiAgICApO1xyXG4gICAgY29uc29sZS5sb2coYE9ic3RhY2xlIGNvbGxpc2lvbnM6ICR7dGhpcy5fb2JzdGFjbGVDb2xsaXNpb25zfWApO1xyXG4gIH1cclxuXHJcbiAgbG9nKGFnZW50czogSUFnZW50Q29sbGVjdGlvbiwgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSwgZGVsdGFUOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5fbG9nZ2luZykge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZnJhbWVUaW1lc1t0aGlzLl90aW1lU3RlcF0gPSB0aGlzLnJvdW5kM2RwKGRlbHRhVCk7XHJcbiAgICB0aGlzLl9hZ2VudENvbGxpc2lvbnNbdGhpcy5fdGltZVN0ZXBdID0gMDtcclxuICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0gPSAwO1xyXG5cclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICBjb25zdCBuZWlnaGJvdXJzID0gYWdlbnRzLmdldE5laWdoYm91cnNJblJhbmdlUmVjdGlsaW5lYXIoYWdlbnQsIDEwMCk7XHJcbiAgICAgIG5laWdoYm91cnMuZm9yRWFjaCgobmVpZ2hib3VyKSA9PiB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgbmVpZ2hib3VyLklkIDwgYWdlbnQuSWQgLyogYXZvaWRzIGRvdWJsZSBjb3VudGluZyAqLyAmJlxyXG4gICAgICAgICAgbmVpZ2hib3VyXHJcbiAgICAgICAgICAgIC5nZXRQb3NpdGlvbigpXHJcbiAgICAgICAgICAgIC5zdWJ0cmFjdChhZ2VudC5nZXRQb3NpdGlvbigpKVxyXG4gICAgICAgICAgICAubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKG5laWdoYm91ci5SYWRpdXMgKyBhZ2VudC5SYWRpdXMpICoqIDJcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuX2FnZW50Q29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgb2JzdGFjbGVzLmZvckVhY2goKG9ic3RhY2xlKSA9PiB7XHJcbiAgICAgICAgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgTGluZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgICBjb25zdCB0ID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgIGFnZW50LmdldFBvc2l0aW9uKCksXHJcbiAgICAgICAgICAgIGFnZW50LlJhZGl1cyxcclxuICAgICAgICAgICAgb2JzdGFjbGUuU3RhcnQsXHJcbiAgICAgICAgICAgIG9ic3RhY2xlLkVuZC5zdWJ0cmFjdChvYnN0YWNsZS5TdGFydClcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgaWYgKHQgPiAwICYmIHQgPCAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgb2JzdGFjbGUuUG9zaXRpb24uc3VidHJhY3QoYWdlbnQuZ2V0UG9zaXRpb24oKSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKG9ic3RhY2xlLlJhZGl1cyArIGFnZW50LlJhZGl1cykgKiogMlxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fdGltZVN0ZXArKztcclxuICB9XHJcblxyXG4gIHJvdW5kM2RwKGY6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZCgoZiArIE51bWJlci5FUFNJTE9OKSAqIDEwMDApIC8gMTAwMDsgLy8gZXBzaWxvbiB0byBhdm9pZCBGUCBlcnJvcnNcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4vSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFJlbmRlcmVyMkQgfSBmcm9tIFwiLi9yZW5kZXJlcnMvUmVuZGVyZXIyRFwiO1xyXG5pbXBvcnQgeyBSZW5kZXJlcjNEIH0gZnJvbSBcIi4vcmVuZGVyZXJzL1JlbmRlcmVyM0RcIjtcclxuaW1wb3J0IHsgQWdlbnRUcmVlIH0gZnJvbSBcIi4vQWdlbnRUcmVlXCI7XHJcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25GYWN0b3J5IH0gZnJvbSBcIi4vQ29uZmlndXJhdGlvbkZhY3RvcnlcIjtcclxuaW1wb3J0IHsgVHJhY2VSZW5kZXJlciB9IGZyb20gXCIuL3JlbmRlcmVycy9UcmFjZVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFNpbXBsZUxvZ2dlciB9IGZyb20gXCIuL2xvZ2dlcnMvU2ltcGxlTG9nZ2VyXCI7XHJcblxyXG5jb25zdCBjb25maWdTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbmZpZ1wiKSBhcyBIVE1MU2VsZWN0RWxlbWVudDtcclxuY29uc3QgYWdlbnRUeXBlU2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJhZ2VudFR5cGVcIlxyXG4pIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xyXG5jb25zdCByYW5nZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyYW5nZVwiKSBhcyBIVE1MU2VsZWN0RWxlbWVudDtcclxuY29uc3QgbnVtYmVyT2ZBZ2VudHNJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gIFwibnVtYmVyT2ZBZ2VudHNcIlxyXG4pIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG5jb25zdCBjYW52YXMyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzMmRcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbmNvbnN0IGNhbnZhczNkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXMzZFwiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuY29uc3QgY2FudmFzVHJhY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1RyYWNlXCIpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xyXG5jb25zdCBmcmFtZXJhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZyYW1lcmF0ZVwiKSBhcyBIVE1MUGFyYWdyYXBoRWxlbWVudDtcclxuY29uc3QgcGxheUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheUJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuY29uc3Qgc3RlcEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RlcEJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuXHJcbmNvbnN0IHNpbXVsYXRpb24gPSBuZXcgU2ltdWxhdGlvbihuZXcgQWdlbnRUcmVlKFtdKSk7XHJcbmNvbnN0IHJlbmRlcmVyMmQgPSBuZXcgUmVuZGVyZXIyRChjYW52YXMyZCk7XHJcbmNvbnN0IHJlbmRlcmVyM2QgPSBuZXcgUmVuZGVyZXIzRChjYW52YXMzZCk7XHJcbmNvbnN0IHJlbmRlcmVyVHJhY2UgPSBuZXcgVHJhY2VSZW5kZXJlcihjYW52YXNUcmFjZSk7XHJcbnZhciByZW5kZXJlcjogSVJlbmRlcmVyID0gcmVuZGVyZXIyZDtcclxuY29uc3QgbG9nZ2VyID0gbmV3IFNpbXBsZUxvZ2dlcigpO1xyXG52YXIgcGxheSA9IGZhbHNlO1xyXG52YXIgcmFuZ2UgPSAyMDA7XHJcblxyXG4vLyBJbml0aWFsaXNlIHNpbXVsYXRpb24gYW5kIGJlZ2luIHVwZGF0ZS9yZW5kZXIgbG9vcFxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcclxuICB0aGlzLnJlY29uZmlndXJlKCk7XHJcblxyXG4gIGxldCBsYXN0UmVuZGVyID0gMDtcclxuICBsZXQgbGFzdEZQUyA9IDA7XHJcbiAgbGV0IGZyYW1lcyA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIGxvb3AodGltZXN0YW1wOiBudW1iZXIpIHtcclxuICAgIGxldCBkZWx0YVQgPSB0aW1lc3RhbXAgLSBsYXN0UmVuZGVyO1xyXG4gICAgbGFzdFJlbmRlciA9IHRpbWVzdGFtcDtcclxuXHJcbiAgICAvLyBVcGRhdGVcclxuICAgIGlmIChwbGF5KSB7XHJcbiAgICAgIHNpbXVsYXRpb24udXBkYXRlKGRlbHRhVCwgcmFuZ2UpO1xyXG4gICAgICBsb2dnZXIubG9nKHNpbXVsYXRpb24uZ2V0QWdlbnRzKCksIHNpbXVsYXRpb24uZ2V0T2JzdGFjbGVzKCksIGRlbHRhVCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHNpbXVsYXRpb24uaXNEb25lKCkpIHtcclxuICAgICAgc3RvcCgpO1xyXG4gICAgICBsb2dnZXIuc3RvcCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJlbmRlclxyXG4gICAgcmVuZGVyZXIucmVuZGVyKHNpbXVsYXRpb24pO1xyXG4gICAgZnJhbWVzKys7XHJcblxyXG4gICAgLy8gUmVjYWxjdWxhdGUgZnJhbWVyYXRlIGV2ZXJ5IDI1MG1zXHJcbiAgICBpZiAodGltZXN0YW1wIC0gbGFzdEZQUyA+PSAyNTApIHtcclxuICAgICAgZnJhbWVyYXRlLnRleHRDb250ZW50ID0gYEZQUzogJHsoXHJcbiAgICAgICAgKDEwMDAgKiBmcmFtZXMpIC9cclxuICAgICAgICAodGltZXN0YW1wIC0gbGFzdEZQUylcclxuICAgICAgKS50b0ZpeGVkKDEpfWA7XHJcblxyXG4gICAgICBmcmFtZXMgPSAwO1xyXG4gICAgICBsYXN0RlBTID0gdGltZXN0YW1wO1xyXG4gICAgfVxyXG5cclxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XHJcbiAgfVxyXG5cclxuICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xyXG59XHJcblxyXG4vLyBTd2l0Y2ggdmlld1xyXG5leHBvcnQgZnVuY3Rpb24gc3dpdGNoVmlldyh2aWV3OiBzdHJpbmcpIHtcclxuICBzd2l0Y2ggKHZpZXcpIHtcclxuICAgIGNhc2UgXCIyRFwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyMmQ7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgIGNhbnZhczNkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzVHJhY2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCIzRFwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyM2Q7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzM2Quc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgY2FudmFzVHJhY2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJUcmFjZVwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyVHJhY2U7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzM2Quc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBjYW52YXNUcmFjZS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICBicmVhaztcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB2aWV3IFxcXCIke3ZpZXd9XFxcImApO1xyXG4gIH1cclxuICByZW5kZXJlci5pbml0KHNpbXVsYXRpb24pO1xyXG59XHJcblxyXG4vLyBUb2dnbGUgcGxheS9wYXVzZVxyXG5leHBvcnQgZnVuY3Rpb24gcGxheVBhdXNlKCkge1xyXG4gIHBsYXkgPSAhcGxheTtcclxuXHJcbiAgaWYgKHBsYXkpIHtcclxuICAgIGxvZ2dlci5zdGFydCgpO1xyXG4gICAgbG9nZ2VyLmxvZyhzaW11bGF0aW9uLmdldEFnZW50cygpLCBzaW11bGF0aW9uLmdldE9ic3RhY2xlcygpLCAwKTsgLy8gbG9nIGluaXRpYWwgY29uZGl0aW9uc1xyXG4gICAgcGxheUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiUGF1c2VcIjtcclxuICAgIHN0ZXBCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBsb2dnZXIuc3RvcCgpO1xyXG4gICAgcGxheUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiUGxheVwiO1xyXG4gICAgc3RlcEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuLy8gU3RlcCBzaW11bGF0aW9uIGJ5IDEgZnJhbWVcclxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXAoKSB7XHJcbiAgY29uc3QgZGVsdGFUID0gMTAwMCAvIDYwOyAvLyBhc3N1bWVzIDYwRlBTXHJcbiAgc2ltdWxhdGlvbi51cGRhdGUoZGVsdGFULCByYW5nZSk7XHJcblxyXG4gIGlmIChzaW11bGF0aW9uLmlzRG9uZSgpKSB7XHJcbiAgICBzdG9wKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVjb25maWd1cmUoKSB7XHJcbiAgcGxheSA9IGZhbHNlO1xyXG4gIHBsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlBsYXlcIjtcclxuICBwbGF5QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgc3RlcEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuICBjb25zdCBjb25maWcgPSBjb25maWdTZWxlY3QudmFsdWU7XHJcbiAgY29uc3QgYWdlbnRUeXBlID0gYWdlbnRUeXBlU2VsZWN0LnZhbHVlO1xyXG4gIHJhbmdlID0gcGFyc2VJbnQocmFuZ2VJbnB1dC52YWx1ZSkgPz8gMDtcclxuICBjb25zdCBudW1iZXJPZkFnZW50cyA9IHBhcnNlSW50KG51bWJlck9mQWdlbnRzSW5wdXQudmFsdWUpID8/IDA7XHJcblxyXG4gIHNpbXVsYXRpb24uaW5pdChcclxuICAgIENvbmZpZ3VyYXRpb25GYWN0b3J5LmdldENvbmZpZ3VyYXRpb24oXHJcbiAgICAgIGNvbmZpZyxcclxuICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICBjYW52YXMyZC53aWR0aCxcclxuICAgICAgY2FudmFzMmQuaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50c1xyXG4gICAgKVxyXG4gICk7XHJcblxyXG4gIHJlbmRlcmVyLmluaXQoc2ltdWxhdGlvbik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN0b3AoKSB7XHJcbiAgcGxheSA9IGZhbHNlO1xyXG4gIHBsYXlCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gIHN0ZXBCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG59XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gbW9kdWxlIGV4cG9ydHMgbXVzdCBiZSByZXR1cm5lZCBmcm9tIHJ1bnRpbWUgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xucmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oNzQwKTtcbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==