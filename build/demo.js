var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={317:(t,e,n)=>{n.r(e),n.d(e,{init:()=>Q,playPause:()=>J,reconfigure:()=>tt,step:()=>$,switchView:()=>Z});var i,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var n=this;this._agents.forEach((function(i){i.update(t,n._agents.getNeighboursInRangeEuclidean(i,e),n._obstacles)})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t}(),r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.toString=function(){return"("+this.x+", "+this.y+")"},t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var n=Math.sqrt(Math.random())*e,i=2*Math.PI*Math.random();return new t(this.x+n*Math.cos(i),this.y+n*Math.sin(i))},t.prototype.isLeftOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)>0},t.prototype.isRightOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)<0},t}(),s=function(){function t(t,e,n){this.vertex=t,this.tangent1=e,this.tangent2=n}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),n=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&n<0},t}(),a=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){var e=new r(0,0),n=this.Position.subtract(t.getPosition()),i=this.Radius+t.Radius,o=e.subtract(n),a=o.magnitude();if(a<i)return null;var c=Math.acos(i/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(n.x+i*Math.cos(h),n.y+i*Math.sin(h)),g=u-c,d=new r(n.x+i*Math.cos(g),n.y+i*Math.sin(g));return new s(e,l,d)},t}(),c=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){var e=this.pointVelocityObstacle(t,this.Start),n=this.pointVelocityObstacle(t,this.End);if(null==e&&null==n)return null;if(null==e)return n;if(null==n)return e;var i=e.tangent1;e.tangent2.isLeftOf(i)&&(i=e.tangent2),n.tangent1.isLeftOf(i)&&(i=n.tangent1),n.tangent2.isLeftOf(i)&&(i=n.tangent2);var o=e.tangent1;return e.tangent2.isRightOf(o)&&(o=e.tangent2),n.tangent1.isRightOf(o)&&(o=n.tangent1),n.tangent2.isRightOf(o)&&(o=n.tangent2),new s(new r(0,0),i,o)},t.prototype.pointVelocityObstacle=function(t,e){var n=new r(0,0),i=e.subtract(t.getPosition()),o=t.Radius,a=n.subtract(i),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),h=Math.atan2(a.y,a.x),l=h+u,g=new r(i.x+o*Math.cos(l),i.y+o*Math.sin(l)),d=h-u,f=new r(i.x+o*Math.cos(d),i.y+o*Math.sin(d));return new s(n,g,f)},t}(),u=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.init=function(t){},t.prototype.render=function(t){var e=this,n=800/this.cameraDist,i=t.getAgents(),o=t.getObstacles();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(n,0,0,n,this.xPan,this.yPan),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(-1e3,-500,2e3,1e3),this.context.strokeStyle="white",this.context.lineWidth=2,o.forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)})),i.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),n=t.getDirection(),i=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=n.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(n.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),h=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([1,0,0,0,0,n,e,0,0,-e,n,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([n,0,-e,0,0,1,0,0,e,0,n,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([n,e,0,0,-e,n,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,n){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,n,1])},t.getPerspectiveProjectionMatrix=function(t,e,n,i){var o=1/Math.tan(t/2),r=1/(n-i);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(n+i)*r,-1,0,0,n*i*r*2,0])},t.multiplyMatrices=function(t,e){for(var n=new Float32Array(16),i=0;i<4;i++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*i+s]*e[4*s+o];n[4*i+o]=r}return n},t}(),l=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),g=function(){function t(){}return t.getVertices=function(t,e){var n=t/2,i=e/2;return[n,-i,0,0,0,1,n,i,0,0,0,1,-n,-i,0,0,0,1,-n,i,0,0,0,1]},t.indices=[1,2,0,1,3,2],t}(),d=function(){function t(){}return t.vertices=[-.92388,-.382683,1,-.9239,-.3827,0,-.92388,-.382683,0,-.9239,-.3827,0,-.707107,-.707107,1,-.7071,-.7071,0,-.707107,-.707107,0,-.7071,-.7071,0,-.382684,-.923879,1,-0,0,1,-.382684,-.923879,0,-.3827,-.9239,0,-0,-1,1,-0,0,1,-0,-1,0,0,-1,0,.382684,-.92388,1,-0,0,1,.382684,-.92388,0,.3827,-.9239,0,.707107,-.707107,1,-0,0,1,.707107,-.707107,0,.7071,-.7071,0,.92388,-.382683,1,-0,0,1,.92388,-.382683,0,.9239,-.3827,0,1,0,1,-0,0,1,1,0,0,1,0,0,.92388,.382683,1,-0,0,1,.92388,.382683,0,.9239,.3827,0,.707107,.707107,1,-0,0,1,.707107,.707107,0,.7071,.7071,0,.382684,.92388,1,-0,0,1,.382684,.92388,0,.3827,.9239,0,0,1,1,-0,0,1,0,1,0,0,1,0,-.382683,.92388,1,-0,0,1,-.382683,.92388,0,-.3827,.9239,0,-.707107,.707107,1,-0,0,1,-.707107,.707107,0,-.7071,.7071,0,-.92388,.382683,1,-0,0,1,-.92388,.382683,0,-.9239,.3827,0,-1,0,1,-0,0,1,-1,0,0,-1,0,0,.707107,.707107,1,.7071,.7071,0,.382684,.92388,1,.3827,.9239,0,-.92388,-.382683,1,-0,0,1,-.707107,-.707107,1,-0,0,1,0,1,1,0,1,0,-.382684,-.923879,1,-.3827,-.9239,0,-0,-1,1,0,-1,0,-.382683,.92388,1,-.3827,.9239,0,-.707107,.707107,1,-.7071,.7071,0,.707107,-.707107,1,.7071,-.7071,0,.92388,-.382683,1,.9239,-.3827,0,-.92388,.382683,1,-.9239,.3827,0,-1,0,1,-1,0,0,.92388,.382683,1,.9239,.3827,0,.382684,-.92388,1,.3827,-.9239,0,1,0,1,1,0,0],t.indices=[26,35,10,18,20,22,22,24,18,24,26,18,26,28,30,30,34,35,35,4,6,6,8,10,10,12,18,12,14,18,14,16,18,26,30,35,35,6,10,18,26,10,39,23,25,40,25,27,43,27,29,44,29,31,36,21,23,33,19,21,32,17,19,45,15,17,47,13,15,42,11,13,41,9,11,46,7,9,38,5,7,37,3,5,2,1,3,0,31,1,39,36,23,40,39,25,43,40,27,44,43,29,36,33,21,33,32,19,32,45,17,45,47,15,47,42,13,42,41,11,41,46,9,46,38,7,38,37,5,37,2,3,2,0,1,0,44,31],t}(),f=function(){function t(){}return t.getVertices=function(t){var e=t.Start.subtract(t.End),n=new r(-e.y,e.x).normalise();return[t.Start.x,t.Start.y,0,n.x,n.y,0,t.End.x,t.End.y,0,n.x,n.y,0,t.Start.x,t.Start.y,1,n.x,n.y,0,t.End.x,t.End.y,1,n.x,n.y,0,t.Start.x,t.Start.y,0,-n.x,-n.y,0,t.End.x,t.End.y,0,-n.x,-n.y,0,t.Start.x,t.Start.y,1,-n.x,-n.y,0,t.End.x,t.End.y,1,-n.x,-n.y,0]},t.indices=[1,2,0,1,3,2,5,4,6,5,6,7],t}(),p=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var n=h.getZRotationMatrix(e.xRot),i=h.getXRotationMatrix(e.yRot),o=h.multiplyMatrices(n,i);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var n=h.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,n);var i=h.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,i),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var n=this.gl.createShader(this.gl.VERTEX_SHADER),i=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(n,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform float height;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * height,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(i,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,n),this.gl.attachShader(this.program,i),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.clearColor(.53,.76,.98,1),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1}),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.heightLoc=this.gl.getUniformLocation(this.program,"height"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var o=h.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),r=h.getTranslationMatrix(0,0,-this.cameraDist),s=h.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,o),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,r),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,s)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(i));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(n))}else console.error("WebGL not supported")}return t.prototype.init=function(t){var e=g.getVertices(2e3,1e3),n=t.getObstacles().filter((function(t){return t instanceof c})).map((function(t){return t})),i=n.map((function(t){return f.getVertices(t)})).reduce((function(t,e){return t.concat(e)}),[]),o=new Float32Array(l.vertices.concat(d.vertices).concat(e).concat(i));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=l.vertices.length/6,s=r+d.vertices.length/6,a=s+e.length/6,u=n.map((function(t,e){return f.indices.map((function(t){return t+a+8*e}))})).reduce((function(t,e){return t.concat(e)}),[]),h=new Uint16Array(l.indices.concat(d.indices.map((function(t){return t+r}))).concat(g.indices.map((function(t){return t+s}))).concat(u));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute)},t.prototype.render=function(t){var e=this,n=t.getAgents(),i=t.getObstacles();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),n.forEach((function(t){var n=t.getPosition();e.gl.uniform2f(e.posVecLoc,n.x,n.y);var i=t.getDirection().normalise();0==i.x&&0==i.y&&(i=new r(1,0)),e.gl.uniform2f(e.dirVecLoc,i.x,i.y),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,l.indices.length,e.gl.UNSIGNED_SHORT,0)}));var o=0;i.forEach((function(t){t instanceof a?(e.gl.uniform2f(e.posVecLoc,t.Position.x,t.Position.y),e.gl.uniform2f(e.dirVecLoc,1,0),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,84),e.gl.uniform3f(e.baseColourLoc,1,1,1),e.gl.drawElements(e.gl.TRIANGLES,d.indices.length,e.gl.UNSIGNED_SHORT,l.indices.length*Uint16Array.BYTES_PER_ELEMENT)):o++})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,g.indices.length,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length)*Uint16Array.BYTES_PER_ELEMENT),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,84),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,f.indices.length*o,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length+g.indices.length)*Uint16Array.BYTES_PER_ELEMENT)},t}(),y=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var n=t.getPosition().x-e,i=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,n,i,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(n){return t.getPosition().subtract(n.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var n=Math.floor(t.length/2),i=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(i.slice(0,n),!e),r=this.constructTree(i.slice(n+1,t.length),!e);return{agent:t[n],left:o,right:r}},t.prototype.rangeSearch=function(t,e,n,i,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=i&&(s=s.concat(this.rangeSearch(t.right,e,n,i,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,n,i,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,n,i,o,!r))),t.agent.getPosition().y>=n&&(s=s.concat(this.rangeSearch(t.left,e,n,i,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=n&&t.agent.getPosition().x<=i&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),m=function(){function t(t,e,n){this.Id=t,this.Radius=20,this._position=e,this._direction=n(e),this._getPreferredVelocity=n,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),v=function(){function t(){}return t.FromHsv=function(t,e,n){var i=(t*=6)-Math.floor(t),o=n*(1-e),r=n*(1-e*i),s=n*(1-e*(1-i));return 0<=t&&t<1?{r:255*n,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*n,b:255*o}:2<=t&&t<3?{r:255*o,g:255*n,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*n}:4<=t&&t<5?{r:255*s,g:255*o,b:255*n}:5<=t&&t<6?{r:255*n,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),x=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.getColour=function(){return this._isDone?v.White:v.Green},e.prototype.update=function(t){if(!this._isDone){var e=this._getPreferredVelocity(this._position),n=60*t/3e3;e.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=e,this._position=this._position.add(e.multiply(n)))}},e}(m),b=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),_=function(t){function e(e,n,i){var o=t.call(this,e,n,i)||this;return o._isStuck=!1,o}return b(e,t),e.prototype.getColour=function(){return this._isDone?v.White:this._isStuck?v.Red:v.Green},e.prototype.update=function(t,e,n){if(!this._isDone){var i=this._getPreferredVelocity(this._position),o=60*t/3e3;if(i.magnitudeSqrd()<.1)this._isDone=!0;else{this._direction=i.normalise();var r=this._position.add(this._direction.multiply(25));this._isStuck=!1;for(var s=0;s<e.length;s++)if(this.collidesAgent(e[s],r))return void(this._isStuck=!0);for(s=0;s<n.length;s++)if(this.collidesObstacle(n[s],r))return void(this._isStuck=!0);this._direction=i,this._position=this._position.add(this._direction.multiply(o))}}},e.prototype.collidesAgent=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e.prototype.collidesObstacle=function(t,e){return t instanceof a&&t.Position.subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e}(m),P=function(){function t(){}return t.getClosestPointOnLine=function(t,e,n){var i=e.normalise(),o=n.subtract(t).dot(i);return t.add(i.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,n,i){var o=n.subtract(t),r=i.dot(i),s=2*i.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;return c<0?1/0:(-s-Math.sqrt(c))/2*r},t.getLineLineIntersection=function(t,e,n,i){var o=(t.x-e.x)*(n.y-i.y)-(t.y-e.y)*(n.x-i.x),s=((e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x))/o;return new r(n.x+s*(i.x-n.x),n.y+s*(i.y-n.y))},t}(),M=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),E=function(t){function e(e,n,i){var o=t.call(this,e,n,i)||this;return o._colour=v.Green,o}return M(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e,n){if(!this._isDone){var i=this._getPreferredVelocity(this._position),o=60*t/4e3;if(i.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new r(0,0),void(this._colour=v.White);for(var s,u,h=!0,l=0;l<e.length;l++)if(null!=(M=this.getAgentVelocityObstacle(e[l]))&&M.contains(i)){h=!1,s=M,u=l;break}for(l=0;l<n.length;l++)if(null!=(M=n[l].getVelocityObstacle(this))&&M.contains(i)){h=!1,s=M,u=-1;break}if(h)return this._direction=i,this._position=this._position.add(this._direction.multiply(o)),void(this._colour=v.Green);if(null!=s){var g=P.getClosestPointOnLine(s.vertex,s.tangent1,i),d=P.getClosestPointOnLine(s.vertex,s.tangent2,i),f=!0,p=!0;for(l=0;l<e.length;l++)l!=u&&(null!=(M=this.getAgentVelocityObstacle(e[l]))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1));for(l=0;l<n.length;l++)null!=(M=n[l].getVelocityObstacle(this))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1);if(f&&p?g.subtract(i).magnitudeSqrd()<d.subtract(i).magnitudeSqrd()?this._direction=g:this._direction=d:f?this._direction=g:p&&(this._direction=d),f||p)return this._position=this._position.add(this._direction.multiply(o)),void this.setColour(i)}var y=1/0,m=new r(0,0);for(l=0;l<100;l++){for(var x=new r(0,0).sample(1),w=1/0,b=0;b<e.length;b++){var _=e[b];(null==(M=this.getAgentVelocityObstacle(_))||M.contains(x))&&(E=P.getFirstRayCircleIntersection(_.getPosition().add(_.getDirection()),this.Radius+_.Radius,this._position,x.subtract(_.getDirection())))<w&&(w=E)}for(b=0;b<n.length;b++){var M;if((_=n[b])instanceof a)(null==(M=_.getVelocityObstacle(this))||M.contains(x))&&(E=P.getFirstRayCircleIntersection(_.Position,this.Radius+_.Radius,this._position,x))<w&&(w=E);else if(_ instanceof c){var E;(E=(P.getLineLineIntersection(_.Start,_.End,this._position,this._position.add(x.normalise().multiply(this.Radius))).subtract(this._position).magnitude()-this.Radius)/x.magnitude())<w&&(w=E)}}w<10&&(w=0);var R=200/w+i.subtract(x).magnitude();R<y&&(y=R,m=x)}this._direction=m,this._position=this._position.add(this._direction.multiply(o)),this.setColour(i)}},e.prototype.getAgentVelocityObstacle=function(t){var e=t.getDirection(),n=t.getPosition().subtract(this._position).add(e),i=t.Radius+this.Radius,o=e.subtract(n),a=o.magnitude();if(a<i)return null;var c=Math.acos(i/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(n.x+i*Math.cos(h),n.y+i*Math.sin(h)),g=u-c,d=new r(n.x+i*Math.cos(g),n.y+i*Math.sin(g));return new s(e,l,d)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),n=e>1?0:(1-e)/3;this._colour=v.FromHsv(n,1,1)},e}(m),R=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),S=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return R(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),n=t.getDirection(),i=e.add(n).divide(2),o=t.getPosition().subtract(this._position).add(n),a=t.Radius+this.Radius,c=n.subtract(o),u=c.magnitude();if(u<a)return null;var h=Math.acos(a/u),l=Math.atan2(c.y,c.x),g=l+h,d=new r(o.x+a*Math.cos(g),o.y+a*Math.sin(g)),f=l-h,p=new r(o.x+a*Math.cos(f),o.y+a*Math.sin(f));return new s(i,d,p)},e}(E),L=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return L(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),n=t.getDirection(),i=n,o=e.add(n).divide(2),a=t.getPosition().subtract(this._position),c=a.add(n),u=t.Radius+this.Radius,h=n.subtract(c),l=h.magnitude();if(l<u)return null;var g,d=Math.acos(u/l),f=Math.atan2(h.y,h.x),p=f+d,y=new r(c.x+u*Math.cos(p),c.y+u*Math.sin(p)),m=f-d,v=new r(c.x+u*Math.cos(m),c.y+u*Math.sin(m));return g=(a.x-n.x)*(e.y-n.y)-(a.y-n.y)*(e.x-n.x)>0?P.getLineLineIntersection(i,i.add(y),o,o.add(v)):P.getLineLineIntersection(i,i.add(v),o,o.add(y)),new s(g,y,v)},e}(E),T=function(){function t(){}return t.getAgent=function(t,e,n,i){switch(t){case"BasicAgent":return new w(e,n,i);case"StopAgent":return new _(e,n,i);case"VOAgent":return new E(e,n,i);case"RVOAgent":return new S(e,n,i);case"HRVOAgent":return new A(e,n,i);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),O=function(){function t(){}return t.getConfiguration=function(t,e,n,i,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,n,i,o);case"RandomToLine":return this.RandomToLine(e,n,i,o);case"CircleToCircle":return this.CircleToCircle(e,n,i,o);case"GridToGrid":return this.GridToGrid(e,n,i,o);case"Bollards":return this.Bollards(e,n,i,o);case"Bottleneck":return this.Bottleneck(e,n,i,o);case"BottleneckWithNav":return this.BottleneckWithNav(e,n,i,o);case"Slalom":return this.Slalom(e,n,i,o);case"SlalomWithNav":return this.SlalomWithNav(e,n,i,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))})),a=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))}));i=Math.min(s.length,a.length);for(var c=0;c<i;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))}));i=s.length;for(var a=0;a<i;a++){var c=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(new r(((a+1)/(i+1)-.5)*e,0)));o.push(c)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,n,i){for(var o=[],s=n/2-25,a=0;a<i;a++){var c=2*Math.PI*a/i,u=T.getAgent(t,a,new r(s*Math.cos(c),s*Math.sin(c)),this.preferredVelocityFromGoalPosition(new r(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI))));o.push(u)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,n,i){for(var o=[],s=Math.ceil(Math.sqrt(i/2)),a=90,c=30-e/2,u=(s-1)/2*a,h=0;h<i;h++){var l=Math.floor(h/2),g=Math.floor(l/s),d=l%s;if(h%2==0){var f=T.getAgent(t,h,new r(c+(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(-c-d*a,u-g*a)));o.push(f)}else f=T.getAgent(t,h,new r(-c-(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(c+d*a,u-g*a))),o.push(f)}return{agents:o,obstacles:[]}},t.Bollards=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var c=0;c<i;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(s[c].add(new r(e/2+200,0))));o.push(u)}var h=[];for(c=0;c<5;c++)h.push(new a(new r(0,120*c-240),20));return{agents:o,obstacles:h}},t.Bottleneck=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var a=0;a<i;a++){var u=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(s[a].add(new r(e/2+200,0))));o.push(u)}var h=[];return h.push(new c(new r(0,-500),new r(0,-100))),h.push(new c(new r(0,500),new r(0,100))),{agents:o,obstacles:h}},t.BottleneckWithNav=function(t,e,n,i){var o=this,s=[],a=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=a.length;for(var u=function(n){var i=T.getAgent(t,n,a[n],(function(t){return t.x<0?t.magnitudeSqrd()>Math.pow(90,2)?o.preferredVelocityFromGoalPosition(new r(0,0))(t):new r(1,0):o.preferredVelocityFromGoalPosition(a[n].add(new r(e/2+200,0)))(t)}));s.push(i)},h=0;h<i;h++)u(h);var l=[];return l.push(new c(new r(0,-500),new r(0,-100))),l.push(new c(new r(0,500),new r(0,100))),{agents:s,obstacles:l}},t.Slalom=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-250,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var a=n/2-200,u=0;u<i;u++){var h=T.getAgent(t,u,s[u],this.preferredVelocityFromGoalPosition(s[u].add(new r(e/2+250,0))));o.push(h)}var l=[];return l.push(new c(new r(-200,500),new r(-200,-a))),l.push(new c(new r(0,-500),new r(0,a))),l.push(new c(new r(200,500),new r(200,-a))),{agents:o,obstacles:l}},t.SlalomWithNav=function(t,e,n,i){var o=this,s=[],a=this.poissonDiskSample(e/2-250,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=a.length;for(var u=n/2-200,h=u+100,l=function(n){var i=T.getAgent(t,n,a[n],(function(t){return t.x<=-200?t.subtract(new r(-200,-h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(-200,-h))(t):t.x<=0?t.subtract(new r(0,h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(0,h))(t):t.x<=200?t.subtract(new r(200,-h)).magnitudeSqrd()<Math.pow(180,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(200,-h))(t):o.preferredVelocityFromGoalPosition(new r(a[n].x+e/2+250,-a[n].y))(t)}));s.push(i)},g=0;g<i;g++)l(g);var d=[];return d.push(new c(new r(-200,500),new r(-200,-u))),d.push(new c(new r(0,-500),new r(0,u))),d.push(new c(new r(200,500),new r(200,-u))),{agents:s,obstacles:d}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var n=t.subtract(e);return n.magnitudeSqrd()<1?n:n.normalise()}},t.poissonDiskSample=function(t,e,n,i){for(var o=[],s=function(){for(var n,s=!0,a=0;s;)if(a++,s=!1,n=new r(t*Math.random(),e*Math.random()),o.forEach((function(t){n.subtract(t).magnitudeSqrd()<Math.pow(i,2)&&(s=!0)})),a>1e3)return console.warn("Failed to find poisson disk sample"),{value:o};o.push(n)},a=0;a<n;a++){var c=s();if("object"==typeof c)return c.value}return o},t}(),I=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d")}return t.prototype.init=function(t){var e=this;this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height),this.context.strokeStyle="white",this.context.lineWidth=2,t.getObstacles().forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)}))},t.prototype.render=function(t){var e=this;t.getAgents().forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),n=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.fillRect(e.x,-e.y,1,1)},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),D=document.getElementById("config"),C=document.getElementById("agentType"),V=document.getElementById("range"),F=document.getElementById("numberOfAgents"),B=document.getElementById("canvas2d"),k=document.getElementById("canvas3d"),N=document.getElementById("canvasTrace"),G=document.getElementById("framerate"),U=document.getElementById("playButton"),j=document.getElementById("stepButton"),Y=new o(new y([])),q=new u(B),W=new p(k),X=new I(N),H=q,z=!1,K=200;function Q(){this.reconfigure();var t=0,e=0,n=0;window.requestAnimationFrame((function i(o){var r=o-t;t=o,z&&Y.update(r,K),H.render(Y),n++,o-e>=250&&(G.textContent="FPS: "+(1e3*n/(o-e)).toFixed(1),n=0,e=o),window.requestAnimationFrame(i)}))}function Z(t){switch(t){case"2D":document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),H=q,B.style.display="block",k.style.display="none",N.style.display="none";break;case"3D":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),H=W,B.style.display="none",k.style.display="block",N.style.display="none";break;case"Trace":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),H=X,B.style.display="none",k.style.display="none",N.style.display="block";break;default:throw new Error('Unknown view "'+t+'"')}H.init(Y)}function J(){(z=!z)?(U.textContent="Pause",j.disabled=!0):(U.textContent="Play",j.disabled=!1)}function $(){Y.update(1e3/60,K)}function tt(){var t,e;z&&this.playPause();var n=D.value,i=C.value;K=null!==(t=parseInt(V.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(F.value))&&void 0!==e?e:0;Y.init(O.getConfiguration(n,i,B.width,B.height,o)),H.init(Y)}}},e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={exports:{}};return t[i](o,o.exports,n),o.exports}return n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n(317)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,