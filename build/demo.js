var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={319:(t,e,i)=>{i.r(e),i.d(e,{init:()=>G,playPause:()=>k,reconfigure:()=>X,step:()=>q,switchView:()=>Y});var n,r=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._agents.init(t)},t.prototype.update=function(t){var e=this;this._agents.forEach((function(i){i.update(t,e._agents.getNeighboursInRangeEuclidean(i,400))})),this._agents.init(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t}(),o=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0),t.preventDefault(),console.log("Scroll")},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,!1)}return t.prototype.render=function(t){var e=this,i=800/this.cameraDist,n=t.getAgents();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(1,0,0,1,0,0),this.context.translate(this.xPan,this.yPan),this.context.scale(i,i),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.context.canvas.width,.55*-this.context.canvas.height,1.1*this.context.canvas.width,1.1*this.context.canvas.height),n.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getDirection(),n=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.lineWidth=2,this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var r=i.magnitude();if(0!==r){this.context.moveTo(e.x,-e.y);var o=e.add(i.divide(r).multiply(t.Radius));this.context.lineTo(o.x,-o.y)}this.context.stroke()},t}(),s=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var i=Math.sqrt(Math.random())*e,n=2*Math.PI*Math.random();return new t(this.x+i*Math.cos(n),this.y+i*Math.sin(n))},t}(),a=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,i){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1])},t.getPerspectiveProjectionMatrix=function(t,e,i,n){var r=1/Math.tan(t/2),o=1/(i-n);return new Float32Array([r/e,0,0,0,0,r,0,0,0,0,(i+n)*o,-1,0,0,i*n*o*2,0])},t.multiplyMatrices=function(t,e){for(var i=new Float32Array(16),n=0;n<4;n++)for(var r=0;r<4;r++){for(var o=0,s=0;s<4;s++)o+=t[4*n+s]*e[4*s+r];i[4*n+r]=o}return i},t.transpose=function(t){for(var e=new Float32Array(16),i=0;i<4;i++)for(var n=0;n<4;n++)e[4*i+n]=t[4*n+i];return e},t.invert=function(t){var e=t[0],i=t[1],n=t[2],r=t[3],o=t[4],s=t[5],a=t[6],c=t[7],u=t[8],h=t[9],l=t[10],g=t[11],d=t[12],f=t[13],p=t[14],m=t[15],v=e*s-i*o,y=e*a-n*o,_=e*c-r*o,x=i*a-n*s,w=i*c-r*s,M=n*c-r*a,P=u*f-h*d,b=u*p-l*d,R=u*m-g*d,E=h*p-l*f,A=h*m-g*f,L=l*m-g*p,S=v*L-y*A+_*E+x*R-w*b+M*P;if(!S)return null;var D=new Float32Array(16),T=1/S;return D[0]=(s*L-a*A+c*E)*T,D[1]=(n*A-i*L-r*E)*T,D[2]=(f*M-p*w+m*x)*T,D[3]=(l*w-h*M-g*x)*T,D[4]=(a*R-o*L-c*b)*T,D[5]=(e*L-n*R+r*b)*T,D[6]=(p*_-d*M-m*y)*T,D[7]=(u*M-l*_+g*y)*T,D[8]=(o*A-s*R+c*P)*T,D[9]=(i*R-e*A-r*P)*T,D[10]=(d*w-f*_+m*v)*T,D[11]=(h*_-u*w-g*v)*T,D[12]=(s*b-o*E-a*P)*T,D[13]=(e*E-i*b+n*P)*T,D[14]=(f*y-d*x-p*v)*T,D[15]=(u*x-h*y+l*v)*T,D},t}(),c=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),u=function(){function t(){}return t.getVertices=function(t,e){var i=t/2,n=e/2;return[i,-n,0,0,0,1,i,n,0,0,0,1,-i,-n,0,0,0,1,-i,n,0,0,0,1]},t.getIndices=function(t){return void 0===t&&(t=0),[1,2,0,1,3,2].map((function(e){return e+t}))},t}(),h=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var i=a.getZRotationMatrix(e.xRot),n=a.getXRotationMatrix(e.yRot),r=a.multiplyMatrices(i,n);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,r),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var i=a.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,i);var n=a.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var i=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(i,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * radius,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,i),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.gl.clearColor(.53,.76,.98,1),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,!1);var r=new Float32Array(c.vertices.concat(u.getVertices(1.1*t.width,1.1*t.height)));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,r,this.gl.STATIC_DRAW);var o=new Uint16Array(c.indices.concat(u.getIndices(c.vertices.length/6)));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,o,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var s=a.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),h=a.getTranslationMatrix(0,0,-this.cameraDist),l=a.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,s),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,h),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,l)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(i))}else console.error("WebGL not supported")}return t.prototype.render=function(t){var e=this,i=t.getAgents();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),i.forEach((function(t){var i=t.getPosition();e.gl.uniform2f(e.posVecLoc,i.x,i.y);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new s(1,0)),e.gl.uniform2f(e.dirVecLoc,n.x,n.y),e.gl.uniform1f(e.radiusLoc,t.Radius);var r=t.getColour();e.gl.uniform3f(e.baseColourLoc,r.r/255,r.g/255,r.b/255),e.gl.drawElements(e.gl.TRIANGLES,c.indices.length,e.gl.UNSIGNED_SHORT,0)})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,6,this.gl.UNSIGNED_SHORT,c.indices.length*Uint16Array.BYTES_PER_ELEMENT)},t}(),l=function(){function t(){}return t.prototype.init=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var i=t.getPosition().x-e,n=t.getPosition().y-e,r=t.getPosition().x+e,o=t.getPosition().y+e;return this.rangeSearch(this._root,i,n,r,o,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(i){return t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var i=Math.floor(t.length/2),n=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),r=this.constructTree(n.slice(0,i),!e),o=this.constructTree(n.slice(i+1,t.length),!e);return{agent:t[i],left:r,right:o}},t.prototype.rangeSearch=function(t,e,i,n,r,o){if(null==t)return[];var s=[];return o?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,e,i,n,r,!o))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,i,n,r,!o)))):(t.agent.getPosition().y<=r&&(s=s.concat(this.rangeSearch(t.right,e,i,n,r,!o))),t.agent.getPosition().y>=i&&(s=s.concat(this.rangeSearch(t.left,e,i,n,r,!o)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=i&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=r&&s.push(t.agent),s},t}(),g=function(){function t(t,e,i){this.Id=t,this.Radius=20,this._position=e,this._direction=new s(0,0),this._getPreferredVelocity=i,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),d=function(){function t(){}return t.FromHsv=function(t,e,i){var n=(t*=6)-Math.floor(t),r=i*(1-e),o=i*(1-e*n),s=i*(1-e*(1-n));return 0<=t&&t<1?{r:255*i,g:255*s,b:255*r}:1<=t&&t<2?{r:255*o,g:255*i,b:255*r}:2<=t&&t<3?{r:255*r,g:255*i,b:255*s}:3<=t&&t<4?{r:255*r,g:255*o,b:255*i}:4<=t&&t<5?{r:255*s,g:255*r,b:255*i}:5<=t&&t<6?{r:255*i,g:255*r,b:255*o}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),f=(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.getColour=function(){return this._isDone?d.White:d.Green},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/3e3;i.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=i,this._position=this._position.add(i.multiply(n)))}},e}(g),m=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),v=function(t){function e(e,i,n){var r=t.call(this,e,i,n)||this;return r._isStuck=!1,r}return m(e,t),e.prototype.getColour=function(){return this._isDone?d.White:this._isStuck?d.Red:d.Green},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/3e3;if(i.magnitudeSqrd()<.1)this._isDone=!0;else{this._direction=i.normalise();var r=this._position.add(this._direction.multiply(25));this._isStuck=!1;for(var o=0;o<e.length;o++)if(this.collides(e[o],r))return void(this._isStuck=!0);this._direction=i,this._position=this._position.add(this._direction.multiply(n))}}},e.prototype.collides=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e}(g),y=function(){function t(){}return t.getClosestPointOnLine=function(t,e,i){var n=e.normalise(),r=i.subtract(t).dot(n);return t.add(n.multiply(r))},t.getFirstRayCircleIntersection=function(t,e,i,n){var r=i.subtract(t),o=n.dot(n),s=2*n.dot(r),a=r.dot(r)-Math.pow(e,2),c=Math.pow(s,2)-4*o*a;if(c<0)return 1/0;var u=(-s-Math.sqrt(c))/2*o;return u<0?1/0:u},t.getLineLineIntersection=function(t,e,i,n){var r=i.subtract(t),o=n.x*e.y-n.y*e.x,s=(r.y*n.x-r.y*n.y)/o;return t.add(e.multiply(s))},t}(),_=function(){function t(t,e,i){this.vertex=t,this.tangent1=e,this.tangent2=i}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),i=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&i<0},t}(),x=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),w=function(t){function e(e,i,n){var r=t.call(this,e,i,n)||this;return r._colour=d.Green,r}return x(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/4e3;if(i.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new s(0,0),void(this._colour=d.White);for(var r,o,a=!0,c=0;c<e.length;c++)if(null!=(x=this.getVelocityObstacle(e[c]))&&x.contains(i)){a=!1,r=x,o=c;break}if(a)return this._direction=i,this._position=this._position.add(this._direction.multiply(n)),void(this._colour=d.Green);if(null!=r){var u=y.getClosestPointOnLine(r.vertex,r.tangent1,i),h=y.getClosestPointOnLine(r.vertex,r.tangent2,i),l=!0,g=!0;for(c=0;c<e.length;c++)c!=o&&(null!=(x=this.getVelocityObstacle(e[c]))&&x.contains(u)&&(l=!1),null!=x&&x.contains(u)&&(g=!1));if(l&&g?u.subtract(i).magnitudeSqrd()<h.subtract(i).magnitudeSqrd()?this._direction=u:this._direction=h:l?this._direction=u:g&&(this._direction=h),l||g)return this._position=this._position.add(this._direction.multiply(n)),void this.setColour(i)}var f=1/0,p=new s(0,0);for(c=0;c<100;c++){for(var m=new s(0,0).sample(1),v=1/0,_=0;_<e.length;_++){var x,w=e[_];if(null==(x=this.getVelocityObstacle(w))||x.contains(m)){var M=y.getFirstRayCircleIntersection(w.getPosition().add(w.getDirection()),this.Radius+w.Radius,this._position,m.subtract(w.getDirection()));M<v&&(v=M)}}var P=100/v+i.subtract(m).magnitude();P<f&&(f=P,p=m)}this._direction=p,this._position=this._position.add(this._direction.multiply(n)),this.setColour(i)}},e.prototype.getVelocityObstacle=function(t){var e=t.getDirection(),i=t.getPosition().subtract(this._position).add(e),n=t.Radius+this.Radius,r=e.subtract(i),o=r.magnitude();if(o<n)return null;var a=Math.acos(n/o),c=Math.atan2(r.y,r.x),u=c+a,h=new s(i.x+n*Math.cos(u),i.y+n*Math.sin(u)),l=c-a,g=new s(i.x+n*Math.cos(l),i.y+n*Math.sin(l));return new _(e,h,g)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),i=e>1?0:(1-e)/3;this._colour=d.FromHsv(i,1,1)},e}(g),M=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),P=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return M(e,t),e.prototype.getVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=e.add(i).divide(2),r=t.getPosition().subtract(this._position).add(i),o=t.Radius+this.Radius,a=i.subtract(r),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),h=Math.atan2(a.y,a.x),l=h+u,g=new s(r.x+o*Math.cos(l),r.y+o*Math.sin(l)),d=h-u,f=new s(r.x+o*Math.cos(d),r.y+o*Math.sin(d));return new _(n,g,f)},e}(w),b=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return b(e,t),e.prototype.getVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=i,r=e.add(i).divide(2),o=t.getPosition().subtract(this._position),a=o.add(i),c=t.Radius+this.Radius,u=i.subtract(a),h=u.magnitude();if(h<c)return null;var l,g=Math.acos(c/h),d=Math.atan2(u.y,u.x),f=d+g,p=new s(a.x+c*Math.cos(f),a.y+c*Math.sin(f)),m=d-g,v=new s(a.x+c*Math.cos(m),a.y+c*Math.sin(m));return l=(o.x-i.x)*(e.y-i.y)-(o.y-i.y)*(e.x-i.x)>0?y.getLineLineIntersection(n,p,r,v):y.getLineLineIntersection(n,v,r,p),new _(l,p,v)},e}(w),E=function(){function t(){}return t.getAgent=function(t,e,i,n){switch(t){case"BasicAgent":return new p(e,i,n);case"StopAgent":return new v(e,i,n);case"VOAgent":return new w(e,i,n);case"RVOAgent":return new P(e,i,n);case"HRVOAgent":return new R(e,i,n);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),A=function(){function t(){}return t.getConfiguration=function(t,e,i,n,r){switch(t){case"RandomToRandom":return this.RandomToRandom(e,i,n,r);case"RandomToLine":return this.RandomToLine(e,i,n,r);case"CircleToCircle":return this.CircleToCircle(e,i,n,r);case"GridToGrid":return this.GridToGrid(e,i,n,r);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,i,n){for(var r=[],o=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),a=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),c=0;c<n;c++){var u=E.getAgent(t,c,o[c],this.preferredVelocityFromGoalPosition(a[c]));r.push(u)}return r},t.RandomToLine=function(t,e,i,n){for(var r=[],o=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),a=0;a<n;a++){var c=E.getAgent(t,a,o[a],this.preferredVelocityFromGoalPosition(new s(((a+1)/(n+1)-.5)*e,0)));r.push(c)}return r},t.CircleToCircle=function(t,e,i,n){for(var r=[],o=i/2-25,a=0;a<n;a++){var c=2*Math.PI*a/n,u=E.getAgent(t,a,new s(o*Math.cos(c),o*Math.sin(c)),this.preferredVelocityFromGoalPosition(new s(o*Math.cos(c+Math.PI),o*Math.sin(c+Math.PI))));r.push(u)}return r},t.GridToGrid=function(t,e,i,n){for(var r=[],o=Math.ceil(Math.sqrt(n/2)),a=90,c=30-e/2,u=(o-1)/2*a,h=0;h<n;h++){var l=Math.floor(h/2),g=Math.floor(l/o),d=l%o;if(h%2==0){var f=E.getAgent(t,h,new s(c+(o-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new s(-c-d*a,u-g*a)));r.push(f)}else f=E.getAgent(t,h,new s(-c-(o-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new s(c+d*a,u-g*a))),r.push(f)}return r},t.preferredVelocityFromGoalPosition=function(t){return function(e){var i=t.subtract(e);return i.magnitudeSqrd()<1?i:i.normalise()}},t.poissonDiskSample=function(t,e,i,n){for(var r=[],o=function(){for(var i,o=!0;o;)o=!1,i=new s(t*Math.random(),e*Math.random()),r.forEach((function(t){i.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(o=!0)}));r.push(i)},a=0;a<i;a++)o();return r},t}(),L=document.getElementById("config"),S=document.getElementById("agentType"),D=document.getElementById("numberOfAgents"),T=document.getElementById("canvas2d"),I=document.getElementById("canvas3d"),O=document.getElementById("framerate"),C=document.getElementById("playButton"),F=document.getElementById("stepButton"),V=new r(new l),B=new o(T),U=new h(I),j=B,N=!1;function G(){this.reconfigure();var t=0,e=0,i=0;window.requestAnimationFrame((function n(r){var o=r-t;t=r,N&&V.update(o),j.render(V),i++,r-e>=250&&(O.textContent="FPS: "+(1e3*i/(r-e)).toFixed(1),i=0,e=r),window.requestAnimationFrame(n)}))}function Y(t){switch(t){case"2D":return document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),j=B,T.style.display="block",void(I.style.display="none");case"3D":return document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),j=U,T.style.display="none",void(I.style.display="block");default:throw new Error('Unknown view "'+t+'"')}}function k(){(N=!N)?(C.textContent="Pause",F.disabled=!0):(C.textContent="Play",F.disabled=!1)}function q(){V.update(1e3/60)}function X(){var t;N&&this.playPause();var e=L.value,i=S.value,n=null!==(t=parseInt(D.value))&&void 0!==t?t:0;V.init(A.getConfiguration(e,i,T.width,T.height,n))}}},e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={exports:{}};return t[n](r,r.exports,i),r.exports}return i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(319)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9TaW11bGF0aW9uLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL1JlbmRlcmVyMkQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvVmVjdG9yMmYudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvTWF0NGYudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvQWdlbnRNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0Zsb29yTWVzaC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9SZW5kZXJlcjNELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0FnZW50VHJlZS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9Db2xvdXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL1N0b3BBZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9HZW9tZXRyeS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9WZWxvY2l0eU9ic3RhY2xlLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL2FnZW50cy9WT0FnZW50LnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL2FnZW50cy9SVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvSFJWT0FnZW50LnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0FnZW50RmFjdG9yeS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9Db25maWd1cmF0aW9uRmFjdG9yeS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9kZW1vLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svc3RhcnR1cCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Il0sIm5hbWVzIjpbImFnZW50cyIsInRoaXMiLCJfYWdlbnRzIiwiaW5pdCIsInVwZGF0ZSIsImRlbHRhVCIsImZvckVhY2giLCJhZ2VudCIsImdldE5laWdoYm91cnNJblJhbmdlRXVjbGlkZWFuIiwiZ2V0QWxsIiwiZ2V0QWdlbnRzIiwiY2FudmFzIiwiY2FtZXJhRGlzdCIsIm1vdXNlRG93biIsImV2ZW50IiwiZHJhZyIsIm9sZFgiLCJwYWdlWCIsIm9sZFkiLCJwYWdlWSIsIm1vdXNlVXAiLCJwcmV2ZW50RGVmYXVsdCIsIm1vdXNlTW92ZSIsInhQYW4iLCJ5UGFuIiwibW91c2VTY3JvbGwiLCJkZWx0YVkiLCJjb25zb2xlIiwibG9nIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW5kZXIiLCJzaW11bGF0aW9uIiwic2NhbGVGYWN0b3IiLCJzZXRUcmFuc2Zvcm0iLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInRyYW5zbGF0ZSIsInNjYWxlIiwiZHJhd0FnZW50IiwicG9zaXRpb24iLCJnZXRQb3NpdGlvbiIsImRpcmVjdGlvbiIsImdldERpcmVjdGlvbiIsImNvbG91ciIsImdldENvbG91ciIsImJlZ2luUGF0aCIsInN0cm9rZVN0eWxlIiwiciIsImciLCJiIiwibGluZVdpZHRoIiwiYXJjIiwieCIsInkiLCJSYWRpdXMiLCJNYXRoIiwiUEkiLCJtYWduaXR1ZGUiLCJtb3ZlVG8iLCJuZXdQb3MiLCJhZGQiLCJkaXZpZGUiLCJtdWx0aXBseSIsImxpbmVUbyIsInN0cm9rZSIsImNvcHkiLCJ2IiwiVmVjdG9yMmYiLCJzdWJ0cmFjdCIsInMiLCJkb3QiLCJtYWduaXR1ZGVTcXJkIiwic3FydCIsIm5vcm1hbGlzZSIsIm0iLCJzYW1wbGUiLCJtYXhSYWRpdXMiLCJyYWRpdXMiLCJyYW5kb20iLCJhbmdsZSIsImNvcyIsInNpbiIsImdldElkZW50aXR5TWF0cml4IiwiRmxvYXQzMkFycmF5IiwiZ2V0WFJvdGF0aW9uTWF0cml4IiwiYyIsImdldFlSb3RhdGlvbk1hdHJpeCIsImdldFpSb3RhdGlvbk1hdHJpeCIsImdldFRyYW5zbGF0aW9uTWF0cml4IiwieiIsImdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeCIsImZvdiIsImFzcGVjdFJhdGlvIiwibmVhciIsImZhciIsImYiLCJ0YW4iLCJpIiwibXVsdGlwbHlNYXRyaWNlcyIsImEiLCJyZXN1bHQiLCJqIiwibnVtIiwiayIsInRyYW5zcG9zZSIsImludmVydCIsImEwMCIsImEwMSIsImEwMiIsImEwMyIsImExMCIsImExMSIsImExMiIsImExMyIsImEyMCIsImEyMSIsImEyMiIsImEyMyIsImEzMCIsImEzMSIsImEzMiIsImEzMyIsImIwMCIsImIwMSIsImIwMiIsImIwMyIsImIwNCIsImIwNSIsImIwNiIsImIwNyIsImIwOCIsImIwOSIsImIxMCIsImIxMSIsImRldCIsImlEZXQiLCJ2ZXJ0aWNlcyIsImluZGljZXMiLCJnZXRWZXJ0aWNlcyIsInciLCJoIiwiZ2V0SW5kaWNlcyIsIm9mZnNldCIsIm1hcCIsInhSb3QiLCJ5Um90IiwieFJvdE1hdCIsIk1hdDRmIiwieVJvdE1hdCIsIndvcmxkTWF0cml4IiwiZ2wiLCJ1bmlmb3JtTWF0cml4NGZ2Iiwid29ybGRNYXRMb2MiLCJ2aWV3TWF0cml4Iiwidmlld01hdExvYyIsInByb2plY3Rpb25NYXRyaXgiLCJwcm9qTWF0TG9jIiwidmVydGV4U2hhZGVyIiwiY3JlYXRlU2hhZGVyIiwiVkVSVEVYX1NIQURFUiIsImZyYWdtZW50U2hhZGVyIiwiRlJBR01FTlRfU0hBREVSIiwic2hhZGVyU291cmNlIiwiY29tcGlsZVNoYWRlciIsImdldFNoYWRlclBhcmFtZXRlciIsIkNPTVBJTEVfU1RBVFVTIiwicHJvZ3JhbSIsImNyZWF0ZVByb2dyYW0iLCJhdHRhY2hTaGFkZXIiLCJsaW5rUHJvZ3JhbSIsImdldFByb2dyYW1QYXJhbWV0ZXIiLCJMSU5LX1NUQVRVUyIsInZhbGlkYXRlUHJvZ3JhbSIsIlZBTElEQVRFX1NUQVRVUyIsInVzZVByb2dyYW0iLCJlbmFibGUiLCJERVBUSF9URVNUIiwiQ1VMTF9GQUNFIiwiZnJvbnRGYWNlIiwiQ0NXIiwiY3VsbEZhY2UiLCJCQUNLIiwiY2xlYXJDb2xvciIsIkFnZW50TWVzaCIsImNvbmNhdCIsIkZsb29yTWVzaCIsIlZlcnRleEJ1ZmZlciIsImNyZWF0ZUJ1ZmZlciIsImJpbmRCdWZmZXIiLCJBUlJBWV9CVUZGRVIiLCJidWZmZXJEYXRhIiwiU1RBVElDX0RSQVciLCJVaW50MTZBcnJheSIsImxlbmd0aCIsIkluZGV4QnVmZmVyIiwiRUxFTUVOVF9BUlJBWV9CVUZGRVIiLCJwb3NpdGlvbkF0dHJpYnV0ZSIsImdldEF0dHJpYkxvY2F0aW9uIiwidmVydGV4QXR0cmliUG9pbnRlciIsIkZMT0FUIiwiQllURVNfUEVSX0VMRU1FTlQiLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsIm5vcm1hbEF0dHJpYnV0ZSIsImdldFVuaWZvcm1Mb2NhdGlvbiIsInBvc1ZlY0xvYyIsImRpclZlY0xvYyIsInJhZGl1c0xvYyIsImJhc2VDb2xvdXJMb2MiLCJlcnJvciIsImdldFByb2dyYW1JbmZvTG9nIiwiZ2V0U2hhZGVySW5mb0xvZyIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJwb3MiLCJ1bmlmb3JtMmYiLCJkaXIiLCJ1bmlmb3JtMWYiLCJjb2xvciIsInVuaWZvcm0zZiIsImRyYXdFbGVtZW50cyIsIlRSSUFOR0xFUyIsIlVOU0lHTkVEX1NIT1JUIiwiX3Jvb3QiLCJjb25zdHJ1Y3RUcmVlIiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhciIsInJhbmdlIiwibWluWCIsIm1pblkiLCJtYXhYIiwibWF4WSIsInJhbmdlU2VhcmNoIiwiZmlsdGVyIiwib3RoZXIiLCJJZCIsImZ1biIsInhBeGlzIiwibWlkIiwiZmxvb3IiLCJzb3J0ZWQiLCJzb3J0IiwibGVmdCIsInNsaWNlIiwicmlnaHQiLCJyb290IiwicmVzIiwicHVzaCIsImlkIiwic3RhcnRQb3NpdGlvbiIsImdldFByZWZlcnJlZFZlbG9jaXR5IiwiX3Bvc2l0aW9uIiwiX2RpcmVjdGlvbiIsIl9nZXRQcmVmZXJyZWRWZWxvY2l0eSIsIl9pc0RvbmUiLCJpc0RvbmUiLCJGcm9tSHN2IiwiZnJhY3QiLCJQIiwiUSIsIlQiLCJXaGl0ZSIsIlJlZCIsIkdyZWVuIiwiQ29sb3VyIiwiX25laWdoYm91cnMiLCJwcmVmZXJyZWRWZWxvY2l0eSIsInN0ZXBTaXplIiwiQWdlbnQiLCJfaXNTdHVjayIsIm5laWdoYm91cnMiLCJoZWFkaW5nIiwiY29sbGlkZXMiLCJnZXRDbG9zZXN0UG9pbnRPbkxpbmUiLCJsaW5lUG9pbnQiLCJsaW5lRGlyZWN0aW9uIiwicG9pbnQiLCJkaXN0YW5jZSIsImdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uIiwiY2VudHJlIiwib3JpZ2luIiwiZGVsdGEiLCJkaXNjcmltIiwiSW5maW5pdHkiLCJnZXRMaW5lTGluZUludGVyc2VjdGlvbiIsInBvaW50MSIsImRpcmVjdGlvbjEiLCJwb2ludDIiLCJkaXJlY3Rpb24yIiwiZGlmZiIsInQiLCJ2ZXJ0ZXgiLCJ0YW5nZW50MSIsInRhbmdlbnQyIiwiY29udGFpbnMiLCJ2ZWxvY2l0eSIsImRldGVybWluYW50MSIsImRldGVybWluYW50MiIsIl9jb2xvdXIiLCJjb2xsaXNpb24iLCJzYWZlIiwidmVsb2NpdHlPYnN0YWNsZSIsImdldFZlbG9jaXR5T2JzdGFjbGUiLCJHZW9tZXRyeSIsImxlZnRTYWZlIiwicmlnaHRTYWZlIiwic2V0Q29sb3VyIiwibWluUGVuYWx0eSIsImJlc3RWZWxvY2l0eSIsIm1pblRpbWVUb0NvbGxpc2lvbiIsInRpbWVUb0NvbGxpc2lvbiIsInBlbmFsdHkiLCJ2ZWxvY2l0eUIiLCJkaXN0IiwidGhldGEiLCJhY29zIiwicGhpIiwiYXRhbjIiLCJhbmdsZTEiLCJhbmdsZTIiLCJWZWxvY2l0eU9ic3RhY2xlIiwic3RyZXNzIiwiaHVlIiwidmVsb2NpdHlBIiwiVk9BZ2VudCIsInZvVmVydGV4IiwicnZvVmVydGV4IiwicG9zaXRpb25CIiwiZ2V0QWdlbnQiLCJ0eXBlIiwiQmFzaWNBZ2VudCIsIlN0b3BBZ2VudCIsIlJWT0FnZW50IiwiSFJWT0FnZW50IiwiRXJyb3IiLCJnZXRDb25maWd1cmF0aW9uIiwiYWdlbnRUeXBlIiwibnVtYmVyT2ZBZ2VudHMiLCJSYW5kb21Ub1JhbmRvbSIsIlJhbmRvbVRvTGluZSIsIkNpcmNsZVRvQ2lyY2xlIiwiR3JpZFRvR3JpZCIsInN0YXJ0UG9zaXRpb25zIiwicG9pc3NvbkRpc2tTYW1wbGUiLCJnb2FsUG9zaXRpb25zIiwiQWdlbnRGYWN0b3J5IiwicHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uIiwiX3dpZHRoIiwiX2hlaWdodCIsImdyaWRTaXplIiwiY2VpbCIsImlkeCIsInJvdyIsImNvbCIsImdvYWxQb3NpdGlvbiIsImdvYWxEaXJlY3Rpb24iLCJ4UmFuZ2UiLCJ5UmFuZ2UiLCJuIiwidGhyZXNob2xkIiwic2FtcGxlcyIsInJlc2FtcGxlIiwiY29uZmlnU2VsZWN0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFnZW50VHlwZVNlbGVjdCIsIm51bWJlck9mQWdlbnRzSW5wdXQiLCJjYW52YXMyZCIsImNhbnZhczNkIiwiZnJhbWVyYXRlIiwicGxheUJ1dHRvbiIsInN0ZXBCdXR0b24iLCJTaW11bGF0aW9uIiwiQWdlbnRUcmVlIiwicmVuZGVyZXIyZCIsIlJlbmRlcmVyMkQiLCJyZW5kZXJlcjNkIiwiUmVuZGVyZXIzRCIsInJlbmRlcmVyIiwicGxheSIsInJlY29uZmlndXJlIiwibGFzdFJlbmRlciIsImxhc3RGUFMiLCJmcmFtZXMiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJsb29wIiwidGltZXN0YW1wIiwidGV4dENvbnRlbnQiLCJ0b0ZpeGVkIiwic3dpdGNoVmlldyIsInZpZXciLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJzdHlsZSIsImRpc3BsYXkiLCJwbGF5UGF1c2UiLCJkaXNhYmxlZCIsInN0ZXAiLCJjb25maWciLCJ2YWx1ZSIsInBhcnNlSW50IiwiQ29uZmlndXJhdGlvbkZhY3RvcnkiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImQiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyJdLCJtYXBwaW5ncyI6Im1LQUdBLEksRUFBQSxhQUdFLFdBQVlBLEdBQ1ZDLEtBQUtDLFFBQVVGLEVBc0JuQixPQW5CRSxZQUFBRyxLQUFBLFNBQUtILEdBQ0hDLEtBQUtDLFFBQVFDLEtBQUtILElBR3BCLFlBQUFJLE9BQUEsU0FBT0MsR0FBUCxXQUVFSixLQUFLQyxRQUFRSSxTQUFRLFNBQUNDLEdBQ3BCQSxFQUFNSCxPQUNKQyxFQUNBLEVBQUtILFFBQVFNLDhCQUE4QkQsRUFKbkMsU0FRWk4sS0FBS0MsUUFB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QVUsRUFBSyxFQUFLLEVBQUssR0FDbEMsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3JDLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNsQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQUssRUFDcEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFFBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEdBQU0sR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxHQUFNLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbkMsU0FBVyxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3RDLFNBQVcsUUFBVSxFQUFLLEdBQU0sRUFBSyxHQUNwQyxTQUFXLFFBQVUsRUFBSyxHQUFNLEVBQUssRUFDdEMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMzQyxTQUFXLFFBQVUsUUFBVSxHQUFNLEVBQUssR0FDekMsU0FBVyxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQzNDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxLQUFPLFNBQVUsR0FBTSxFQUFLLEdBQ3ZDLFNBQVcsS0FBTyxVQUFXLEVBQUssRUFBSyxFQUN4QyxTQUFXLEtBQU8sU0FBVSxHQUFNLEVBQUssRUFDdkMsU0FBVyxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3RDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxFQUN2QyxTQUFXLEtBQU8sU0FBVSxFQUFLLEVBQUssR0FDckMsU0FBVyxLQUFPLFNBQVUsR0FBTSxFQUFLLEdBQ3ZDLFNBQVcsS0FBTyxVQUFXLEVBQUssRUFBSyxHQUN2QyxRQUFVLEtBQU8sVUFBVyxFQUFLLEVBQUssR0FDdEMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEdBQ3JDLFFBQVUsS0FBTyxVQUFXLEVBQUssRUFBSyxHQUN0QyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDdEMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3JDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDckMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3JDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDMUMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzFDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQ3pDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEdBQzFDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxPQUFTLFFBQVUsUUFBVSxHQUFNLEVBQUssR0FDeEMsT0FBUyxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQ3pDLE9BQVMsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUN4QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDdkMsT0FBUyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQ3hDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN0QyxPQUFTLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDeEMsT0FBUyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxTQUFXLEVBQUssRUFBSyxHQUN4QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDdkMsT0FBUyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDdkMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN2QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdEMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUFNLEdBQ3BDLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFBSyxFQUNyQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQU0sRUFDcEMsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUFLLEdBQ25DLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNwQyxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQUssRUFDckMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3BDLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNsQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQzFDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsUUFBVSxHQUFNLEVBQUssR0FDeEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxHQUN6QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxHQUN6QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFNBQVcsRUFBSyxFQUFLLEVBQzFDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsUUFBVSxHQUFNLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFDekMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsU0FBVyxRQUFVLEVBQUssRUFBSyxHQUFNLEdBQ3JDLFNBQVcsUUFBVSxFQUFLLEVBQUssRUFBSyxFQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEdBQU0sRUFDckMsU0FBVyxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ25DLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNyQyxTQUFXLFFBQVUsR0FBTSxFQUFLLEVBQUssRUFDdEMsU0FBVyxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3JDLFNBQVcsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNuQyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQzFDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FDeEMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMzQyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssRUFDM0MsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxHQUMxQyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzNDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUlwQyxFQUFBQyxRQUFVLENBQ2YsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsRUFBRyxFQUFHLEVBQ04sRUFBRyxFQUFHLEVBQ04sR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsRUFBRyxHQUFJLEVBQ1AsSUFBSyxHQUFJLEdBQ1QsSUFBSyxJQUFLLEdBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxHQUFJLElBQ1QsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxHQUFJLElBQ1QsR0FBSSxJQUFLLEdBQ1QsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsR0FBSSxJQUFLLElBQ1QsSUFBSyxHQUFJLEdBQ1QsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsRUFBRyxFQUFHLEVBQ04sRUFBRyxFQUFHLEVBQ04sR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsRUFBRyxHQUFJLEdBQ1AsSUFBSyxJQUFLLEdBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLEdBQ1YsR0FBSSxHQUFJLEdBQ1IsR0FBSSxHQUFJLEdBQ1IsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxJQUFLLElBQ1YsSUFBSyxHQUFJLEdBQ1QsR0FBSSxJQUFLLElBQ1QsR0FBSSxHQUFJLEdBQ1IsSUFB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akZkLEVBQW9CcFcsRUFBS3NXLElBQ0gsb0JBQVhnQixRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVSLEVBQVNnQixPQUFPQyxZQUFhLENBQUV2QixNQUFPLFdBRTdEYSxPQUFPQyxlQUFlUixFQUFTLGFBQWMsQ0FBRU4sT0FBTyxLSEZoREksRUFBb0IsTSIsImZpbGUiOiJkZW1vLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUFnZW50Q29sbGVjdGlvbiB9IGZyb20gXCIuL0lBZ2VudENvbGxlY3Rpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi9BZ2VudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNpbXVsYXRpb24ge1xyXG4gIHByaXZhdGUgX2FnZW50czogSUFnZW50Q29sbGVjdGlvbjtcclxuXHJcbiAgY29uc3RydWN0b3IoYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgfVxyXG5cclxuICBpbml0KGFnZW50czogQWdlbnRbXSkge1xyXG4gICAgdGhpcy5fYWdlbnRzLmluaXQoYWdlbnRzKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShkZWx0YVQ6IG51bWJlcikge1xyXG4gICAgbGV0IHJhbmdlID0gNDAwO1xyXG4gICAgdGhpcy5fYWdlbnRzLmZvckVhY2goKGFnZW50KSA9PiB7XHJcbiAgICAgIGFnZW50LnVwZGF0ZShcclxuICAgICAgICBkZWx0YVQsXHJcbiAgICAgICAgdGhpcy5fYWdlbnRzLmdldE5laWdoYm91cnNJblJhbmdlRXVjbGlkZWFuKGFnZW50LCByYW5nZSlcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2FnZW50cy5pbml0KHRoaXMuX2FnZW50cy5nZXRBbGwoKSk7XHJcbiAgfVxyXG5cclxuICBnZXRBZ2VudHMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWdlbnRzO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi9JUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi9BZ2VudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlbmRlcmVyMkQgaW1wbGVtZW50cyBJUmVuZGVyZXIge1xyXG4gIHByaXZhdGUgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuICBwcml2YXRlIGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcclxuXHJcbiAgLy8gQ2FtZXJhIGNvbnRyb2xzXHJcbiAgcHJpdmF0ZSBkcmFnOiBib29sZWFuO1xyXG4gIHByaXZhdGUgb2xkWDogbnVtYmVyO1xyXG4gIHByaXZhdGUgb2xkWTogbnVtYmVyO1xyXG4gIHByaXZhdGUgeFBhbjogbnVtYmVyO1xyXG4gIHByaXZhdGUgeVBhbjogbnVtYmVyO1xyXG4gIHByaXZhdGUgY2FtZXJhRGlzdCA9IDgwMDsgLy8gU3RhcnQgY2FtZXJhIDgwMCAncHgnIGF3YXlcclxuXHJcbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCkge1xyXG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XHJcbiAgICB0aGlzLmNvbnRleHQgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICB0aGlzLnhQYW4gPSB0aGlzLmNhbnZhcy53aWR0aCAvIDI7XHJcbiAgICB0aGlzLnlQYW4gPSB0aGlzLmNhbnZhcy5oZWlnaHQgLyAyO1xyXG5cclxuICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lcnNcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5tb3VzZURvd24sIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIHRoaXMubW91c2VVcCwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlb3V0XCIsIHRoaXMubW91c2VVcCwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB0aGlzLm1vdXNlTW92ZSwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsIHRoaXMubW91c2VTY3JvbGwsIGZhbHNlKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcihzaW11bGF0aW9uOiBTaW11bGF0aW9uKSB7XHJcbiAgICBjb25zdCBzY2FsZUZhY3RvciA9IDgwMCAvIHRoaXMuY2FtZXJhRGlzdDtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcblxyXG4gICAgLy8gQ2xlYXIgYmFja2dyb3VuZFxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcclxuICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcInJnYigxMzUsIDE5NCwgMjUwKVwiO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KFxyXG4gICAgICAwLFxyXG4gICAgICAwLFxyXG4gICAgICB0aGlzLmNvbnRleHQuY2FudmFzLndpZHRoLFxyXG4gICAgICB0aGlzLmNvbnRleHQuY2FudmFzLmhlaWdodFxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBUT0RPOiByZXBsYWNlIHdpdGggc2luZ2xlIHNldFRyYW5zZm9ybVxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcclxuICAgIHRoaXMuY29udGV4dC50cmFuc2xhdGUodGhpcy54UGFuLCB0aGlzLnlQYW4pO1xyXG4gICAgdGhpcy5jb250ZXh0LnNjYWxlKHNjYWxlRmFjdG9yLCBzY2FsZUZhY3Rvcik7XHJcblxyXG4gICAgLy8gRHJhdyBmbG9vclxyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmdiKDUxLCA1MSwgNTEpXCI7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoXHJcbiAgICAgIC10aGlzLmNvbnRleHQuY2FudmFzLndpZHRoICogMC41NSxcclxuICAgICAgLXRoaXMuY29udGV4dC5jYW52YXMuaGVpZ2h0ICogMC41NSxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy53aWR0aCAqIDEuMSxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy5oZWlnaHQgKiAxLjFcclxuICAgICk7XHJcblxyXG4gICAgLy8gRHJhdyBhZ2VudHNcclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICB0aGlzLmRyYXdBZ2VudChhZ2VudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50KGFnZW50OiBBZ2VudCk6IHZvaWQge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgY29uc3QgZGlyZWN0aW9uID0gYWdlbnQuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCBjb2xvdXIgPSBhZ2VudC5nZXRDb2xvdXIoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSBgcmdiKCR7Y29sb3VyLnJ9LCAke2NvbG91ci5nfSwgJHtjb2xvdXIuYn0pYDtcclxuICAgIHRoaXMuY29udGV4dC5saW5lV2lkdGggPSAyO1xyXG5cclxuICAgIC8vIHkgcG9zaXRpb24gaW52ZXJ0ZWQgdG8gbWF0Y2ggM0Qgdmlld1xyXG4gICAgdGhpcy5jb250ZXh0LmFyYyhwb3NpdGlvbi54LCAtcG9zaXRpb24ueSwgYWdlbnQuUmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XHJcblxyXG4gICAgbGV0IG1hZ25pdHVkZSA9IGRpcmVjdGlvbi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChtYWduaXR1ZGUgIT09IDApIHtcclxuICAgICAgdGhpcy5jb250ZXh0Lm1vdmVUbyhwb3NpdGlvbi54LCAtcG9zaXRpb24ueSk7XHJcbiAgICAgIGxldCBuZXdQb3MgPSBwb3NpdGlvbi5hZGQoXHJcbiAgICAgICAgZGlyZWN0aW9uLmRpdmlkZShtYWduaXR1ZGUpLm11bHRpcGx5KGFnZW50LlJhZGl1cylcclxuICAgICAgKTtcclxuICAgICAgdGhpcy5jb250ZXh0LmxpbmVUbyhuZXdQb3MueCwgLW5ld1Bvcy55KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG1vdXNlRG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gdHJ1ZTtcclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBtb3VzZVVwID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICB0aGlzLmRyYWcgPSBmYWxzZTtcclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBtb3VzZU1vdmUgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIGlmICghdGhpcy5kcmFnKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gICAgdGhpcy54UGFuICs9IGV2ZW50LnBhZ2VYIC0gdGhpcy5vbGRYO1xyXG4gICAgdGhpcy55UGFuICs9IGV2ZW50LnBhZ2VZIC0gdGhpcy5vbGRZO1xyXG5cclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcbiAgfTtcclxuXHJcbiAgcHJpdmF0ZSBtb3VzZVNjcm9sbCA9IChldmVudDogV2hlZWxFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5jYW1lcmFEaXN0ICs9IGV2ZW50LmRlbHRhWTtcclxuICAgIGlmICh0aGlzLmNhbWVyYURpc3QgPCAwKSB7XHJcbiAgICAgIHRoaXMuY2FtZXJhRGlzdCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnNvbGUubG9nKFwiU2Nyb2xsXCIpO1xyXG4gIH07XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIFZlY3RvcjJmIHtcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG5cclxuICBjb3B5KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih2LngsIHYueSk7XHJcbiAgfVxyXG5cclxuICBhZGQodjogVmVjdG9yMmYpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCArIHYueCwgdGhpcy55ICsgdi55KTtcclxuICB9XHJcblxyXG4gIHN1YnRyYWN0KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih0aGlzLnggLSB2LngsIHRoaXMueSAtIHYueSk7XHJcbiAgfVxyXG5cclxuICBtdWx0aXBseShzOiBudW1iZXIpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCAqIHMsIHRoaXMueSAqIHMpO1xyXG4gIH1cclxuXHJcbiAgZGl2aWRlKHM6IG51bWJlcik6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYodGhpcy54IC8gcywgdGhpcy55IC8gcyk7XHJcbiAgfVxyXG5cclxuICBkb3QodjogVmVjdG9yMmYpIHtcclxuICAgIHJldHVybiB0aGlzLnggKiB2LnggKyB0aGlzLnkgKiB2Lnk7XHJcbiAgfVxyXG5cclxuICBtYWduaXR1ZGVTcXJkKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy54ICoqIDIgKyB0aGlzLnkgKiogMjtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLm1hZ25pdHVkZVNxcmQoKSk7XHJcbiAgfVxyXG5cclxuICBub3JtYWxpc2UoKTogVmVjdG9yMmYge1xyXG4gICAgbGV0IG0gPSB0aGlzLm1hZ25pdHVkZSgpO1xyXG4gICAgcmV0dXJuIG0gPT0gMCA/IG5ldyBWZWN0b3IyZigwLCAwKSA6IHRoaXMuZGl2aWRlKG0pO1xyXG4gIH1cclxuXHJcbiAgc2FtcGxlKG1heFJhZGl1czogbnVtYmVyKSB7XHJcbiAgICAvLyBVbmlmb3JtbHkgc2FtcGxlIHRoZSBjaXJjbGUgY2VudHJlZCBhdCB0aGlzIHBvaW50IHdpdGggcmFkaXVzIG1heFJhZGl1c1xyXG4gICAgbGV0IHJhZGl1cyA9IE1hdGguc3FydChNYXRoLnJhbmRvbSgpKSAqIG1heFJhZGl1cztcclxuICAgIGxldCBhbmdsZSA9IDIgKiBNYXRoLlBJICogTWF0aC5yYW5kb20oKTtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIHRoaXMueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKSxcclxuICAgICAgdGhpcy55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgTWF0NGYge1xyXG4gIHN0YXRpYyBnZXRJZGVudGl0eU1hdHJpeCgpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgIDAsIDAsIDAsIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFhSb3RhdGlvbk1hdHJpeChhbmdsZTogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IHMgPSBNYXRoLnNpbihhbmdsZSk7XHJcbiAgICBjb25zdCBjID0gTWF0aC5jb3MoYW5nbGUpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAwLCBjLCBzLCAwLFxyXG4gICAgICAwLC1zLCBjLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRZUm90YXRpb25NYXRyaXgoYW5nbGU6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBzID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgY29uc3QgYyA9IE1hdGguY29zKGFuZ2xlKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgYywgMCwtcywgMCxcclxuICAgICAgMCwgMSwgMCwgMCxcclxuICAgICAgcywgMCwgYywgMCxcclxuICAgICAgMCwgMCwgMCwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0WlJvdGF0aW9uTWF0cml4KGFuZ2xlOiBudW1iZXIpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcyA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgIGNvbnN0IGMgPSBNYXRoLmNvcyhhbmdsZSk7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIGMsIHMsIDAsIDAsXHJcbiAgICAgLXMsIGMsIDAsIDAsXHJcbiAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgIDAsIDAsIDAsIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFRyYW5zbGF0aW9uTWF0cml4KHg6IG51bWJlciwgeTogbnVtYmVyLCB6OiBudW1iZXIpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgIDAsIDAsIDEsIDAsXHJcbiAgICAgIHgsIHksIHosIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgIGZvdjogbnVtYmVyLFxyXG4gICAgYXNwZWN0UmF0aW86IG51bWJlcixcclxuICAgIG5lYXI6IG51bWJlcixcclxuICAgIGZhcjogbnVtYmVyXHJcbiAgKTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IGYgPSAxLjAgLyBNYXRoLnRhbihmb3YgLyAyKTtcclxuICAgIGNvbnN0IGkgPSAxLjAgLyAobmVhciAtIGZhcik7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIGYgLyBhc3BlY3RSYXRpbywgMCwgICAgICAgICAgICAgICAgICAwLCAgMCxcclxuICAgICAgICAgICAgICAgICAgICAwLCBmLCAgICAgICAgICAgICAgICAgIDAsICAwLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsICAgKG5lYXIgKyBmYXIpICogaSwgLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgMCwgMCwgbmVhciAqIGZhciAqIGkgKiAyLCAgMFxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgbXVsdGlwbHlNYXRyaWNlcyhhOiBGbG9hdDMyQXJyYXksIGI6IEZsb2F0MzJBcnJheSk6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBuZXcgRmxvYXQzMkFycmF5KDE2KTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQ7IGkrKykge1xyXG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDQ7IGorKykge1xyXG4gICAgICAgIGxldCBudW0gPSAwO1xyXG4gICAgICAgIGZvciAobGV0IGsgPSAwOyBrIDwgNDsgaysrKSB7XHJcbiAgICAgICAgICBudW0gKz0gYVtpICogNCArIGtdICogYltrICogNCArIGpdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXN1bHRbaSAqIDQgKyBqXSA9IG51bTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgdHJhbnNwb3NlKG06IEZsb2F0MzJBcnJheSkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCA0OyBqKyspIHtcclxuICAgICAgICByZXN1bHRbaSAqIDQgKyBqXSA9IG1baiAqIDQgKyBpXTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgaW52ZXJ0KGE6IEZsb2F0MzJBcnJheSkge1xyXG4gICAgY29uc3QgYTAwID0gYVswXSxcclxuICAgICAgYTAxID0gYVsxXSxcclxuICAgICAgYTAyID0gYVsyXSxcclxuICAgICAgYTAzID0gYVszXTtcclxuICAgIGNvbnN0IGExMCA9IGFbNF0sXHJcbiAgICAgIGExMSA9IGFbNV0sXHJcbiAgICAgIGExMiA9IGFbNl0sXHJcbiAgICAgIGExMyA9IGFbN107XHJcbiAgICBjb25zdCBhMjAgPSBhWzhdLFxyXG4gICAgICBhMjEgPSBhWzldLFxyXG4gICAgICBhMjIgPSBhWzEwXSxcclxuICAgICAgYTIzID0gYVsxMV07XHJcbiAgICBjb25zdCBhMzAgPSBhWzEyXSxcclxuICAgICAgYTMxID0gYVsxM10sXHJcbiAgICAgIGEzMiA9IGFbMTRdLFxyXG4gICAgICBhMzMgPSBhWzE1XTtcclxuICAgIGNvbnN0IGIwMCA9IGEwMCAqIGExMSAtIGEwMSAqIGExMDtcclxuICAgIGNvbnN0IGIwMSA9IGEwMCAqIGExMiAtIGEwMiAqIGExMDtcclxuICAgIGNvbnN0IGIwMiA9IGEwMCAqIGExMyAtIGEwMyAqIGExMDtcclxuICAgIGNvbnN0IGIwMyA9IGEwMSAqIGExMiAtIGEwMiAqIGExMTtcclxuICAgIGNvbnN0IGIwNCA9IGEwMSAqIGExMyAtIGEwMyAqIGExMTtcclxuICAgIGNvbnN0IGIwNSA9IGEwMiAqIGExMyAtIGEwMyAqIGExMjtcclxuICAgIGNvbnN0IGIwNiA9IGEyMCAqIGEzMSAtIGEyMSAqIGEzMDtcclxuICAgIGNvbnN0IGIwNyA9IGEyMCAqIGEzMiAtIGEyMiAqIGEzMDtcclxuICAgIGNvbnN0IGIwOCA9IGEyMCAqIGEzMyAtIGEyMyAqIGEzMDtcclxuICAgIGNvbnN0IGIwOSA9IGEyMSAqIGEzMiAtIGEyMiAqIGEzMTtcclxuICAgIGNvbnN0IGIxMCA9IGEyMSAqIGEzMyAtIGEyMyAqIGEzMTtcclxuICAgIGNvbnN0IGIxMSA9IGEyMiAqIGEzMyAtIGEyMyAqIGEzMjtcclxuXHJcbiAgICBjb25zdCBkZXQgPVxyXG4gICAgICBiMDAgKiBiMTEgLSBiMDEgKiBiMTAgKyBiMDIgKiBiMDkgKyBiMDMgKiBiMDggLSBiMDQgKiBiMDcgKyBiMDUgKiBiMDY7XHJcblxyXG4gICAgaWYgKCFkZXQpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcblxyXG4gICAgY29uc3QgaURldCA9IDEuMCAvIGRldDtcclxuICAgIHJlc3VsdFswXSA9IChhMTEgKiBiMTEgLSBhMTIgKiBiMTAgKyBhMTMgKiBiMDkpICogaURldDtcclxuICAgIHJlc3VsdFsxXSA9IChhMDIgKiBiMTAgLSBhMDEgKiBiMTEgLSBhMDMgKiBiMDkpICogaURldDtcclxuICAgIHJlc3VsdFsyXSA9IChhMzEgKiBiMDUgLSBhMzIgKiBiMDQgKyBhMzMgKiBiMDMpICogaURldDtcclxuICAgIHJlc3VsdFszXSA9IChhMjIgKiBiMDQgLSBhMjEgKiBiMDUgLSBhMjMgKiBiMDMpICogaURldDtcclxuICAgIHJlc3VsdFs0XSA9IChhMTIgKiBiMDggLSBhMTAgKiBiMTEgLSBhMTMgKiBiMDcpICogaURldDtcclxuICAgIHJlc3VsdFs1XSA9IChhMDAgKiBiMTEgLSBhMDIgKiBiMDggKyBhMDMgKiBiMDcpICogaURldDtcclxuICAgIHJlc3VsdFs2XSA9IChhMzIgKiBiMDIgLSBhMzAgKiBiMDUgLSBhMzMgKiBiMDEpICogaURldDtcclxuICAgIHJlc3VsdFs3XSA9IChhMjAgKiBiMDUgLSBhMjIgKiBiMDIgKyBhMjMgKiBiMDEpICogaURldDtcclxuICAgIHJlc3VsdFs4XSA9IChhMTAgKiBiMTAgLSBhMTEgKiBiMDggKyBhMTMgKiBiMDYpICogaURldDtcclxuICAgIHJlc3VsdFs5XSA9IChhMDEgKiBiMDggLSBhMDAgKiBiMTAgLSBhMDMgKiBiMDYpICogaURldDtcclxuICAgIHJlc3VsdFsxMF0gPSAoYTMwICogYjA0IC0gYTMxICogYjAyICsgYTMzICogYjAwKSAqIGlEZXQ7XHJcbiAgICByZXN1bHRbMTFdID0gKGEyMSAqIGIwMiAtIGEyMCAqIGIwNCAtIGEyMyAqIGIwMCkgKiBpRGV0O1xyXG4gICAgcmVzdWx0WzEyXSA9IChhMTEgKiBiMDcgLSBhMTAgKiBiMDkgLSBhMTIgKiBiMDYpICogaURldDtcclxuICAgIHJlc3VsdFsxM10gPSAoYTAwICogYjA5IC0gYTAxICogYjA3ICsgYTAyICogYjA2KSAqIGlEZXQ7XHJcbiAgICByZXN1bHRbMTRdID0gKGEzMSAqIGIwMSAtIGEzMCAqIGIwMyAtIGEzMiAqIGIwMCkgKiBpRGV0O1xyXG4gICAgcmVzdWx0WzE1XSA9IChhMjAgKiBiMDMgLSBhMjEgKiBiMDEgKyBhMjIgKiBiMDApICogaURldDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBBZ2VudE1lc2gge1xyXG4gIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gIHN0YXRpYyB2ZXJ0aWNlcyA9IFtcclxuICAgIC8vIHBvc2l0aW9uICsgbm9ybWFsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4yMjc4ODEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjIyNzg4MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCA0LjAyNTA4NywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgNC4wMjUwODcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgMy40OTM0NjUsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjAsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjAsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDEuNzk3ODM5LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAzLjI0NzQwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDEuNzk3ODM5LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMy4yNDc0MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMjI3ODgxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMS43OTc4MzksIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDEuNzk3ODM5LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDEuNzk3ODM5LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgXTtcclxuXHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIGluZGljZXMgPSBbXHJcbiAgICA2OCwgNjQsIDY2LFxyXG4gICAgNjUsIDc0LCA3MixcclxuICAgIDc1LCA3NiwgNzMsXHJcbiAgICA3OSwgNjcsIDc3LFxyXG4gICAgNiwgMCwgMixcclxuICAgIDMsIDUsIDcsXHJcbiAgICA5MSwgODQsIDk0LFxyXG4gICAgOTIsIDkwLCA5NSxcclxuICAgIDgzLCAxMywgODUsXHJcbiAgICA4MCwgMTUsIDg3LFxyXG4gICAgMTIsIDgxLCA4OCxcclxuICAgIDgsIDExLCA5LFxyXG4gICAgMTAwLCA5NiwgOTgsXHJcbiAgICAxMDMsIDEwNCwgOTcsXHJcbiAgICAxMDcsIDEwOCwgMTA1LFxyXG4gICAgMTExLCA5OSwgMTA5LFxyXG4gICAgMjIsIDE2LCAxOCxcclxuICAgIDE5LCAyMSwgMjMsXHJcbiAgICAxMTYsIDExNCwgMTEyLFxyXG4gICAgMTIyLCAxMjQsIDEyMCxcclxuICAgIDEyMywgMTEzLCAxMTUsXHJcbiAgICAxMjcsIDI0LCAxMTksXHJcbiAgICAyOSwgMTE3LCAyNSxcclxuICAgIDMxLCAyNiwgMjcsXHJcbiAgICAxMzIsIDEyOCwgMTMwLFxyXG4gICAgMTM1LCAxMzYsIDEyOSxcclxuICAgIDEzOSwgMTQwLCAxMzcsXHJcbiAgICAxNDMsIDEzMSwgMTQxLFxyXG4gICAgMzgsIDMyLCAzNCxcclxuICAgIDM1LCAzNywgMzksXHJcbiAgICAxNDQsIDE0OCwgMTQ2LFxyXG4gICAgMTUyLCAxNTEsIDE0NSxcclxuICAgIDE1NiwgMTU1LCAxNTMsXHJcbiAgICAxNDcsIDE1OSwgMTU3LFxyXG4gICAgNDAsIDQ2LCA0MixcclxuICAgIDQ1LCA0MywgNDcsXHJcbiAgICAxNjIsIDE2NCwgMTYwLFxyXG4gICAgMTcyLCAxNzAsIDE2OCxcclxuICAgIDE2MSwgMTcxLCAxNjMsXHJcbiAgICA0OCwgMTc1LCAxNjcsXHJcbiAgICAxNjUsIDUzLCA0OSxcclxuICAgIDUwLCA1NSwgNTEsXHJcbiAgICAxNzYsIDE4MCwgMTc4LFxyXG4gICAgMTg0LCAxODMsIDE3NyxcclxuICAgIDE4OCwgMTg3LCAxODUsXHJcbiAgICAxNzksIDE5MSwgMTg5LFxyXG4gICAgNTYsIDYyLCA1OCxcclxuICAgIDYxLCA1OSwgNjMsXHJcbiAgICA2OCwgNzAsIDY0LFxyXG4gICAgNjUsIDcxLCA3NCxcclxuICAgIDc1LCA3OCwgNzYsXHJcbiAgICA3OSwgNjksIDY3LFxyXG4gICAgNiwgNCwgMCxcclxuICAgIDMsIDEsIDUsXHJcbiAgICA5MSwgODYsIDg0LFxyXG4gICAgOTIsIDg5LCA5MCxcclxuICAgIDgzLCA5MywgMTMsXHJcbiAgICA4MCwgODIsIDE1LFxyXG4gICAgMTIsIDE0LCA4MSxcclxuICAgIDgsIDEwLCAxMSxcclxuICAgIDEwMCwgMTAyLCA5NixcclxuICAgIDEwMywgMTA2LCAxMDQsXHJcbiAgICAxMDcsIDExMCwgMTA4LFxyXG4gICAgMTExLCAxMDEsIDk5LFxyXG4gICAgMjIsIDIwLCAxNixcclxuICAgIDE5LCAxNywgMjEsXHJcbiAgICAxMTYsIDExOCwgMTE0LFxyXG4gICAgMTIyLCAxMjYsIDEyNCxcclxuICAgIDEyMywgMTIxLCAxMTMsXHJcbiAgICAxMjcsIDI4LCAyNCxcclxuICAgIDI5LCAxMjUsIDExNyxcclxuICAgIDMxLCAzMCwgMjYsXHJcbiAgICAxMzIsIDEzNCwgMTI4LFxyXG4gICAgMTM1LCAxMzgsIDEzNixcclxuICAgIDEzOSwgMTQyLCAxNDAsXHJcbiAgICAxNDMsIDEzMywgMTMxLFxyXG4gICAgMzgsIDM2LCAzMixcclxuICAgIDM1LCAzMywgMzcsXHJcbiAgICAxNDQsIDE1MCwgMTQ4LFxyXG4gICAgMTUyLCAxNTQsIDE1MSxcclxuICAgIDE1NiwgMTU4LCAxNTUsXHJcbiAgICAxNDcsIDE0OSwgMTU5LFxyXG4gICAgNDAsIDQ0LCA0NixcclxuICAgIDQ1LCA0MSwgNDMsXHJcbiAgICAxNjIsIDE2NiwgMTY0LFxyXG4gICAgMTcyLCAxNzQsIDE3MCxcclxuICAgIDE2MSwgMTY5LCAxNzEsXHJcbiAgICA0OCwgNTIsIDE3NSxcclxuICAgIDE2NSwgMTczLCA1MyxcclxuICAgIDUwLCA1NCwgNTUsXHJcbiAgICAxNzYsIDE4MiwgMTgwLFxyXG4gICAgMTg0LCAxODYsIDE4MyxcclxuICAgIDE4OCwgMTkwLCAxODcsXHJcbiAgICAxNzksIDE4MSwgMTkxLFxyXG4gICAgNTYsIDYwLCA2MixcclxuICAgIDYxLCA1NywgNTksXHJcbiAgXTtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgRmxvb3JNZXNoIHtcclxuICBzdGF0aWMgZ2V0VmVydGljZXMod2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpIHtcclxuICAgIGNvbnN0IHcgPSB3aWR0aCAvIDI7XHJcbiAgICBjb25zdCBoID0gaGVpZ2h0IC8gMjtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBbXHJcbiAgICAgIC8vIHBvc2l0aW9uICsgbm9ybWFsXHJcbiAgICAgICB3LCAtaCwgMC4wLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgICAgdywgIGgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgICAgLXcsIC1oLCAwLjAsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAgIC13LCAgaCwgMC4wLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgXTtcclxuICB9XHJcblxyXG4gIC8vIE9mZnNldCBhbGxvd3MgdXMgdG8gYXBwZW5kIHRoZXNlIHZlcnRpY2VzIHRvIHRoZSBlbmQgb2YgYW4gZXhpc3RpbmcgYnVmZmVyXHJcbiAgc3RhdGljIGdldEluZGljZXMob2Zmc2V0ID0gMCkge1xyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gW1xyXG4gICAgICAxLCAyLCAwLFxyXG4gICAgICAxLCAzLCAyLFxyXG4gICAgXS5tYXAoKHgpID0+IHggKyBvZmZzZXQpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi9JUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBNYXQ0ZiB9IGZyb20gXCIuL01hdDRmXCI7XHJcbmltcG9ydCB7IEFnZW50TWVzaCB9IGZyb20gXCIuL0FnZW50TWVzaFwiO1xyXG5pbXBvcnQgeyBGbG9vck1lc2ggfSBmcm9tIFwiLi9GbG9vck1lc2hcIjtcclxuXHJcbmNvbnN0IHZlcnRleFNoYWRlclRleHQgPSBgXHJcbiAgcHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XHJcbiAgYXR0cmlidXRlIHZlYzMgdmVydFBvc2l0aW9uO1xyXG4gIGF0dHJpYnV0ZSB2ZWMzIHZlcnROb3JtYWw7XHJcbiAgdmFyeWluZyB2ZWMzIGZyYWdDb2xvdXI7XHJcblxyXG4gIHVuaWZvcm0gbWF0NCBwcm9qTWF0O1xyXG4gIHVuaWZvcm0gbWF0NCB2aWV3TWF0O1xyXG4gIHVuaWZvcm0gbWF0NCB3b3JsZE1hdDtcclxuXHJcbiAgdW5pZm9ybSB2ZWMyIHBvc2l0aW9uO1xyXG4gIHVuaWZvcm0gdmVjMiBkaXJlY3Rpb247XHJcbiAgdW5pZm9ybSBmbG9hdCByYWRpdXM7XHJcbiAgdW5pZm9ybSB2ZWMzIGJhc2VDb2xvdXI7XHJcblxyXG4gIHZvaWQgbWFpbigpXHJcbiAge1xyXG4gICAgbWVkaXVtcCB2ZWMzIGFtYmllbnQgPSB2ZWMzKDAuMjYsIDAuMzgsIDAuNDkpO1xyXG4gICAgbWVkaXVtcCB2ZWMzIGxpZ2h0Q29sb3VyID0gdmVjMygxLjAsIDEuMCwgMC44KTtcclxuICAgIG1lZGl1bXAgdmVjMyBsaWdodERpcmVjdGlvbiA9IG5vcm1hbGl6ZSh2ZWMzKC0wLjIsIC0wLjMsIDEuMCkpO1xyXG5cclxuICAgIG1lZGl1bXAgdmVjMyByb3RhdGVkVmVydCA9IHZlYzModmVydFBvc2l0aW9uLnggKiBkaXJlY3Rpb24ueCAtIHZlcnRQb3NpdGlvbi55ICogZGlyZWN0aW9uLnksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnRQb3NpdGlvbi54ICogZGlyZWN0aW9uLnkgKyB2ZXJ0UG9zaXRpb24ueSAqIGRpcmVjdGlvbi54LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0UG9zaXRpb24ueik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgZ2xfUG9zaXRpb24gPSBwcm9qTWF0ICogdmlld01hdCAqIHdvcmxkTWF0ICogdmVjNChyb3RhdGVkVmVydC54ICogcmFkaXVzICsgcG9zaXRpb24ueCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm90YXRlZFZlcnQueSAqIHJhZGl1cyArIHBvc2l0aW9uLnksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZWRWZXJ0LnogKiByYWRpdXMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEuMCk7XHJcbiAgICBcclxuICAgIG1lZGl1bXAgdmVjMyByb3RhdGVkTm9ybWFsID0gdmVjMyh2ZXJ0Tm9ybWFsLnggKiBkaXJlY3Rpb24ueCAtIHZlcnROb3JtYWwueSAqIGRpcmVjdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnROb3JtYWwueCAqIGRpcmVjdGlvbi55ICsgdmVydE5vcm1hbC55ICogZGlyZWN0aW9uLngsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydE5vcm1hbC56KTtcclxuICAgIFxyXG4gICAgbWVkaXVtcCB2ZWMzIGRpcmVjdGlvbmFsID0gbGlnaHRDb2xvdXIgKiBtYXgoZG90KHJvdGF0ZWROb3JtYWwsIGxpZ2h0RGlyZWN0aW9uKSwgMC4wKTtcclxuICAgIGZyYWdDb2xvdXIgPSAoYW1iaWVudCArIGRpcmVjdGlvbmFsKSAqIGJhc2VDb2xvdXI7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgZnJhZ21lbnRTaGFkZXJUZXh0ID0gYFxyXG4gIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG4gIHZhcnlpbmcgdmVjMyBmcmFnQ29sb3VyO1xyXG5cclxuICB2b2lkIG1haW4oKVxyXG4gIHtcclxuICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoZnJhZ0NvbG91ciwgMSk7XHJcbiAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlbmRlcmVyM0QgaW1wbGVtZW50cyBJUmVuZGVyZXIge1xyXG4gIC8vIFJlbmRlcmluZ1xyXG4gIHByaXZhdGUgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuICBwcml2YXRlIGdsOiBXZWJHTFJlbmRlcmluZ0NvbnRleHQ7XHJcbiAgcHJpdmF0ZSBwcm9ncmFtOiBXZWJHTFByb2dyYW07XHJcbiAgcHJpdmF0ZSBWZXJ0ZXhCdWZmZXI6IFdlYkdMQnVmZmVyO1xyXG4gIHByaXZhdGUgSW5kZXhCdWZmZXI6IFdlYkdMQnVmZmVyO1xyXG4gIHByaXZhdGUgcG9zaXRpb25BdHRyaWJ1dGU6IG51bWJlcjtcclxuICBwcml2YXRlIG5vcm1hbEF0dHJpYnV0ZTogbnVtYmVyO1xyXG4gIHByaXZhdGUgcHJvak1hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSB2aWV3TWF0TG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIHdvcmxkTWF0TG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIHBvc1ZlY0xvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBkaXJWZWNMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgcmFkaXVzTG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIGJhc2VDb2xvdXJMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG5cclxuICAvLyBDYW1lcmEgY29udHJvbHNcclxuICBwcml2YXRlIGRyYWc6IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBvbGRYOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBvbGRZOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSB4Um90ID0gMDtcclxuICBwcml2YXRlIHlSb3QgPSAwO1xyXG4gIHByaXZhdGUgY2FtZXJhRGlzdCA9IDgwMDsgLy8gU3RhcnQgY2FtZXJhIDgwMCAncHgnIGF3YXlcclxuXHJcbiAgY29uc3RydWN0b3IoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCkge1xyXG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XHJcblxyXG4gICAgLy8gR2V0IFdlYkdMIGNvbnRleHRcclxuICAgIHRoaXMuZ2wgPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwid2ViZ2xcIik7XHJcblxyXG4gICAgaWYgKCF0aGlzLmdsKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJXZWJHTCBub3Qgc3VwcG9ydGVkXCIpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ29tcGlsZSBzaGFkZXJzXHJcbiAgICBjb25zdCB2ZXJ0ZXhTaGFkZXIgPSB0aGlzLmdsLmNyZWF0ZVNoYWRlcih0aGlzLmdsLlZFUlRFWF9TSEFERVIpO1xyXG4gICAgY29uc3QgZnJhZ21lbnRTaGFkZXIgPSB0aGlzLmdsLmNyZWF0ZVNoYWRlcih0aGlzLmdsLkZSQUdNRU5UX1NIQURFUik7XHJcblxyXG4gICAgdGhpcy5nbC5zaGFkZXJTb3VyY2UodmVydGV4U2hhZGVyLCB2ZXJ0ZXhTaGFkZXJUZXh0KTtcclxuICAgIHRoaXMuZ2wuc2hhZGVyU291cmNlKGZyYWdtZW50U2hhZGVyLCBmcmFnbWVudFNoYWRlclRleHQpO1xyXG5cclxuICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcih2ZXJ0ZXhTaGFkZXIpO1xyXG4gICAgaWYgKCF0aGlzLmdsLmdldFNoYWRlclBhcmFtZXRlcih2ZXJ0ZXhTaGFkZXIsIHRoaXMuZ2wuQ09NUElMRV9TVEFUVVMpKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgXCJFUlJPUiBjb21waWxpbmcgdmVydGV4IHNoYWRlclwiLFxyXG4gICAgICAgIHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyh2ZXJ0ZXhTaGFkZXIpXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmdsLmNvbXBpbGVTaGFkZXIoZnJhZ21lbnRTaGFkZXIpO1xyXG4gICAgaWYgKCF0aGlzLmdsLmdldFNoYWRlclBhcmFtZXRlcihmcmFnbWVudFNoYWRlciwgdGhpcy5nbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBcIkVSUk9SIGNvbXBpbGluZyBmcmFnbWVudCBzaGFkZXJcIixcclxuICAgICAgICB0aGlzLmdsLmdldFNoYWRlckluZm9Mb2coZnJhZ21lbnRTaGFkZXIpXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDcmVhdGUgYW5kIHZhbGlkYXRlIHByb2dyYW1cclxuICAgIHRoaXMucHJvZ3JhbSA9IHRoaXMuZ2wuY3JlYXRlUHJvZ3JhbSgpO1xyXG4gICAgdGhpcy5nbC5hdHRhY2hTaGFkZXIodGhpcy5wcm9ncmFtLCB2ZXJ0ZXhTaGFkZXIpO1xyXG4gICAgdGhpcy5nbC5hdHRhY2hTaGFkZXIodGhpcy5wcm9ncmFtLCBmcmFnbWVudFNoYWRlcik7XHJcbiAgICB0aGlzLmdsLmxpbmtQcm9ncmFtKHRoaXMucHJvZ3JhbSk7XHJcblxyXG4gICAgaWYgKCF0aGlzLmdsLmdldFByb2dyYW1QYXJhbWV0ZXIodGhpcy5wcm9ncmFtLCB0aGlzLmdsLkxJTktfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgbGlua2luZyBwcm9ncmFtXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRQcm9ncmFtSW5mb0xvZyh0aGlzLnByb2dyYW0pXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmdsLnZhbGlkYXRlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xyXG4gICAgaWYgKCF0aGlzLmdsLmdldFByb2dyYW1QYXJhbWV0ZXIodGhpcy5wcm9ncmFtLCB0aGlzLmdsLlZBTElEQVRFX1NUQVRVUykpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBcIkVSUk9SIHZhbGlkYXRpbmcgcHJvZ3JhbVwiLFxyXG4gICAgICAgIHRoaXMuZ2wuZ2V0UHJvZ3JhbUluZm9Mb2codGhpcy5wcm9ncmFtKVxyXG4gICAgICApO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2V0IFdlYkdMIHNldHRpbmdzXHJcbiAgICB0aGlzLmdsLnVzZVByb2dyYW0odGhpcy5wcm9ncmFtKTtcclxuICAgIHRoaXMuZ2wuZW5hYmxlKHRoaXMuZ2wuREVQVEhfVEVTVCk7XHJcbiAgICB0aGlzLmdsLmVuYWJsZSh0aGlzLmdsLkNVTExfRkFDRSk7XHJcbiAgICB0aGlzLmdsLmZyb250RmFjZSh0aGlzLmdsLkNDVyk7XHJcbiAgICB0aGlzLmdsLmN1bGxGYWNlKHRoaXMuZ2wuQkFDSyk7XHJcbiAgICB0aGlzLmdsLmNsZWFyQ29sb3IoMC41MywgMC43NiwgMC45OCwgMS4wKTtcclxuXHJcbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMubW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgdGhpcy5tb3VzZU1vdmUsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLm1vdXNlU2Nyb2xsLCBmYWxzZSk7XHJcblxyXG4gICAgLy8gSW5pdGlhbGlzZSB2ZXJ0ZXggYW5kIGluZGV4IGJ1ZmZlclxyXG4gICAgY29uc3QgdmVydGljZXMgPSBuZXcgRmxvYXQzMkFycmF5KFxyXG4gICAgICBBZ2VudE1lc2gudmVydGljZXMuY29uY2F0KFxyXG4gICAgICAgIEZsb29yTWVzaC5nZXRWZXJ0aWNlcyhjYW52YXMud2lkdGggKiAxLjEsIGNhbnZhcy5oZWlnaHQgKiAxLjEpXHJcbiAgICAgIClcclxuICAgICk7XHJcbiAgICB0aGlzLlZlcnRleEJ1ZmZlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XHJcbiAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIHRoaXMuVmVydGV4QnVmZmVyKTtcclxuICAgIHRoaXMuZ2wuYnVmZmVyRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgdmVydGljZXMsIHRoaXMuZ2wuU1RBVElDX0RSQVcpO1xyXG5cclxuICAgIGNvbnN0IGluZGljZXMgPSBuZXcgVWludDE2QXJyYXkoXHJcbiAgICAgIEFnZW50TWVzaC5pbmRpY2VzLmNvbmNhdChcclxuICAgICAgICBGbG9vck1lc2guZ2V0SW5kaWNlcyhBZ2VudE1lc2gudmVydGljZXMubGVuZ3RoIC8gNilcclxuICAgICAgKVxyXG4gICAgKTtcclxuICAgIHRoaXMuSW5kZXhCdWZmZXIgPSB0aGlzLmdsLmNyZWF0ZUJ1ZmZlcigpO1xyXG4gICAgdGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIHRoaXMuSW5kZXhCdWZmZXIpO1xyXG4gICAgdGhpcy5nbC5idWZmZXJEYXRhKFxyXG4gICAgICB0aGlzLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLFxyXG4gICAgICBpbmRpY2VzLFxyXG4gICAgICB0aGlzLmdsLlNUQVRJQ19EUkFXXHJcbiAgICApO1xyXG5cclxuICAgIC8vIEdldCBhdHRyaWJ1dGUgbG9jYXRpb25zXHJcbiAgICB0aGlzLnBvc2l0aW9uQXR0cmlidXRlID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbihcclxuICAgICAgdGhpcy5wcm9ncmFtLFxyXG4gICAgICBcInZlcnRQb3NpdGlvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihcclxuICAgICAgdGhpcy5wb3NpdGlvbkF0dHJpYnV0ZSxcclxuICAgICAgMyxcclxuICAgICAgdGhpcy5nbC5GTE9BVCxcclxuICAgICAgZmFsc2UsXHJcbiAgICAgIDYgKiBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQsXHJcbiAgICAgIDBcclxuICAgICk7XHJcbiAgICB0aGlzLmdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHRoaXMucG9zaXRpb25BdHRyaWJ1dGUpO1xyXG5cclxuICAgIHRoaXMubm9ybWFsQXR0cmlidXRlID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbihcclxuICAgICAgdGhpcy5wcm9ncmFtLFxyXG4gICAgICBcInZlcnROb3JtYWxcIlxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLmdsLnZlcnRleEF0dHJpYlBvaW50ZXIoXHJcbiAgICAgIHRoaXMubm9ybWFsQXR0cmlidXRlLFxyXG4gICAgICAzLFxyXG4gICAgICB0aGlzLmdsLkZMT0FULFxyXG4gICAgICBmYWxzZSxcclxuICAgICAgNiAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCxcclxuICAgICAgMyAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxyXG4gICAgKTtcclxuICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGhpcy5ub3JtYWxBdHRyaWJ1dGUpO1xyXG5cclxuICAgIC8vIEdldCB1bmlmb3JtIGxvY2F0aW9uc1xyXG4gICAgdGhpcy5wcm9qTWF0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInByb2pNYXRcIik7XHJcbiAgICB0aGlzLnZpZXdNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwidmlld01hdFwiKTtcclxuICAgIHRoaXMud29ybGRNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwid29ybGRNYXRcIik7XHJcbiAgICB0aGlzLnBvc1ZlY0xvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJwb3NpdGlvblwiKTtcclxuICAgIHRoaXMuZGlyVmVjTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImRpcmVjdGlvblwiKTtcclxuICAgIHRoaXMucmFkaXVzTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInJhZGl1c1wiKTtcclxuICAgIHRoaXMuYmFzZUNvbG91ckxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJiYXNlQ29sb3VyXCIpO1xyXG5cclxuICAgIC8vIFNldCB1cCBtYXRyaWNlc1xyXG4gICAgY29uc3QgcHJvamVjdGlvbk1hdHJpeCA9IE1hdDRmLmdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgICAgNDUgKiAoTWF0aC5QSSAvIDE4MCksIC8vIDQ1ZGVnIHktYXhpcyBGT1ZcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmNhbnZhcy5oZWlnaHQsXHJcbiAgICAgIDAuMSxcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ICsgMjAwMFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB2aWV3TWF0cml4ID0gTWF0NGYuZ2V0VHJhbnNsYXRpb25NYXRyaXgoMCwgMCwgLXRoaXMuY2FtZXJhRGlzdCk7IC8vIE1vdmUgY2FtZXJhIGJhY2sgb24geiBheGlzXHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLmdldElkZW50aXR5TWF0cml4KCk7XHJcblxyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMudmlld01hdExvYywgZmFsc2UsIHZpZXdNYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMud29ybGRNYXRMb2MsIGZhbHNlLCB3b3JsZE1hdHJpeCk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoc2ltdWxhdGlvbjogU2ltdWxhdGlvbik6IHZvaWQge1xyXG4gICAgY29uc3QgYWdlbnRzID0gc2ltdWxhdGlvbi5nZXRBZ2VudHMoKTtcclxuXHJcbiAgICAvLyBDbGVhciBiYWNrZ3JvdW5kXHJcbiAgICB0aGlzLmdsLmNsZWFyKHRoaXMuZ2wuQ09MT1JfQlVGRkVSX0JJVCB8IHRoaXMuZ2wuREVQVEhfQlVGRkVSX0JJVCk7XHJcblxyXG4gICAgLy8gRHJhdyBhZ2VudHNcclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICAvLyBQb3NpdGlvblxyXG4gICAgICBjb25zdCBwb3MgPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLnBvc1ZlY0xvYywgcG9zLngsIHBvcy55KTtcclxuXHJcbiAgICAgIC8vIERpcmVjdGlvblxyXG4gICAgICBsZXQgZGlyID0gYWdlbnQuZ2V0RGlyZWN0aW9uKCkubm9ybWFsaXNlKCk7XHJcbiAgICAgIGlmIChkaXIueCA9PSAwICYmIGRpci55ID09IDApIHtcclxuICAgICAgICBkaXIgPSBuZXcgVmVjdG9yMmYoMSwgMCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5kaXJWZWNMb2MsIGRpci54LCBkaXIueSk7XHJcblxyXG4gICAgICAvLyBSYWRpdXNcclxuICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5yYWRpdXNMb2MsIGFnZW50LlJhZGl1cyk7XHJcblxyXG4gICAgICAvLyBCYXNlIGNvbG91clxyXG4gICAgICBjb25zdCBjb2xvciA9IGFnZW50LmdldENvbG91cigpO1xyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0zZihcclxuICAgICAgICB0aGlzLmJhc2VDb2xvdXJMb2MsXHJcbiAgICAgICAgY29sb3IuciAvIDI1NSxcclxuICAgICAgICBjb2xvci5nIC8gMjU1LFxyXG4gICAgICAgIGNvbG9yLmIgLyAyNTVcclxuICAgICAgKTtcclxuXHJcbiAgICAgIC8vIERyYXcgbWVzaFxyXG4gICAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgICBBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGgsXHJcbiAgICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgICAwXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBEcmF3IGZsb29yXHJcbiAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLnBvc1ZlY0xvYywgMCwgMCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLmRpclZlY0xvYywgMSwgMCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLnJhZGl1c0xvYywgMSk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0zZih0aGlzLmJhc2VDb2xvdXJMb2MsIDAuMiwgMC4yLCAwLjIpO1xyXG5cclxuICAgIHRoaXMuZ2wuZHJhd0VsZW1lbnRzKFxyXG4gICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgNixcclxuICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgQWdlbnRNZXNoLmluZGljZXMubGVuZ3RoICogVWludDE2QXJyYXkuQllURVNfUEVSX0VMRU1FTlRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG1vdXNlRG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gdHJ1ZTtcclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VVcCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gZmFsc2U7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHRoaXMueFJvdCArPSAoKGV2ZW50LnBhZ2VYIC0gdGhpcy5vbGRYKSAqIDIgKiBNYXRoLlBJKSAvIHRoaXMuY2FudmFzLndpZHRoO1xyXG4gICAgdGhpcy55Um90ICs9ICgoZXZlbnQucGFnZVkgLSB0aGlzLm9sZFkpICogMiAqIE1hdGguUEkpIC8gdGhpcy5jYW52YXMuaGVpZ2h0O1xyXG4gICAgdGhpcy5vbGRYID0gZXZlbnQucGFnZVg7XHJcbiAgICB0aGlzLm9sZFkgPSBldmVudC5wYWdlWTtcclxuXHJcbiAgICAvLyBDbGFtcCBZIHJvdGF0aW9uXHJcbiAgICBpZiAodGhpcy55Um90ID4gMCkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnlSb3QgPCAtTWF0aC5QSSkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAtTWF0aC5QSTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB4Um90TWF0ID0gTWF0NGYuZ2V0WlJvdGF0aW9uTWF0cml4KHRoaXMueFJvdCk7XHJcbiAgICBjb25zdCB5Um90TWF0ID0gTWF0NGYuZ2V0WFJvdGF0aW9uTWF0cml4KHRoaXMueVJvdCk7XHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLm11bHRpcGx5TWF0cmljZXMoeFJvdE1hdCwgeVJvdE1hdCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy53b3JsZE1hdExvYywgZmFsc2UsIHdvcmxkTWF0cml4KTtcclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VTY3JvbGwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcclxuICAgIHRoaXMuY2FtZXJhRGlzdCArPSBldmVudC5kZWx0YVk7XHJcbiAgICBpZiAodGhpcy5jYW1lcmFEaXN0IDwgMCkge1xyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHZpZXdNYXRyaXggPSBNYXQ0Zi5nZXRUcmFuc2xhdGlvbk1hdHJpeCgwLCAwLCAtdGhpcy5jYW1lcmFEaXN0KTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDRmdih0aGlzLnZpZXdNYXRMb2MsIGZhbHNlLCB2aWV3TWF0cml4KTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0aW9uTWF0cml4ID0gTWF0NGYuZ2V0UGVyc3BlY3RpdmVQcm9qZWN0aW9uTWF0cml4KFxyXG4gICAgICA0NSAqIChNYXRoLlBJIC8gMTgwKSwgLy8gNDVkZWcgeS1heGlzIEZPVlxyXG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIHRoaXMuY2FudmFzLmhlaWdodCxcclxuICAgICAgMC4xLFxyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgKyAyMDAwXHJcbiAgICApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG5cclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxufVxyXG4iLCJpbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4vSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcblxyXG5pbnRlcmZhY2UgTm9kZSB7XHJcbiAgYWdlbnQ6IEFnZW50O1xyXG4gIGxlZnQ6IE5vZGU7XHJcbiAgcmlnaHQ6IE5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBZ2VudFRyZWUgaW1wbGVtZW50cyBJQWdlbnRDb2xsZWN0aW9uIHtcclxuICBwcml2YXRlIF9hZ2VudHM6IEFnZW50W107XHJcbiAgcHJpdmF0ZSBfcm9vdDogTm9kZTtcclxuXHJcbiAgaW5pdChhZ2VudHM6IEFnZW50W10pOiB2b2lkIHtcclxuICAgIHRoaXMuX2FnZW50cyA9IGFnZW50cztcclxuICAgIHRoaXMuX3Jvb3QgPSB0aGlzLmNvbnN0cnVjdFRyZWUodGhpcy5fYWdlbnRzLCB0cnVlKTtcclxuICB9XHJcblxyXG4gIGdldEFsbCgpOiBBZ2VudFtdIHtcclxuICAgIHJldHVybiB0aGlzLl9hZ2VudHM7XHJcbiAgfVxyXG5cclxuICBnZXROZWlnaGJvdXJzSW5SYW5nZVJlY3RpbGluZWFyKGFnZW50OiBBZ2VudCwgcmFuZ2U6IG51bWJlcik6IEFnZW50W10ge1xyXG4gICAgbGV0IG1pblggPSBhZ2VudC5nZXRQb3NpdGlvbigpLnggLSByYW5nZTtcclxuICAgIGxldCBtaW5ZID0gYWdlbnQuZ2V0UG9zaXRpb24oKS55IC0gcmFuZ2U7XHJcbiAgICBsZXQgbWF4WCA9IGFnZW50LmdldFBvc2l0aW9uKCkueCArIHJhbmdlO1xyXG4gICAgbGV0IG1heFkgPSBhZ2VudC5nZXRQb3NpdGlvbigpLnkgKyByYW5nZTtcclxuXHJcbiAgICBsZXQgY2FuZGlkYXRlcyA9IHRoaXMucmFuZ2VTZWFyY2godGhpcy5fcm9vdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgdHJ1ZSk7XHJcbiAgICByZXR1cm4gY2FuZGlkYXRlcy5maWx0ZXIoKG90aGVyKSA9PiBvdGhlci5JZCAhPT0gYWdlbnQuSWQpO1xyXG4gIH1cclxuXHJcbiAgZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4oYWdlbnQ6IEFnZW50LCByYW5nZTogbnVtYmVyKTogQWdlbnRbXSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlcyA9IHRoaXMuZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhcihhZ2VudCwgcmFuZ2UpO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZXMuZmlsdGVyKFxyXG4gICAgICAob3RoZXIpID0+XHJcbiAgICAgICAgYWdlbnQuZ2V0UG9zaXRpb24oKS5zdWJ0cmFjdChvdGhlci5nZXRQb3NpdGlvbigpKS5tYWduaXR1ZGVTcXJkKCkgPD1cclxuICAgICAgICByYW5nZSAqKiAyXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgZm9yRWFjaChmdW46IChhZ2VudDogQWdlbnQpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgIHRoaXMuX2FnZW50cy5mb3JFYWNoKGZ1bik7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNvbnN0cnVjdFRyZWUoYWdlbnRzOiBBZ2VudFtdLCB4QXhpczogYm9vbGVhbik6IE5vZGUge1xyXG4gICAgaWYgKGFnZW50cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IG1pZCA9IE1hdGguZmxvb3IoYWdlbnRzLmxlbmd0aCAvIDIpO1xyXG5cclxuICAgIGxldCBzb3J0ZWQgPSB4QXhpc1xyXG4gICAgICA/IGFnZW50cy5zb3J0KChhLCBiKSA9PiBhLmdldFBvc2l0aW9uKCkueCAtIGIuZ2V0UG9zaXRpb24oKS54KVxyXG4gICAgICA6IGFnZW50cy5zb3J0KChhLCBiKSA9PiBhLmdldFBvc2l0aW9uKCkueSAtIGIuZ2V0UG9zaXRpb24oKS55KTtcclxuXHJcbiAgICBsZXQgbGVmdCA9IHRoaXMuY29uc3RydWN0VHJlZShzb3J0ZWQuc2xpY2UoMCwgbWlkKSwgIXhBeGlzKTtcclxuICAgIGxldCByaWdodCA9IHRoaXMuY29uc3RydWN0VHJlZShcclxuICAgICAgc29ydGVkLnNsaWNlKG1pZCArIDEsIGFnZW50cy5sZW5ndGgpLFxyXG4gICAgICAheEF4aXNcclxuICAgICk7XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnQ6IGFnZW50c1ttaWRdLCBsZWZ0OiBsZWZ0LCByaWdodDogcmlnaHQgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcmFuZ2VTZWFyY2goXHJcbiAgICByb290OiBOb2RlLFxyXG4gICAgbWluWDogbnVtYmVyLFxyXG4gICAgbWluWTogbnVtYmVyLFxyXG4gICAgbWF4WDogbnVtYmVyLFxyXG4gICAgbWF4WTogbnVtYmVyLFxyXG4gICAgeEF4aXM6IGJvb2xlYW5cclxuICApOiBBZ2VudFtdIHtcclxuICAgIGlmIChyb290ID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByZXM6IEFnZW50W10gPSBbXTtcclxuICAgIGlmICh4QXhpcykge1xyXG4gICAgICAvLyBJZiB4IDw9IG1heFggbmVlZCB0byBjaGVjayByaWdodCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueCA8PSBtYXhYKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5yaWdodCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIElmIHggPj0gbWluWCBuZWVkIHRvIGNoZWNrIGxlZnQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPj0gbWluWCkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QubGVmdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIElmIHkgPD0gbWF4WSBuZWVkIHRvIGNoZWNrIHJpZ2h0IHN1YnRyZWVcclxuICAgICAgaWYgKHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS55IDw9IG1heFkpIHtcclxuICAgICAgICByZXMgPSByZXMuY29uY2F0KFxyXG4gICAgICAgICAgdGhpcy5yYW5nZVNlYXJjaChyb290LnJpZ2h0LCBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZLCAheEF4aXMpXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gSWYgeSA+PSBtaW5ZIG5lZWQgdG8gY2hlY2sgbGVmdCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA+PSBtaW5ZKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5sZWZ0LCBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZLCAheEF4aXMpXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIHRoZSBhZ2VudCBpcyBpbiByYW5nZSByYW5nZSBhZGQgdG8gdGhlIHJlc3VsdFxyXG4gICAgaWYgKFxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueCA+PSBtaW5YICYmXHJcbiAgICAgIHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS55ID49IG1pblkgJiZcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPD0gbWF4WCAmJlxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA8PSBtYXhZXHJcbiAgICApIHtcclxuICAgICAgcmVzLnB1c2gocm9vdC5hZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQ29sb3VyIH0gZnJvbSBcIi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vVmVjdG9yMmZcIjtcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBZ2VudCB7XHJcbiAgcmVhZG9ubHkgUmFkaXVzOiBudW1iZXI7XHJcbiAgcmVhZG9ubHkgSWQ6IG51bWJlcjtcclxuXHJcbiAgcHJvdGVjdGVkIF9wb3NpdGlvbjogVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9kaXJlY3Rpb246IFZlY3RvcjJmO1xyXG4gIHByb3RlY3RlZCBfZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmO1xyXG4gIHByb3RlY3RlZCBfaXNEb25lOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGlkOiBudW1iZXIsXHJcbiAgICBzdGFydFBvc2l0aW9uOiBWZWN0b3IyZixcclxuICAgIGdldFByZWZlcnJlZFZlbG9jaXR5OiAocG9zaXRpb246IFZlY3RvcjJmKSA9PiBWZWN0b3IyZlxyXG4gICkge1xyXG4gICAgdGhpcy5JZCA9IGlkO1xyXG4gICAgdGhpcy5SYWRpdXMgPSAyMDtcclxuXHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb247XHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcbiAgICB0aGlzLl9nZXRQcmVmZXJyZWRWZWxvY2l0eSA9IGdldFByZWZlcnJlZFZlbG9jaXR5O1xyXG4gICAgdGhpcy5faXNEb25lID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBnZXRQb3NpdGlvbigpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gdGhpcy5fcG9zaXRpb247XHJcbiAgfVxyXG5cclxuICBnZXREaXJlY3Rpb24oKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIHRoaXMuX2RpcmVjdGlvbjtcclxuICB9XHJcblxyXG4gIGlzRG9uZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9pc0RvbmU7XHJcbiAgfVxyXG5cclxuICBhYnN0cmFjdCBnZXRDb2xvdXIoKTogQ29sb3VyO1xyXG4gIGFic3RyYWN0IHVwZGF0ZShkZWx0YVQ6IG51bWJlciwgbmVpZ2hib3VyczogQWdlbnRbXSk6IHZvaWQ7XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIENvbG91ciB7XHJcbiAgcjogbnVtYmVyO1xyXG4gIGc6IG51bWJlcjtcclxuICBiOiBudW1iZXI7XHJcblxyXG4gIHN0YXRpYyBXaGl0ZTogQ29sb3VyID0ge1xyXG4gICAgcjogMjU1LFxyXG4gICAgZzogMjU1LFxyXG4gICAgYjogMjU1LFxyXG4gIH07XHJcblxyXG4gIHN0YXRpYyBSZWQ6IENvbG91ciA9IHtcclxuICAgIHI6IDI1NSxcclxuICAgIGc6IDAsXHJcbiAgICBiOiAwLFxyXG4gIH07XHJcblxyXG4gIHN0YXRpYyBHcmVlbjogQ29sb3VyID0ge1xyXG4gICAgcjogMCxcclxuICAgIGc6IDI1NSxcclxuICAgIGI6IDAsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIEZyb21Ic3YoaDogbnVtYmVyLCBzOiBudW1iZXIsIHY6IG51bWJlcik6IENvbG91ciB7XHJcbiAgICAvLyBhc3N1bWluZyBoc3YgdmFsdWVzIGluIHJhbmdlIDAtMVxyXG4gICAgaCAqPSA2O1xyXG5cclxuICAgIGNvbnN0IGZyYWN0ID0gaCAtIE1hdGguZmxvb3IoaCk7XHJcbiAgICBjb25zdCBQID0gdiAqICgxIC0gcyk7XHJcbiAgICBjb25zdCBRID0gdiAqICgxIC0gcyAqIGZyYWN0KTtcclxuICAgIGNvbnN0IFQgPSB2ICogKDEgLSBzICogKDEgLSBmcmFjdCkpO1xyXG5cclxuICAgIGlmICgwIDw9IGggJiYgaCA8IDEpIHtcclxuICAgICAgcmV0dXJuIHsgcjogdiAqIDI1NSwgZzogVCAqIDI1NSwgYjogUCAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIGlmICgxIDw9IGggJiYgaCA8IDIpIHtcclxuICAgICAgcmV0dXJuIHsgcjogUSAqIDI1NSwgZzogdiAqIDI1NSwgYjogUCAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIGlmICgyIDw9IGggJiYgaCA8IDMpIHtcclxuICAgICAgcmV0dXJuIHsgcjogUCAqIDI1NSwgZzogdiAqIDI1NSwgYjogVCAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIGlmICgzIDw9IGggJiYgaCA8IDQpIHtcclxuICAgICAgcmV0dXJuIHsgcjogUCAqIDI1NSwgZzogUSAqIDI1NSwgYjogdiAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIGlmICg0IDw9IGggJiYgaCA8IDUpIHtcclxuICAgICAgcmV0dXJuIHsgcjogVCAqIDI1NSwgZzogUCAqIDI1NSwgYjogdiAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIGlmICg1IDw9IGggJiYgaCA8IDYpIHtcclxuICAgICAgcmV0dXJuIHsgcjogdiAqIDI1NSwgZzogUCAqIDI1NSwgYjogUSAqIDI1NSB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIHsgcjogMCwgZzogMCwgYjogMCB9O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBDb2xvdXIgfSBmcm9tIFwiLi4vQ29sb3VyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQmFzaWNBZ2VudCBleHRlbmRzIEFnZW50IHtcclxuICBnZXRDb2xvdXIoKSB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuV2hpdGU7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gQ29sb3VyLkdyZWVuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCBfbmVpZ2hib3VyczogQWdlbnRbXSk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2lzRG9uZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcHJlZmVycmVkVmVsb2NpdHkgPSB0aGlzLl9nZXRQcmVmZXJyZWRWZWxvY2l0eSh0aGlzLl9wb3NpdGlvbik7XHJcbiAgICBjb25zdCBzdGVwU2l6ZSA9IChkZWx0YVQgKiA2MCkgLyAzMDAwO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIGRvbmVcclxuICAgIGlmIChwcmVmZXJyZWRWZWxvY2l0eS5tYWduaXR1ZGVTcXJkKCkgPCAwLjEpIHtcclxuICAgICAgdGhpcy5faXNEb25lID0gdHJ1ZTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFN0ZXAgdG93YXJkcyBnb2FsXHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSBwcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHByZWZlcnJlZFZlbG9jaXR5Lm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuLi9Db2xvdXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTdG9wQWdlbnQgZXh0ZW5kcyBBZ2VudCB7XHJcbiAgcHJpdmF0ZSBfaXNTdHVjazogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBpZDogbnVtYmVyLFxyXG4gICAgc3RhcnRQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmZcclxuICApIHtcclxuICAgIHN1cGVyKGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICB0aGlzLl9pc1N0dWNrID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBnZXRDb2xvdXIoKTogQ29sb3VyIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5XaGl0ZTtcclxuICAgIH0gZWxzZSBpZiAodGhpcy5faXNTdHVjaykge1xyXG4gICAgICByZXR1cm4gQ29sb3VyLlJlZDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuR3JlZW47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGFUOiBudW1iZXIsIG5laWdoYm91cnM6IEFnZW50W10pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZlcnJlZFZlbG9jaXR5ID0gdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkodGhpcy5fcG9zaXRpb24pO1xyXG4gICAgY29uc3Qgc3RlcFNpemUgPSAoZGVsdGFUICogNjApIC8gMzAwMDtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBkb25lXHJcbiAgICBpZiAocHJlZmVycmVkVmVsb2NpdHkubWFnbml0dWRlU3FyZCgpIDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuX2lzRG9uZSA9IHRydWU7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSBwcmVmZXJyZWRWZWxvY2l0eS5ub3JtYWxpc2UoKTtcclxuICAgIGNvbnN0IGhlYWRpbmcgPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KDI1KSk7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgc3R1Y2tcclxuICAgIHRoaXMuX2lzU3R1Y2sgPSBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAodGhpcy5jb2xsaWRlcyhuZWlnaGJvdXJzW2ldLCBoZWFkaW5nKSkge1xyXG4gICAgICAgIHRoaXMuX2lzU3R1Y2sgPSB0cnVlO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFN0ZXAgdG93YXJkcyBnb2FsXHJcbiAgICB0aGlzLl9kaXJlY3Rpb24gPSBwcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gIH1cclxuXHJcbiAgY29sbGlkZXMoYWdlbnQ6IEFnZW50LCBwb3NpdGlvbjogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGFnZW50LmdldFBvc2l0aW9uKCkuc3VidHJhY3QocG9zaXRpb24pLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgIChhZ2VudC5SYWRpdXMgKyB0aGlzLlJhZGl1cykgKiAoYWdlbnQuUmFkaXVzICsgdGhpcy5SYWRpdXMpXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgR2VvbWV0cnkge1xyXG4gIHN0YXRpYyBnZXRDbG9zZXN0UG9pbnRPbkxpbmUoXHJcbiAgICBsaW5lUG9pbnQ6IFZlY3RvcjJmLFxyXG4gICAgbGluZURpcmVjdGlvbjogVmVjdG9yMmYsXHJcbiAgICBwb2ludDogVmVjdG9yMmZcclxuICApOiBWZWN0b3IyZiB7XHJcbiAgICBjb25zdCBkaXJlY3Rpb24gPSBsaW5lRGlyZWN0aW9uLm5vcm1hbGlzZSgpO1xyXG4gICAgY29uc3QgdmVjdG9yID0gcG9pbnQuc3VidHJhY3QobGluZVBvaW50KTtcclxuICAgIGNvbnN0IGRpc3RhbmNlID0gdmVjdG9yLmRvdChkaXJlY3Rpb24pO1xyXG5cclxuICAgIHJldHVybiBsaW5lUG9pbnQuYWRkKGRpcmVjdGlvbi5tdWx0aXBseShkaXN0YW5jZSkpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uKFxyXG4gICAgY2VudHJlOiBWZWN0b3IyZixcclxuICAgIHJhZGl1czogbnVtYmVyLFxyXG4gICAgb3JpZ2luOiBWZWN0b3IyZixcclxuICAgIGRpcmVjdGlvbjogVmVjdG9yMmZcclxuICApOiBudW1iZXIge1xyXG4gICAgY29uc3QgZGVsdGEgPSBvcmlnaW4uc3VidHJhY3QoY2VudHJlKTtcclxuXHJcbiAgICBjb25zdCBhID0gZGlyZWN0aW9uLmRvdChkaXJlY3Rpb24pO1xyXG4gICAgY29uc3QgYiA9IDIgKiBkaXJlY3Rpb24uZG90KGRlbHRhKTtcclxuICAgIGNvbnN0IGMgPSBkZWx0YS5kb3QoZGVsdGEpIC0gcmFkaXVzICoqIDI7XHJcblxyXG4gICAgY29uc3QgZGlzY3JpbSA9IGIgKiogMiAtIDQgKiBhICogYztcclxuXHJcbiAgICBpZiAoZGlzY3JpbSA8IDApIHtcclxuICAgICAgLy8gTm8gaW50ZXJzZWN0aW9uXHJcbiAgICAgIHJldHVybiBJbmZpbml0eTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkaXN0YW5jZSA9ICgoLWIgLSBNYXRoLnNxcnQoZGlzY3JpbSkpIC8gMikgKiBhO1xyXG5cclxuICAgIGlmIChkaXN0YW5jZSA8IDApIHtcclxuICAgICAgLy8gSW50ZXJzZWN0aW9uIGJlaGluZFxyXG4gICAgICByZXR1cm4gSW5maW5pdHk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGRpc3RhbmNlO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldExpbmVMaW5lSW50ZXJzZWN0aW9uKFxyXG4gICAgcG9pbnQxOiBWZWN0b3IyZixcclxuICAgIGRpcmVjdGlvbjE6IFZlY3RvcjJmLFxyXG4gICAgcG9pbnQyOiBWZWN0b3IyZixcclxuICAgIGRpcmVjdGlvbjI6IFZlY3RvcjJmXHJcbiAgKTogVmVjdG9yMmYge1xyXG4gICAgY29uc3QgZGlmZiA9IHBvaW50Mi5zdWJ0cmFjdChwb2ludDEpO1xyXG4gICAgY29uc3QgZGV0ID0gZGlyZWN0aW9uMi54ICogZGlyZWN0aW9uMS55IC0gZGlyZWN0aW9uMi55ICogZGlyZWN0aW9uMS54O1xyXG4gICAgY29uc3QgdCA9IChkaWZmLnkgKiBkaXJlY3Rpb24yLnggLSBkaWZmLnkgKiBkaXJlY3Rpb24yLnkpIC8gZGV0O1xyXG5cclxuICAgIHJldHVybiBwb2ludDEuYWRkKGRpcmVjdGlvbjEubXVsdGlwbHkodCkpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgdmVydGV4OiBWZWN0b3IyZjtcclxuICB0YW5nZW50MTogVmVjdG9yMmY7XHJcbiAgdGFuZ2VudDI6IFZlY3RvcjJmO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih2ZXJ0ZXg6IFZlY3RvcjJmLCB0YW5nZW50MTogVmVjdG9yMmYsIHRhbmdlbnQyOiBWZWN0b3IyZikge1xyXG4gICAgdGhpcy52ZXJ0ZXggPSB2ZXJ0ZXg7XHJcbiAgICB0aGlzLnRhbmdlbnQxID0gdGFuZ2VudDE7XHJcbiAgICB0aGlzLnRhbmdlbnQyID0gdGFuZ2VudDI7XHJcbiAgfVxyXG5cclxuICBjb250YWlucyh2ZWxvY2l0eTogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIC8vIEZpcnN0IGhhbGYtcGxhbmVcclxuICAgIGNvbnN0IGRldGVybWluYW50MSA9XHJcbiAgICAgICh0aGlzLnRhbmdlbnQxLnggLSB0aGlzLnZlcnRleC54KSAqICh2ZWxvY2l0eS55IC0gdGhpcy52ZXJ0ZXgueSkgLVxyXG4gICAgICAodGhpcy50YW5nZW50MS55IC0gdGhpcy52ZXJ0ZXgueSkgKiAodmVsb2NpdHkueCAtIHRoaXMudmVydGV4LngpO1xyXG5cclxuICAgIC8vIFNlY29uZCBoYWxmLXBsYW5lXHJcbiAgICBjb25zdCBkZXRlcm1pbmFudDIgPVxyXG4gICAgICAodGhpcy50YW5nZW50Mi54IC0gdGhpcy52ZXJ0ZXgueCkgKiAodmVsb2NpdHkueSAtIHRoaXMudmVydGV4LnkpIC1cclxuICAgICAgKHRoaXMudGFuZ2VudDIueSAtIHRoaXMudmVydGV4LnkpICogKHZlbG9jaXR5LnggLSB0aGlzLnZlcnRleC54KTtcclxuXHJcbiAgICByZXR1cm4gZGV0ZXJtaW5hbnQxID4gMCAmJiBkZXRlcm1pbmFudDIgPCAwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBDb2xvdXIgfSBmcm9tIFwiLi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL0dlb21ldHJ5XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFZPQWdlbnQgZXh0ZW5kcyBBZ2VudCB7XHJcbiAgcHJpdmF0ZSBfY29sb3VyOiBDb2xvdXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgdGhpcy5fY29sb3VyID0gQ29sb3VyLkdyZWVuO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29sb3VyKCk6IENvbG91ciB7XHJcbiAgICByZXR1cm4gdGhpcy5fY29sb3VyO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCBuZWlnaGJvdXJzOiBBZ2VudFtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVmZXJyZWRWZWxvY2l0eSA9IHRoaXMuX2dldFByZWZlcnJlZFZlbG9jaXR5KHRoaXMuX3Bvc2l0aW9uKTtcclxuICAgIGNvbnN0IHN0ZXBTaXplID0gKGRlbHRhVCAqIDYwKSAvIDQwMDA7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgZG9uZVxyXG4gICAgaWYgKHByZWZlcnJlZFZlbG9jaXR5Lm1hZ25pdHVkZVNxcmQoKSA8IDAuMSkge1xyXG4gICAgICB0aGlzLl9pc0RvbmUgPSB0cnVlO1xyXG4gICAgICB0aGlzLl9kaXJlY3Rpb24gPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcbiAgICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5XaGl0ZTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBzYWZlID0gdHJ1ZTtcclxuICAgIGxldCBjb2xsaXNpb247XHJcbiAgICBsZXQgYWdlbnQ7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIC8vIENoZWNrIHdoZXRoZXIgcHJlZmVycmVkIHZlbG9jaXR5IGlzIHNhZmVcclxuICAgICAgY29uc3QgdmVsb2NpdHlPYnN0YWNsZSA9IHRoaXMuZ2V0VmVsb2NpdHlPYnN0YWNsZShuZWlnaGJvdXJzW2ldKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJlxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocHJlZmVycmVkVmVsb2NpdHkpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHNhZmUgPSBmYWxzZTtcclxuICAgICAgICBjb2xsaXNpb24gPSB2ZWxvY2l0eU9ic3RhY2xlO1xyXG4gICAgICAgIGFnZW50ID0gaTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIHByZWZlcnJlZCB2ZWxvY2l0eSBpcyBzYWZlLCBnbyBpbiB0aGF0IGRpcmVjdGlvblxyXG4gICAgaWYgKHNhZmUpIHtcclxuICAgICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gICAgICB0aGlzLl9jb2xvdXIgPSBDb2xvdXIuR3JlZW47XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiBub3QsIHRyeSBjbG9zZXN0IHBvaW50IG9uIGxlZnQgYW5kIHJpZ2h0IGVkZ2Ugb2YgY29uZVxyXG4gICAgaWYgKGNvbGxpc2lvbiAhPSBudWxsKSB7XHJcbiAgICAgIGNvbnN0IGxlZnQgPSBHZW9tZXRyeS5nZXRDbG9zZXN0UG9pbnRPbkxpbmUoXHJcbiAgICAgICAgY29sbGlzaW9uLnZlcnRleCxcclxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudDEsXHJcbiAgICAgICAgcHJlZmVycmVkVmVsb2NpdHlcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGNvbnN0IHJpZ2h0ID0gR2VvbWV0cnkuZ2V0Q2xvc2VzdFBvaW50T25MaW5lKFxyXG4gICAgICAgIGNvbGxpc2lvbi52ZXJ0ZXgsXHJcbiAgICAgICAgY29sbGlzaW9uLnRhbmdlbnQyLFxyXG4gICAgICAgIHByZWZlcnJlZFZlbG9jaXR5XHJcbiAgICAgICk7XHJcblxyXG4gICAgICBsZXQgbGVmdFNhZmUgPSB0cnVlO1xyXG4gICAgICBsZXQgcmlnaHRTYWZlID0gdHJ1ZTtcclxuXHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmIChpICE9IGFnZW50KSB7XHJcbiAgICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gdGhpcy5nZXRWZWxvY2l0eU9ic3RhY2xlKG5laWdoYm91cnNbaV0pO1xyXG4gICAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJiB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKGxlZnQpKSB7XHJcbiAgICAgICAgICAgIGxlZnRTYWZlID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSAhPSBudWxsICYmIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMobGVmdCkpIHtcclxuICAgICAgICAgICAgcmlnaHRTYWZlID0gZmFsc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobGVmdFNhZmUgJiYgcmlnaHRTYWZlKSB7XHJcbiAgICAgICAgLy8gSWYgYm90aCBhcmUgc2FmZSB0YWtlIGNsb3Nlc3QgdG8gcHJlZmVycmVkIHZlbG9jaXR5XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgbGVmdC5zdWJ0cmFjdChwcmVmZXJyZWRWZWxvY2l0eSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgIHJpZ2h0LnN1YnRyYWN0KHByZWZlcnJlZFZlbG9jaXR5KS5tYWduaXR1ZGVTcXJkKClcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IGxlZnQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChsZWZ0U2FmZSkge1xyXG4gICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IGxlZnQ7XHJcbiAgICAgIH0gZWxzZSBpZiAocmlnaHRTYWZlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlyZWN0aW9uID0gcmlnaHQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChsZWZ0U2FmZSB8fCByaWdodFNhZmUpIHtcclxuICAgICAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZCh0aGlzLl9kaXJlY3Rpb24ubXVsdGlwbHkoc3RlcFNpemUpKTtcclxuICAgICAgICB0aGlzLnNldENvbG91cihwcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRWxzZSwgc2FtcGxlIHJhbmRvbSB2ZWxvY2l0aWVzIGFuZCBzZWxlY3QgdGhlIG9uZSB3aXRoIHRoZSBsZWFzdCBwZW5hbHR5XHJcbiAgICBjb25zdCBzYW1wbGVzID0gMTAwOyAvLyBudW1iZXIgb2YgdmVsb2NpdGllcyB0byB0cnlcclxuICAgIGNvbnN0IHcgPSAxMDA7IC8vIHBhcmFtZXRlciBmb3IgcGVuYWx0eVxyXG4gICAgbGV0IG1pblBlbmFsdHkgPSBJbmZpbml0eTtcclxuICAgIGxldCBiZXN0VmVsb2NpdHkgPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzYW1wbGVzOyBpKyspIHtcclxuICAgICAgLy8gU2FtcGxlIHZlbG9jaXR5IGZyb20gZW50aXJlIGFsbG93ZWQgdmVsb2NpdHkgc3BhY2VcclxuICAgICAgY29uc3Qgc2FtcGxlID0gbmV3IFZlY3RvcjJmKDAsIDApLnNhbXBsZSgxKTtcclxuICAgICAgbGV0IG1pblRpbWVUb0NvbGxpc2lvbiA9IEluZmluaXR5O1xyXG5cclxuICAgICAgLy8gRmluZCB0aW1lIHRvIGZpcnN0IGNvbGxpc2lvblxyXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG5laWdoYm91cnMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICBjb25zdCBiID0gbmVpZ2hib3Vyc1tqXTtcclxuICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gdGhpcy5nZXRWZWxvY2l0eU9ic3RhY2xlKGIpO1xyXG5cclxuICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSA9PSBudWxsIHx8IHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMoc2FtcGxlKSkge1xyXG4gICAgICAgICAgY29uc3QgdGltZVRvQ29sbGlzaW9uID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgIGIuZ2V0UG9zaXRpb24oKS5hZGQoYi5nZXREaXJlY3Rpb24oKSksXHJcbiAgICAgICAgICAgIHRoaXMuUmFkaXVzICsgYi5SYWRpdXMsXHJcbiAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uLFxyXG4gICAgICAgICAgICBzYW1wbGUuc3VidHJhY3QoYi5nZXREaXJlY3Rpb24oKSlcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgaWYgKHRpbWVUb0NvbGxpc2lvbiA8IG1pblRpbWVUb0NvbGxpc2lvbikge1xyXG4gICAgICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSB0aW1lVG9Db2xsaXNpb247XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBDYWxjdWxhdGUgcGVuYWx0eVxyXG4gICAgICBjb25zdCBwZW5hbHR5ID1cclxuICAgICAgICB3IC8gbWluVGltZVRvQ29sbGlzaW9uICsgcHJlZmVycmVkVmVsb2NpdHkuc3VidHJhY3Qoc2FtcGxlKS5tYWduaXR1ZGUoKTsgLy8gVFMgY29ycmVjdGx5IGhhbmRsZXMgZGl2aWRlIGJ5IHplcm8gb3IgaW5maW5pdHlcclxuXHJcbiAgICAgIGlmIChwZW5hbHR5IDwgbWluUGVuYWx0eSkge1xyXG4gICAgICAgIG1pblBlbmFsdHkgPSBwZW5hbHR5O1xyXG4gICAgICAgIGJlc3RWZWxvY2l0eSA9IHNhbXBsZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGJlc3RWZWxvY2l0eTtcclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gICAgdGhpcy5zZXRDb2xvdXIocHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldFZlbG9jaXR5T2JzdGFjbGUoYjogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHwgbnVsbCB7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBiLmdldERpcmVjdGlvbigpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIFJldHVybiB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlbG9jaXR5QiwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCBzZXRDb2xvdXIocHJlZmVycmVkVmVsb2NpdHk6IFZlY3RvcjJmKSB7XHJcbiAgICBjb25zdCBzdHJlc3MgPSBwcmVmZXJyZWRWZWxvY2l0eS5zdWJ0cmFjdCh0aGlzLl9kaXJlY3Rpb24pLm1hZ25pdHVkZSgpO1xyXG4gICAgY29uc3QgaHVlID0gc3RyZXNzID4gMSA/IDAgOiAoMSAtIHN0cmVzcykgLyAzO1xyXG4gICAgdGhpcy5fY29sb3VyID0gQ29sb3VyLkZyb21Ic3YoaHVlLCAxLCAxKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL1ZPQWdlbnRcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUlZPQWdlbnQgZXh0ZW5kcyBWT0FnZW50IHtcclxuICAvLyBPdmVycmlkZSBnZXRWZWxvY2l0eU9ic3RhY2xlIHRvIHByb2R1Y2UgUmVjaXByb2NhbCBWZWxvY2l0eSBPYnN0YWNsZVxyXG4gIHByb3RlY3RlZCBnZXRWZWxvY2l0eU9ic3RhY2xlKGI6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB8IG51bGwge1xyXG4gICAgY29uc3QgdmVsb2NpdHlBID0gdGhpcy5nZXREaXJlY3Rpb24oKTtcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IGIuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZXJ0ZXggPSB2ZWxvY2l0eUEuYWRkKHZlbG9jaXR5QikuZGl2aWRlKDIpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIFJldHVybiB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlcnRleCwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL1ZPQWdlbnRcIjtcclxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vR2VvbWV0cnlcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSFJWT0FnZW50IGV4dGVuZHMgVk9BZ2VudCB7XHJcbiAgLy8gT3ZlcnJpZGUgZ2V0VmVsb2NpdHlPYnN0YWNsZSB0byBwcm9kdWNlIEh5YnJpZCBSZWNpcHJvY2FsIFZlbG9jaXR5IE9ic3RhY2xlXHJcbiAgcHJvdGVjdGVkIGdldFZlbG9jaXR5T2JzdGFjbGUoYjogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHwgbnVsbCB7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUEgPSB0aGlzLmdldERpcmVjdGlvbigpO1xyXG4gICAgY29uc3QgdmVsb2NpdHlCID0gYi5nZXREaXJlY3Rpb24oKTtcclxuXHJcbiAgICAvLyBHZXQgcmVzcGVjdGl2ZSB2ZXJ0aWNlc1xyXG4gICAgY29uc3Qgdm9WZXJ0ZXggPSB2ZWxvY2l0eUI7XHJcbiAgICBjb25zdCBydm9WZXJ0ZXggPSB2ZWxvY2l0eUEuYWRkKHZlbG9jaXR5QikuZGl2aWRlKDIpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIENoZWNrIHdoaWNoIHNpZGUgdG8gcGFzcyBvblxyXG4gICAgY29uc3Qgc2lkZSA9XHJcbiAgICAgIChwb3NpdGlvbkIueCAtIHZlbG9jaXR5Qi54KSAqICh2ZWxvY2l0eUEueSAtIHZlbG9jaXR5Qi55KSAtXHJcbiAgICAgIChwb3NpdGlvbkIueSAtIHZlbG9jaXR5Qi55KSAqICh2ZWxvY2l0eUEueCAtIHZlbG9jaXR5Qi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdmVydGV4IGFzIGludGVyc2VjdGlvbiBvZiBWTyBhbmQgUlZPIGNvbmVcclxuICAgIGxldCB2ZXJ0ZXg7XHJcbiAgICBpZiAoc2lkZSA+IDApIHtcclxuICAgICAgLy8gXCJMZWZ0XCJcclxuICAgICAgdmVydGV4ID0gR2VvbWV0cnkuZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgdm9WZXJ0ZXgsXHJcbiAgICAgICAgdGFuZ2VudDEsXHJcbiAgICAgICAgcnZvVmVydGV4LFxyXG4gICAgICAgIHRhbmdlbnQyXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBcIlJpZ2h0XCJcclxuICAgICAgdmVydGV4ID0gR2VvbWV0cnkuZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgdm9WZXJ0ZXgsXHJcbiAgICAgICAgdGFuZ2VudDIsXHJcbiAgICAgICAgcnZvVmVydGV4LFxyXG4gICAgICAgIHRhbmdlbnQxXHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIGh5YnJpZCByZWNpcHJpY29sIHZlbG9jaXR5IG9ic3RhY2xlXHJcbiAgICByZXR1cm4gbmV3IFZlbG9jaXR5T2JzdGFjbGUodmVydGV4LCB0YW5nZW50MSwgdGFuZ2VudDIpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgQmFzaWNBZ2VudCB9IGZyb20gXCIuL2FnZW50cy9CYXNpY0FnZW50XCI7XHJcbmltcG9ydCB7IFN0b3BBZ2VudCB9IGZyb20gXCIuL2FnZW50cy9TdG9wQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL2FnZW50cy9WT0FnZW50XCI7XHJcbmltcG9ydCB7IFJWT0FnZW50IH0gZnJvbSBcIi4vYWdlbnRzL1JWT0FnZW50XCI7XHJcbmltcG9ydCB7IEhSVk9BZ2VudCB9IGZyb20gXCIuL2FnZW50cy9IUlZPQWdlbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBZ2VudEZhY3Rvcnkge1xyXG4gIHN0YXRpYyBnZXRBZ2VudChcclxuICAgIHR5cGU6IHN0cmluZyxcclxuICAgIGlkOiBudW1iZXIsXHJcbiAgICBzdGFydFBvc2l0aW9uOiBWZWN0b3IyZixcclxuICAgIGdldFByZWZlcnJlZFZlbG9jaXR5OiAocG9zaXRpb246IFZlY3RvcjJmKSA9PiBWZWN0b3IyZlxyXG4gICk6IEFnZW50IHtcclxuICAgIHN3aXRjaCAodHlwZSkge1xyXG4gICAgICBjYXNlIFwiQmFzaWNBZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgQmFzaWNBZ2VudChpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICBjYXNlIFwiU3RvcEFnZW50XCI6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBTdG9wQWdlbnQoaWQsIHN0YXJ0UG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgY2FzZSBcIlZPQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IFZPQWdlbnQoaWQsIHN0YXJ0UG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgY2FzZSBcIlJWT0FnZW50XCI6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBSVk9BZ2VudChpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICBjYXNlIFwiSFJWT0FnZW50XCI6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBIUlZPQWdlbnQoaWQsIHN0YXJ0UG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gYWdlbnQgdHlwZSBcXFwiJHt0eXBlfVxcXCJgKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBBZ2VudEZhY3RvcnkgfSBmcm9tIFwiLi9BZ2VudEZhY3RvcnlcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRpb25GYWN0b3J5IHtcclxuICBzdGF0aWMgZ2V0Q29uZmlndXJhdGlvbihcclxuICAgIHR5cGU6IHN0cmluZyxcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IEFnZW50W10ge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgIGNhc2UgXCJSYW5kb21Ub1JhbmRvbVwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLlJhbmRvbVRvUmFuZG9tKGFnZW50VHlwZSwgd2lkdGgsIGhlaWdodCwgbnVtYmVyT2ZBZ2VudHMpO1xyXG4gICAgICBjYXNlIFwiUmFuZG9tVG9MaW5lXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuUmFuZG9tVG9MaW5lKGFnZW50VHlwZSwgd2lkdGgsIGhlaWdodCwgbnVtYmVyT2ZBZ2VudHMpO1xyXG4gICAgICBjYXNlIFwiQ2lyY2xlVG9DaXJjbGVcIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5DaXJjbGVUb0NpcmNsZShhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkdyaWRUb0dyaWRcIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5HcmlkVG9HcmlkKGFnZW50VHlwZSwgd2lkdGgsIGhlaWdodCwgbnVtYmVyT2ZBZ2VudHMpO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb25maWd1cmF0aW9uIHR5cGUgXFxcIiR7dHlwZX1cXFwiYCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBSYW5kb21Ub1JhbmRvbShcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IEFnZW50W10ge1xyXG4gICAgLy8gUmFuZG9tIHN0YXJ0IHBvc2l0aW9uIHRvIHJhbmRvbSBnb2FsIHBvc2l0aW9uXHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoLFxyXG4gICAgICBoZWlnaHQsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA1MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMikpKTtcclxuXHJcbiAgICBjb25zdCBnb2FsUG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGgsXHJcbiAgICAgIGhlaWdodCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDUwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyKSkpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihnb2FsUG9zaXRpb25zW2ldKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGFnZW50cztcclxuICB9XHJcblxyXG4gIHN0YXRpYyBSYW5kb21Ub0xpbmUoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApIHtcclxuICAgIC8vIFJhbmRvbSBzdGFydCBwb3NpdGlvbiB0byBmaXhlZCBwb3NpdGlvbiBvbiBsaW5lXHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBsZXQgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgNTBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKSk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgbmV3IFZlY3RvcjJmKCgoaSArIDEpIC8gKG51bWJlck9mQWdlbnRzICsgMSkgLSAxIC8gMikgKiB3aWR0aCwgMClcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIENpcmNsZVRvQ2lyY2xlKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICBfd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICkge1xyXG4gICAgLy8gUG9zaXRpb24gb24gcmFkaXVzIG9mIGNpcmNsZSB0byBvcHBvc2l0ZSBwb2ludFxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3QgcmFkaXVzID0gaGVpZ2h0IC8gMiAtIDI1O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhbmdsZSA9ICgyICogTWF0aC5QSSAqIGkpIC8gbnVtYmVyT2ZBZ2VudHM7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIG5ldyBWZWN0b3IyZihyYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSksIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKSksXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICBuZXcgVmVjdG9yMmYoXHJcbiAgICAgICAgICAgIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlICsgTWF0aC5QSSksXHJcbiAgICAgICAgICAgIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlICsgTWF0aC5QSSlcclxuICAgICAgICAgIClcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIEdyaWRUb0dyaWQoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBfaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKSB7XHJcbiAgICAvLyBUd28gb3Bwb3NpbmcgZ3JpZHMgb2YgYWdlbnRzIHBhc3NpbmcgdGhyb3VnaCBlYWNob3RoZXJcclxuICAgIGxldCBhZ2VudHM6IEFnZW50W10gPSBbXTtcclxuICAgIGNvbnN0IGdyaWRTaXplID0gTWF0aC5jZWlsKE1hdGguc3FydChudW1iZXJPZkFnZW50cyAvIDIpKTtcclxuICAgIGNvbnN0IG9mZnNldCA9IDkwO1xyXG4gICAgbGV0IHggPSAzMCAtIHdpZHRoIC8gMjtcclxuICAgIGxldCB5ID0gKChncmlkU2l6ZSAtIDEpIC8gMikgKiBvZmZzZXQ7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGlkeCA9IE1hdGguZmxvb3IoaSAvIDIpO1xyXG4gICAgICBjb25zdCByb3cgPSBNYXRoLmZsb29yKGlkeCAvIGdyaWRTaXplKTtcclxuICAgICAgY29uc3QgY29sID0gaWR4ICUgZ3JpZFNpemU7XHJcblxyXG4gICAgICBpZiAoaSAlIDIgPT0gMCkge1xyXG4gICAgICAgIC8vIExIU1xyXG4gICAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgICAgaSxcclxuICAgICAgICAgIG5ldyBWZWN0b3IyZih4ICsgKGdyaWRTaXplIC0gMSAtIGNvbCkgKiBvZmZzZXQsIHkgLSByb3cgKiBvZmZzZXQpLFxyXG4gICAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICAgIG5ldyBWZWN0b3IyZigteCAtIGNvbCAqIG9mZnNldCwgeSAtIHJvdyAqIG9mZnNldClcclxuICAgICAgICAgIClcclxuICAgICAgICApO1xyXG4gICAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBSSFNcclxuICAgICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICAgIGksXHJcbiAgICAgICAgICBuZXcgVmVjdG9yMmYoLXggLSAoZ3JpZFNpemUgLSAxIC0gY29sKSAqIG9mZnNldCwgeSAtIHJvdyAqIG9mZnNldCksXHJcbiAgICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgICAgbmV3IFZlY3RvcjJmKHggKyBjb2wgKiBvZmZzZXQsIHkgLSByb3cgKiBvZmZzZXQpXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgKTtcclxuICAgICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgcHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgZ29hbFBvc2l0aW9uOiBWZWN0b3IyZlxyXG4gICk6IChwb3M6IFZlY3RvcjJmKSA9PiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gKHBvcykgPT4ge1xyXG4gICAgICBjb25zdCBnb2FsRGlyZWN0aW9uID0gZ29hbFBvc2l0aW9uLnN1YnRyYWN0KHBvcyk7XHJcbiAgICAgIGlmIChnb2FsRGlyZWN0aW9uLm1hZ25pdHVkZVNxcmQoKSA8IDEpIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbi5ub3JtYWxpc2UoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIHBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgeFJhbmdlOiBudW1iZXIsXHJcbiAgICB5UmFuZ2U6IG51bWJlcixcclxuICAgIG46IG51bWJlcixcclxuICAgIHRocmVzaG9sZDogbnVtYmVyXHJcbiAgKTogVmVjdG9yMmZbXSB7XHJcbiAgICBsZXQgc2FtcGxlczogVmVjdG9yMmZbXSA9IFtdO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgIGxldCByZXNhbXBsZSA9IHRydWU7XHJcbiAgICAgIGxldCBwb3M6IFZlY3RvcjJmO1xyXG5cclxuICAgICAgd2hpbGUgKHJlc2FtcGxlKSB7XHJcbiAgICAgICAgcmVzYW1wbGUgPSBmYWxzZTtcclxuICAgICAgICBwb3MgPSBuZXcgVmVjdG9yMmYoeFJhbmdlICogTWF0aC5yYW5kb20oKSwgeVJhbmdlICogTWF0aC5yYW5kb20oKSk7XHJcblxyXG4gICAgICAgIHNhbXBsZXMuZm9yRWFjaCgoc2FtcGxlKSA9PiB7XHJcbiAgICAgICAgICBpZiAocG9zLnN1YnRyYWN0KHNhbXBsZSkubWFnbml0dWRlU3FyZCgpIDwgdGhyZXNob2xkICoqIDIpIHtcclxuICAgICAgICAgICAgcmVzYW1wbGUgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzYW1wbGVzLnB1c2gocG9zKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2FtcGxlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4vSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFJlbmRlcmVyMkQgfSBmcm9tIFwiLi9SZW5kZXJlcjJEXCI7XHJcbmltcG9ydCB7IFJlbmRlcmVyM0QgfSBmcm9tIFwiLi9SZW5kZXJlcjNEXCI7XHJcbmltcG9ydCB7IEFnZW50VHJlZSB9IGZyb20gXCIuL0FnZW50VHJlZVwiO1xyXG5pbXBvcnQgeyBDb25maWd1cmF0aW9uRmFjdG9yeSB9IGZyb20gXCIuL0NvbmZpZ3VyYXRpb25GYWN0b3J5XCI7XHJcblxyXG5jb25zdCBjb25maWdTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbmZpZ1wiKSBhcyBIVE1MU2VsZWN0RWxlbWVudDtcclxuY29uc3QgYWdlbnRUeXBlU2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJhZ2VudFR5cGVcIlxyXG4pIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xyXG5jb25zdCBudW1iZXJPZkFnZW50c0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJudW1iZXJPZkFnZW50c1wiXHJcbikgYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHJcbmNvbnN0IGNhbnZhczJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXMyZFwiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuY29uc3QgY2FudmFzM2QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhczNkXCIpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xyXG5jb25zdCBmcmFtZXJhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZyYW1lcmF0ZVwiKSBhcyBIVE1MUGFyYWdyYXBoRWxlbWVudDtcclxuY29uc3QgcGxheUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheUJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuY29uc3Qgc3RlcEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RlcEJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuXHJcbmNvbnN0IHNpbXVsYXRpb24gPSBuZXcgU2ltdWxhdGlvbihuZXcgQWdlbnRUcmVlKCkpO1xyXG5jb25zdCByZW5kZXJlcjJkID0gbmV3IFJlbmRlcmVyMkQoY2FudmFzMmQpO1xyXG5jb25zdCByZW5kZXJlcjNkID0gbmV3IFJlbmRlcmVyM0QoY2FudmFzM2QpO1xyXG52YXIgcmVuZGVyZXI6IElSZW5kZXJlciA9IHJlbmRlcmVyMmQ7XHJcbnZhciBwbGF5ID0gZmFsc2U7XHJcblxyXG4vLyBJbml0aWFsaXNlIHNpbXVsYXRpb24gYW5kIGJlZ2luIHVwZGF0ZS9yZW5kZXIgbG9vcFxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcclxuICB0aGlzLnJlY29uZmlndXJlKCk7XHJcblxyXG4gIGxldCBsYXN0UmVuZGVyID0gMDtcclxuICBsZXQgbGFzdEZQUyA9IDA7XHJcbiAgbGV0IGZyYW1lcyA9IDA7XHJcblxyXG4gIGZ1bmN0aW9uIGxvb3AodGltZXN0YW1wOiBudW1iZXIpIHtcclxuICAgIGxldCBkZWx0YVQgPSB0aW1lc3RhbXAgLSBsYXN0UmVuZGVyO1xyXG4gICAgbGFzdFJlbmRlciA9IHRpbWVzdGFtcDtcclxuXHJcbiAgICAvLyBVcGRhdGVcclxuICAgIGlmIChwbGF5KSB7XHJcbiAgICAgIHNpbXVsYXRpb24udXBkYXRlKGRlbHRhVCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmVuZGVyXHJcbiAgICByZW5kZXJlci5yZW5kZXIoc2ltdWxhdGlvbik7XHJcbiAgICBmcmFtZXMrKztcclxuXHJcbiAgICAvLyByZWNhbGN1bGF0ZSBmcmFtZXJhdGUgZXZlcnkgMjUwbXNcclxuICAgIGlmICh0aW1lc3RhbXAgLSBsYXN0RlBTID49IDI1MCkge1xyXG4gICAgICBmcmFtZXJhdGUudGV4dENvbnRlbnQgPSBgRlBTOiAkeyhcclxuICAgICAgICAoMTAwMCAqIGZyYW1lcykgL1xyXG4gICAgICAgICh0aW1lc3RhbXAgLSBsYXN0RlBTKVxyXG4gICAgICApLnRvRml4ZWQoMSl9YDtcclxuXHJcbiAgICAgIGZyYW1lcyA9IDA7XHJcbiAgICAgIGxhc3RGUFMgPSB0aW1lc3RhbXA7XHJcbiAgICB9XHJcblxyXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcclxuICB9XHJcblxyXG4gIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XHJcbn1cclxuXHJcbi8vIFN3aXRjaCB2aWV3XHJcbmV4cG9ydCBmdW5jdGlvbiBzd2l0Y2hWaWV3KHZpZXc6IHN0cmluZykge1xyXG4gIHN3aXRjaCAodmlldykge1xyXG4gICAgY2FzZSBcIjJEXCI6XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzJkXCIpLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3M2RcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyMmQ7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgIGNhbnZhczNkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgY2FzZSBcIjNEXCI6XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzJkXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3M2RcIikuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyM2Q7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzM2Quc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHZpZXcgXFxcIiR7dmlld31cXFwiYCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBUb2dnbGUgcGxheS9wYXVzZVxyXG5leHBvcnQgZnVuY3Rpb24gcGxheVBhdXNlKCkge1xyXG4gIHBsYXkgPSAhcGxheTtcclxuXHJcbiAgaWYgKHBsYXkpIHtcclxuICAgIHBsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlBhdXNlXCI7XHJcbiAgICBzdGVwQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgcGxheUJ1dHRvbi50ZXh0Q29udGVudCA9IFwiUGxheVwiO1xyXG4gICAgc3RlcEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuLy8gc3RlcCBzaW11bGF0aW9uIGJ5IDEgZnJhbWVcclxuZXhwb3J0IGZ1bmN0aW9uIHN0ZXAoKSB7XHJcbiAgc2ltdWxhdGlvbi51cGRhdGUoMTAwMCAvIDYwKTsgLy8gQXNzdW1lcyA2MEZQU1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVjb25maWd1cmUoKSB7XHJcbiAgaWYgKHBsYXkpIHtcclxuICAgIHRoaXMucGxheVBhdXNlKCk7XHJcbiAgfVxyXG5cclxuICBjb25zdCBjb25maWcgPSBjb25maWdTZWxlY3QudmFsdWU7XHJcbiAgY29uc3QgYWdlbnRUeXBlID0gYWdlbnRUeXBlU2VsZWN0LnZhbHVlO1xyXG4gIGNvbnN0IG51bWJlck9mQWdlbnRzID0gcGFyc2VJbnQobnVtYmVyT2ZBZ2VudHNJbnB1dC52YWx1ZSkgPz8gMDtcclxuXHJcbiAgc2ltdWxhdGlvbi5pbml0KFxyXG4gICAgQ29uZmlndXJhdGlvbkZhY3RvcnkuZ2V0Q29uZmlndXJhdGlvbihcclxuICAgICAgY29uZmlnLFxyXG4gICAgICBhZ2VudFR5cGUsXHJcbiAgICAgIGNhbnZhczJkLndpZHRoLFxyXG4gICAgICBjYW52YXMyZC5oZWlnaHQsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzXHJcbiAgICApXHJcbiAgKTtcclxufVxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDMxOSk7XG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=