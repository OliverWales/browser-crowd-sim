var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={249:(t,e,n)=>{n.r(e),n.d(e,{init:()=>$,playPause:()=>et,reconfigure:()=>it,step:()=>nt,switchView:()=>tt});var i,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._done=!1,this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var n=this;this._agents.forEach((function(i){i.update(t,n._agents.getNeighboursInRangeEuclidean(i,Math.min(e,i.getDistanceToGoal()+i.Radius)),n._obstacles)})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t.prototype.isDone=function(){if(this._done)return!0;var t=!0;return this._agents.forEach((function(e){t&&(t=e.isDone())})),this._done=t,this._done},t}(),r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.toString=function(){return"("+this.x+", "+this.y+")"},t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var n=Math.sqrt(Math.random())*e,i=2*Math.PI*Math.random();return new t(this.x+n*Math.cos(i),this.y+n*Math.sin(i))},t.prototype.isLeftOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)>0},t.prototype.isRightOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)<0},t}(),s=function(){function t(t,e,n){this.vertex=t,this.tangent1=e,this.tangent2=n}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),n=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&n<0},t}(),a=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){var e=new r(0,0),n=this.Position.subtract(t.getPosition()),i=this.Radius+t.Radius,o=e.subtract(n),a=o.magnitude();if(a<i)return null;var c=Math.acos(i/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(n.x+i*Math.cos(h),n.y+i*Math.sin(h)),g=u-c,d=new r(n.x+i*Math.cos(g),n.y+i*Math.sin(g));return new s(e,l,d)},t}(),c=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){var e=this.pointVelocityObstacle(t,this.Start),n=this.pointVelocityObstacle(t,this.End);if(null==e&&null==n)return null;if(null==e)return n;if(null==n)return e;var i=e.tangent1;e.tangent2.isLeftOf(i)&&(i=e.tangent2),n.tangent1.isLeftOf(i)&&(i=n.tangent1),n.tangent2.isLeftOf(i)&&(i=n.tangent2);var o=e.tangent1;return e.tangent2.isRightOf(o)&&(o=e.tangent2),n.tangent1.isRightOf(o)&&(o=n.tangent1),n.tangent2.isRightOf(o)&&(o=n.tangent2),new s(new r(0,0),i,o)},t.prototype.pointVelocityObstacle=function(t,e){var n=new r(0,0),i=e.subtract(t.getPosition()),o=t.Radius,a=n.subtract(i),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),h=Math.atan2(a.y,a.x),l=h+u,g=new r(i.x+o*Math.cos(l),i.y+o*Math.sin(l)),d=h-u,f=new r(i.x+o*Math.cos(d),i.y+o*Math.sin(d));return new s(n,g,f)},t}(),u=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.init=function(t){},t.prototype.render=function(t){var e=this,n=800/this.cameraDist,i=t.getAgents(),o=t.getObstacles();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(n,0,0,n,this.xPan,this.yPan),this.context.strokeStyle="white",this.context.lineWidth=2,o.forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)})),i.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),n=t.getDirection(),i=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=n.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(n.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),h=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([1,0,0,0,0,n,e,0,0,-e,n,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([n,0,-e,0,0,1,0,0,e,0,n,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),n=Math.cos(t);return new Float32Array([n,e,0,0,-e,n,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,n){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,n,1])},t.getPerspectiveProjectionMatrix=function(t,e,n,i){var o=1/Math.tan(t/2),r=1/(n-i);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(n+i)*r,-1,0,0,n*i*r*2,0])},t.multiplyMatrices=function(t,e){for(var n=new Float32Array(16),i=0;i<4;i++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*i+s]*e[4*s+o];n[4*i+o]=r}return n},t}(),l=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),g=function(){function t(){}return t.getVertices=function(t,e){var n=t/2,i=e/2;return[n,-i,0,0,0,1,n,i,0,0,0,1,-n,-i,0,0,0,1,-n,i,0,0,0,1]},t.indices=[1,2,0,1,3,2],t}(),d=function(){function t(){}return t.vertices=[-.92388,-.382683,1,-.9239,-.3827,0,-.92388,-.382683,0,-.9239,-.3827,0,-.707107,-.707107,1,-.7071,-.7071,0,-.707107,-.707107,0,-.7071,-.7071,0,-.382684,-.923879,1,-0,0,1,-.382684,-.923879,0,-.3827,-.9239,0,-0,-1,1,-0,0,1,-0,-1,0,0,-1,0,.382684,-.92388,1,-0,0,1,.382684,-.92388,0,.3827,-.9239,0,.707107,-.707107,1,-0,0,1,.707107,-.707107,0,.7071,-.7071,0,.92388,-.382683,1,-0,0,1,.92388,-.382683,0,.9239,-.3827,0,1,0,1,-0,0,1,1,0,0,1,0,0,.92388,.382683,1,-0,0,1,.92388,.382683,0,.9239,.3827,0,.707107,.707107,1,-0,0,1,.707107,.707107,0,.7071,.7071,0,.382684,.92388,1,-0,0,1,.382684,.92388,0,.3827,.9239,0,0,1,1,-0,0,1,0,1,0,0,1,0,-.382683,.92388,1,-0,0,1,-.382683,.92388,0,-.3827,.9239,0,-.707107,.707107,1,-0,0,1,-.707107,.707107,0,-.7071,.7071,0,-.92388,.382683,1,-0,0,1,-.92388,.382683,0,-.9239,.3827,0,-1,0,1,-0,0,1,-1,0,0,-1,0,0,.707107,.707107,1,.7071,.7071,0,.382684,.92388,1,.3827,.9239,0,-.92388,-.382683,1,-0,0,1,-.707107,-.707107,1,-0,0,1,0,1,1,0,1,0,-.382684,-.923879,1,-.3827,-.9239,0,-0,-1,1,0,-1,0,-.382683,.92388,1,-.3827,.9239,0,-.707107,.707107,1,-.7071,.7071,0,.707107,-.707107,1,.7071,-.7071,0,.92388,-.382683,1,.9239,-.3827,0,-.92388,.382683,1,-.9239,.3827,0,-1,0,1,-1,0,0,.92388,.382683,1,.9239,.3827,0,.382684,-.92388,1,.3827,-.9239,0,1,0,1,1,0,0],t.indices=[26,35,10,18,20,22,22,24,18,24,26,18,26,28,30,30,34,35,35,4,6,6,8,10,10,12,18,12,14,18,14,16,18,26,30,35,35,6,10,18,26,10,39,23,25,40,25,27,43,27,29,44,29,31,36,21,23,33,19,21,32,17,19,45,15,17,47,13,15,42,11,13,41,9,11,46,7,9,38,5,7,37,3,5,2,1,3,0,31,1,39,36,23,40,39,25,43,40,27,44,43,29,36,33,21,33,32,19,32,45,17,45,47,15,47,42,13,42,41,11,41,46,9,46,38,7,38,37,5,37,2,3,2,0,1,0,44,31],t}(),f=function(){function t(){}return t.getVertices=function(t){var e=t.Start.subtract(t.End),n=new r(-e.y,e.x).normalise();return[t.Start.x,t.Start.y,0,n.x,n.y,0,t.End.x,t.End.y,0,n.x,n.y,0,t.Start.x,t.Start.y,1,n.x,n.y,0,t.End.x,t.End.y,1,n.x,n.y,0,t.Start.x,t.Start.y,0,-n.x,-n.y,0,t.End.x,t.End.y,0,-n.x,-n.y,0,t.Start.x,t.Start.y,1,-n.x,-n.y,0,t.End.x,t.End.y,1,-n.x,-n.y,0]},t.indices=[1,2,0,1,3,2,5,4,6,5,6,7],t}(),p=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var n=h.getZRotationMatrix(e.xRot),i=h.getXRotationMatrix(e.yRot),o=h.multiplyMatrices(n,i);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var n=h.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,n);var i=h.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,i),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var n=this.gl.createShader(this.gl.VERTEX_SHADER),i=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(n,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform float height;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * height,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(i,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,n),this.gl.attachShader(this.program,i),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.clearColor(.53,.76,.98,1),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1}),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.heightLoc=this.gl.getUniformLocation(this.program,"height"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var o=h.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),r=h.getTranslationMatrix(0,0,-this.cameraDist),s=h.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,o),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,r),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,s)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(i));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(n))}else console.error("WebGL not supported")}return t.prototype.init=function(t){var e=g.getVertices(5220,2660),n=t.getObstacles().filter((function(t){return t instanceof c})).map((function(t){return t})),i=n.map((function(t){return f.getVertices(t)})).reduce((function(t,e){return t.concat(e)}),[]),o=new Float32Array(l.vertices.concat(d.vertices).concat(e).concat(i));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=l.vertices.length/6,s=r+d.vertices.length/6,a=s+e.length/6,u=n.map((function(t,e){return f.indices.map((function(t){return t+a+8*e}))})).reduce((function(t,e){return t.concat(e)}),[]),h=new Uint16Array(l.indices.concat(d.indices.map((function(t){return t+r}))).concat(g.indices.map((function(t){return t+s}))).concat(u));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute)},t.prototype.render=function(t){var e=this,n=t.getAgents(),i=t.getObstacles();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),n.forEach((function(t){var n=t.getPosition();e.gl.uniform2f(e.posVecLoc,n.x,n.y);var i=t.getDirection().normalise();0==i.x&&0==i.y&&(i=new r(1,0)),e.gl.uniform2f(e.dirVecLoc,i.x,i.y),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,l.indices.length,e.gl.UNSIGNED_SHORT,0)}));var o=0;i.forEach((function(t){t instanceof a?(e.gl.uniform2f(e.posVecLoc,t.Position.x,t.Position.y),e.gl.uniform2f(e.dirVecLoc,1,0),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,84),e.gl.uniform3f(e.baseColourLoc,1,1,1),e.gl.drawElements(e.gl.TRIANGLES,d.indices.length,e.gl.UNSIGNED_SHORT,l.indices.length*Uint16Array.BYTES_PER_ELEMENT)):o++})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,g.indices.length,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length)*Uint16Array.BYTES_PER_ELEMENT),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,84),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,f.indices.length*o,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length+g.indices.length)*Uint16Array.BYTES_PER_ELEMENT)},t}(),m=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var n=t.getPosition().x-e,i=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,n,i,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(n){return t.getPosition().subtract(n.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var n=Math.floor(t.length/2),i=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(i.slice(0,n),!e),r=this.constructTree(i.slice(n+1,t.length),!e);return{agent:t[n],left:o,right:r}},t.prototype.rangeSearch=function(t,e,n,i,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=i&&(s=s.concat(this.rangeSearch(t.right,e,n,i,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,n,i,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,n,i,o,!r))),t.agent.getPosition().y>=n&&(s=s.concat(this.rangeSearch(t.left,e,n,i,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=n&&t.agent.getPosition().x<=i&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),y=function(){function t(t,e,n,i){this.Id=t,this.Radius=20,this._position=e,this._direction=i(e),this._goalPosition=n,this._getPreferredVelocity=i,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getDistanceToGoal=function(){return this._position.subtract(this._goalPosition).magnitude()},t.prototype.isDone=function(){return this._isDone},t}(),v=function(){function t(){}return t.fromHsv=function(t,e,n){var i=(t*=6)-Math.floor(t),o=n*(1-e),r=n*(1-e*i),s=n*(1-e*(1-i));return 0<=t&&t<1?{r:255*n,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*n,b:255*o}:2<=t&&t<3?{r:255*o,g:255*n,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*n}:4<=t&&t<5?{r:255*s,g:255*o,b:255*n}:5<=t&&t<6?{r:255*n,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),x=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.getColour=function(){return this._isDone?v.White:v.Green},e.prototype.update=function(t,e,n){if(!this._isDone){var i=this._getPreferredVelocity(this._position);i.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=i,this._position=this._position.add(this._direction.multiply(t)))}},e}(y),_=function(){function t(){}return t.getClosestPointOnLine=function(t,e,n){var i=e.normalise(),o=n.subtract(t).dot(i);return t.add(i.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,n,i){var o=n.subtract(t),r=i.dot(i),s=2*i.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;if(c<0)return 1/0;var u=Math.sqrt(c),h=(-s-u)/(2*r);if(h>0)return h;var l=(-s+u)/(2*r);return l>0?l:1/0},t.getLineLineIntersection=function(t,e,n,i){var o=(t.x-e.x)*(n.y-i.y)-(t.y-e.y)*(n.x-i.x),s=((e.x-t.x)*(t.y-n.y)-(e.y-t.y)*(t.x-n.x))/o;return new r(n.x+s*(i.x-n.x),n.y+s*(i.y-n.y))},t}(),b=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),P=function(t){function e(e,n,i,o){var r=t.call(this,e,n,i,o)||this;return r._isStuck=!1,r}return b(e,t),e.prototype.getColour=function(){return this._isDone?v.White:this._isStuck?v.Red:v.Green},e.prototype.update=function(t,e,n){if(!this._isDone){var i=this._getPreferredVelocity(this._position);if(i.magnitudeSqrd()<.1)this._isDone=!0;else{var o=this._position.add(i.normalise().multiply(25));this._isStuck=!1;for(var r=0;r<e.length;r++)if(this.collidesAgent(e[r],o))return void(this._isStuck=!0);for(r=0;r<n.length;r++)if(this.collidesObstacle(n[r],o))return void(this._isStuck=!0);this._direction=i,this._position=this._position.add(this._direction.multiply(t))}}},e.prototype.collidesAgent=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e.prototype.collidesObstacle=function(t,e){if(t instanceof a)return t.Position.subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius);if(t instanceof c){var n=_.getFirstRayCircleIntersection(e,this.Radius,t.Start,t.End.subtract(t.Start));return n>0&&n<1}},e}(y),M=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),R=function(t){function e(e,n,i,o){var r=t.call(this,e,n,i,o)||this;return r._colour=v.Green,r}return M(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e,n){if(!this._isDone){var i=this._getPreferredVelocity(this._position);if(i.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new r(0,0),void(this._colour=v.White);for(var o,s,u=!0,h=0;h<e.length;h++)if(null!=(P=this.getAgentVelocityObstacle(e[h]))&&P.contains(i)){u=!1,o=P,s=h;break}for(h=0;h<n.length;h++)if(null!=(P=n[h].getVelocityObstacle(this))&&P.contains(i)){u=!1,o=P,s=-1;break}if(u)return this._direction=i,this._position=this._position.add(this._direction.multiply(t)),void(this._colour=v.Green);if(null!=o){var l=_.getClosestPointOnLine(o.vertex,o.tangent2,i),g=_.getClosestPointOnLine(o.vertex,o.tangent1,i),d=!0,f=!0;for(h=0;h<e.length;h++)h!=s&&(null!=(P=this.getAgentVelocityObstacle(e[h]))&&P.contains(l)&&(d=!1),null!=P&&P.contains(g)&&(f=!1));for(h=0;h<n.length;h++)null!=(P=n[h].getVelocityObstacle(this))&&P.contains(l)&&(d=!1),null!=P&&P.contains(g)&&(f=!1);if(d&&f?l.subtract(i).magnitudeSqrd()<g.subtract(i).magnitudeSqrd()?this._direction=l:this._direction=g:d?this._direction=l:f&&(this._direction=g),d||f)return this._position=this._position.add(this._direction.multiply(t)),void this.setColour(i)}var p=1/0,m=new r(0,0);for(h=0;h<100;h++){for(var y=new r(0,0).sample(1),x=1/0,w=0;w<e.length;w++){var b=e[w];(null==(P=this.getAgentVelocityObstacle(b))||P.contains(y))&&(M=_.getFirstRayCircleIntersection(new r(0,0),this.Radius+b.Radius,this._position.subtract(b.getPosition()),y.subtract(b.getDirection())))<x&&(x=M)}for(w=0;w<n.length;w++){var P;if((b=n[w])instanceof a)(null==(P=b.getVelocityObstacle(this))||P.contains(y))&&(M=_.getFirstRayCircleIntersection(new r(0,0),this.Radius+b.Radius,this._position.subtract(b.Position),y))<x&&(x=M);else if(b instanceof c){var M;(M=(_.getLineLineIntersection(b.Start,b.End,this._position,this._position.add(y.normalise().multiply(this.Radius))).subtract(this._position).magnitude()-this.Radius)/y.magnitude())<x&&(x=M)}}var R=200/x+i.subtract(y).magnitude();R<p&&(p=R,m=y)}this._direction=m,this._position=this._position.add(this._direction.multiply(t)),this.setColour(i)}},e.prototype.getAgentVelocityObstacle=function(t){var e=t.getDirection(),n=t.getPosition().subtract(this._position).add(e),i=t.Radius+this.Radius,o=e.subtract(n),a=o.magnitude();if(a<i)return null;var c=Math.acos(i/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(n.x+i*Math.cos(h),n.y+i*Math.sin(h)),g=u-c,d=new r(n.x+i*Math.cos(g),n.y+i*Math.sin(g));return new s(e,l,d)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),n=e>1?0:(1-e)/3;this._colour=v.fromHsv(n,1,1)},e}(y),S=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),E=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return S(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),n=t.getDirection(),i=e.add(n).divide(2),o=t.getPosition().subtract(this._position).add(n),a=t.Radius+this.Radius,c=n.subtract(o),u=c.magnitude();if(u<a)return null;var h=Math.acos(a/u),l=Math.atan2(c.y,c.x),g=l+h,d=new r(o.x+a*Math.cos(g),o.y+a*Math.sin(g)),f=l-h,p=new r(o.x+a*Math.cos(f),o.y+a*Math.sin(f));return new s(i,d,p)},e}(R),L=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return L(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),n=t.getDirection(),i=n,o=e.add(n).divide(2),a=t.getPosition().subtract(this._position),c=a.add(n),u=t.Radius+this.Radius,h=n.subtract(c),l=h.magnitude();if(l<u)return null;var g,d=Math.acos(u/l),f=Math.atan2(h.y,h.x),p=f+d,m=new r(c.x+u*Math.cos(p),c.y+u*Math.sin(p)),y=f-d,v=new r(c.x+u*Math.cos(y),c.y+u*Math.sin(y));return g=(a.x-n.x)*(e.y-n.y)-(a.y-n.y)*(e.x-n.x)>0?_.getLineLineIntersection(i,i.add(m),o,o.add(v)):_.getLineLineIntersection(i,i.add(v),o,o.add(m)),new s(g,m,v)},e}(R),T=function(){function t(){}return t.getAgent=function(t,e,n,i,o){switch(t){case"BasicAgent":return new w(e,n,i,o);case"StopAgent":return new P(e,n,i,o);case"VOAgent":return new R(e,n,i,o);case"RVOAgent":return new E(e,n,i,o);case"HRVOAgent":return new A(e,n,i,o);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),O=function(){function t(){}return t.getConfiguration=function(t,e,n,i,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,n,i,o);case"RandomToRandom2x":return this.RandomToRandom(e,2*n,2*i,o);case"RandomToRandom4x":return this.RandomToRandom(e,4*n,4*i,o);case"RandomToLine":return this.RandomToLine(e,n,i,o);case"CircleToCircle":return this.CircleToCircle(e,n,i,o);case"GridToGrid":return this.GridToGrid(e,n,i,o);case"Bollards":return this.Bollards(e,n,i,o);case"Bottleneck":return this.Bottleneck(e,n,i,o);case"BottleneckWithNav":return this.BottleneckWithNav(e,n,i,o);case"Slalom":return this.Slalom(e,n,i,o);case"SlalomWithNav":return this.SlalomWithNav(e,n,i,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))})),a=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))}));i=Math.min(s.length,a.length);for(var c=0;c<i;c++){var u=T.getAgent(t,c,s[c],a[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e,n,i,50).map((function(t){return t.subtract(new r(e/2,n/2))}));i=s.length;for(var a=0;a<i;a++){var c=new r(((a+1)/(i+1)-.5)*e,0),u=T.getAgent(t,a,s[a],c,this.preferredVelocityFromGoalPosition(c));o.push(u)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,n,i){for(var o=[],s=n/2-25,a=0;a<i;a++){var c=2*Math.PI*a/i,u=new r(s*Math.cos(c),s*Math.sin(c)),h=new r(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI)),l=T.getAgent(t,a,u,h,this.preferredVelocityFromGoalPosition(h));o.push(l)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,n,i){for(var o=[],s=Math.ceil(Math.sqrt(i/2)),a=90,c=30-e/2,u=(s-1)/2*a,h=0;h<i;h++){var l=Math.floor(h/2),g=Math.floor(l/s),d=l%s;if(h%2==0){var f=new r(c+(s-1-d)*a,u-g*a),p=new r(-c-d*a,u-g*a),m=T.getAgent(t,h,f,p,this.preferredVelocityFromGoalPosition(p));o.push(m)}else f=new r(-c-(s-1-d)*a,u-g*a),p=new r(c+d*a,u-g*a),m=T.getAgent(t,h,f,p,this.preferredVelocityFromGoalPosition(p)),o.push(m)}return{agents:o,obstacles:[]}},t.Bollards=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var c=0;c<i;c++){var u=s[c].add(new r(e/2+200,0)),h=T.getAgent(t,c,s[c],u,this.preferredVelocityFromGoalPosition(u));o.push(h)}var l=[];for(c=0;c<5;c++)l.push(new a(new r(0,120*c-240),20));return{agents:o,obstacles:l}},t.Bottleneck=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var a=0;a<i;a++){var u=s[a].add(new r(e/2+200,0)),h=T.getAgent(t,a,s[a],u,this.preferredVelocityFromGoalPosition(u));o.push(h)}var l=[];return l.push(new c(new r(0,-500),new r(0,-100))),l.push(new c(new r(0,500),new r(0,100))),{agents:o,obstacles:l}},t.BottleneckWithNav=function(t,e,n,i){var o=this,s=[],a=this.poissonDiskSample(e/2-200,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=a.length;for(var u=function(n){var i=a[n].add(new r(e/2+200,0)),c=T.getAgent(t,n,a[n],i,(function(t){return t.x<0?t.magnitudeSqrd()>Math.pow(90,2)?o.preferredVelocityFromGoalPosition(new r(0,0))(t):new r(1,0):o.preferredVelocityFromGoalPosition(i)(t)}));s.push(c)},h=0;h<i;h++)u(h);var l=[];return l.push(new c(new r(0,-500),new r(0,-100))),l.push(new c(new r(0,500),new r(0,100))),{agents:s,obstacles:l}},t.Slalom=function(t,e,n,i){var o=[],s=this.poissonDiskSample(e/2-250,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=s.length;for(var a=n/2-200,u=0;u<i;u++){var h=s[u].add(new r(e/2+250,0)),l=T.getAgent(t,u,s[u],h,this.preferredVelocityFromGoalPosition(h));o.push(l)}var g=[];return g.push(new c(new r(-200,500),new r(-200,-a))),g.push(new c(new r(0,-500),new r(0,a))),g.push(new c(new r(200,500),new r(200,-a))),{agents:o,obstacles:g}},t.SlalomWithNav=function(t,e,n,i){var o=this,s=[],a=this.poissonDiskSample(e/2-250,n-40,i,80).map((function(t){return t.subtract(new r(e/2,n/2-20))}));i=a.length;for(var u=n/2-200,h=u+100,l=function(n){var i=new r(a[n].x+e/2+250,-a[n].y),c=T.getAgent(t,n,a[n],i,(function(t){return t.x<=-200?t.subtract(new r(-200,-h)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(-200,-h))(t):t.x<=0?t.subtract(new r(0,h)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(0,h))(t):t.x<=200?t.subtract(new r(200,-h)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(200,-h))(t):o.preferredVelocityFromGoalPosition(i)(t)}));s.push(c)},g=0;g<i;g++)l(g);var d=[];return d.push(new c(new r(-200,500),new r(-200,-u))),d.push(new c(new r(0,-500),new r(0,u))),d.push(new c(new r(200,500),new r(200,-u))),{agents:s,obstacles:d}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var n=t.subtract(e);return n.magnitudeSqrd()<1?n:n.normalise()}},t.poissonDiskSample=function(t,e,n,i){for(var o=[],s=function(){for(var s,c=!0,u=0;c;)if(u++,c=!1,s=new r(t*Math.random(),e*Math.random()),o.forEach((function(t){s.subtract(t).magnitudeSqrd()<Math.pow(i,2)&&(c=!0)})),u>1e3)return console.warn("Failed to find poisson disk sample (placed "+a+"/"+n+")."),{value:o};o.push(s)},a=0;a<n;a++){var c=s();if("object"==typeof c)return c.value}return o},t}(),I=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d")}return t.prototype.init=function(t){var e=this;this._done=!1,this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height),this.context.strokeStyle="white",this.context.lineWidth=2,t.getObstacles().forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)}))},t.prototype.render=function(t){var e=this,n=t.getAgents();n.forEach((function(t){e.drawAgent(t)})),t.isDone()&&!this._done&&(this._done=!0,n.forEach((function(t){e.drawAgentFinal(t)})))},t.prototype.drawAgent=function(t){var e=t.getPosition(),n=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.fillRect(e.x,-e.y,1,1),this.context.stroke()},t.prototype.drawAgentFinal=function(t){var e=t.getPosition(),n=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI),this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),D=function(){function t(){}return t.round3dp=function(t){return Math.round(1e3*(t+Number.EPSILON))/1e3},t.sum=function(t){return t.reduce((function(t,e){return t+e}),0)},t.quartiles=function(t){var e=t.slice().sort((function(t,e){return t-e})),n=e.length,i=Math.ceil(n/2)-1,o=n%2==0?(e[i]+e[i+1])/2:e[i];return{minimum:e[0],lowerQuart:e[Math.ceil(.25*n)-1],median:o,upperQuart:e[Math.ceil(.75*n)-1],maximum:e[n-1]}},t}(),C=function(){function t(){this._logging=!1}return t.prototype.start=function(t){var e=this;console.log("------- Started logging -------"),this._logging=!0,this._startTime=performance.now(),this._timeStep=0,this._frameTimes=[],this._agentCollisions=[],this._obstacleCollisions=[],this._pathLengths=[],this._startPositions=[],t.forEach((function(t){e._pathLengths[t.Id]=0,e._startPositions[t.Id]=t.getPosition()}))},t.prototype.log=function(t,e,n,i){var o=this;this._logging&&(this._frameTimes[this._timeStep]=D.round3dp(i),this._agentCollisions[this._timeStep]=0,this._obstacleCollisions[this._timeStep]=0,t.forEach((function(i){t.getNeighboursInRangeRectilinear(i,100).forEach((function(t){t.Id<i.Id&&t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&o._agentCollisions[o._timeStep]++})),e.forEach((function(t){if(t instanceof c){var e=_.getFirstRayCircleIntersection(i.getPosition(),i.Radius,t.Start,t.End.subtract(t.Start));e>0&&e<1&&o._obstacleCollisions[o._timeStep]++}else t instanceof a&&t.Position.subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&o._obstacleCollisions[o._timeStep]++})),i.isDone()||(o._pathLengths[i.Id]+=i.getDirection().magnitude()*n)})),this._timeStep++)},t.prototype.stop=function(t){var e=this;if(this._logging){console.log("Total time (ms): "+(performance.now()-this._startTime).toFixed(3)),this._logging=!1;var n=D.sum(this._frameTimes.slice(1)),i=n/this._timeStep,o=D.quartiles(this._frameTimes.slice(1)),r=D.sum(this._agentCollisions),s=D.sum(this._obstacleCollisions),a=[];t.forEach((function(t){a[t.Id]=e._pathLengths[t.Id]/e._startPositions[t.Id].subtract(t.getPosition()).magnitude()-1}));var c=D.sum(a)/t.getAll().length,u=D.quartiles(a);console.log("Timesteps: "+this._timeStep),console.log("Total frame time (ms): "+n.toFixed(3)),console.log("Average frame time (ms): "+i.toFixed(3)),console.log("Min: "+o.minimum),console.log(" LQ: "+o.lowerQuart),console.log("Med: "+o.median),console.log(" UQ: "+o.upperQuart),console.log("Max: "+o.maximum),console.log("Total agent collisions: "+r),r>0&&console.log("Agent collisions per frame: "+(r/this._timeStep).toFixed(3)),console.log("Total obstacle collisions: "+s),s>0&&console.log("Obstacle collisions per frame: "+(s/this._timeStep).toFixed(3)),console.log("Average overhead: "+c),console.log("Min: "+u.minimum),console.log(" LQ: "+u.lowerQuart),console.log("Med: "+u.median),console.log(" UQ: "+u.upperQuart),console.log("Max: "+u.maximum)}},t}(),F=document.getElementById("config"),V=document.getElementById("agentType"),B=document.getElementById("range"),k=document.getElementById("numberOfAgents"),N=document.getElementById("canvas2d"),G=document.getElementById("canvas3d"),U=document.getElementById("canvasTrace"),j=document.getElementById("framerate"),q=document.getElementById("playButton"),Y=document.getElementById("stepButton"),W=new o(new m([])),X=new u(N),Q=new p(G),H=new I(U),z=X,K=new C,Z=!1,J=200;function $(){this.reconfigure();var t=0,e=0,n=0;window.requestAnimationFrame((function i(){var o=performance.now(),r=o-t;if(t=o,Z){var s=60*r/2e3;W.update(s,J),K.log(W.getAgents(),W.getObstacles(),s,r)}W.isDone()&&(ot(),K.stop(W.getAgents())),z.render(W),n++,o-e>=250&&(j.textContent="FPS: "+(1e3*n/(o-e)).toFixed(1),n=0,e=o),window.requestAnimationFrame(i)}))}function tt(t){switch(t){case"2D":document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=X,N.style.display="block",G.style.display="none",U.style.display="none";break;case"3D":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=Q,N.style.display="none",G.style.display="block",U.style.display="none";break;case"Trace":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),z=H,N.style.display="none",G.style.display="none",U.style.display="block";break;default:throw new Error('Unknown view "'+t+'"')}z.init(W)}function et(){(Z=!Z)?(K.start(W.getAgents()),K.log(W.getAgents(),W.getObstacles(),0,0),q.textContent="Pause",Y.disabled=!0):(K.stop(W.getAgents()),q.textContent="Play",Y.disabled=!1)}function nt(){W.update(1,J),W.isDone()&&ot()}function it(){var t,e;Z=!1,q.textContent="Play",q.disabled=!1,Y.disabled=!1;var n=F.value,i=V.value;J=null!==(t=parseInt(B.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(k.value))&&void 0!==e?e:0;W.init(O.getConfiguration(n,i,N.width,N.height,o)),z.init(W)}function ot(){Z=!1,q.disabled=!0,Y.disabled=!0}}},e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={exports:{}};return t[i](o,o.exports,n),o.exports}return n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n(249)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9TaW11bGF0aW9uLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL21hdGhzL1ZlY3RvcjJmLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL21hdGhzL1ZlbG9jaXR5T2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL29ic3RhY2xlcy9MaW5lT2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1JlbmRlcmVyMkQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWF0aHMvTWF0NGYudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL0FnZW50TWVzaC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9tZXNoZXMvRmxvb3JNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL21lc2hlcy9DeWxpbmRlck1lc2gudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL1dhbGxNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL3JlbmRlcmVycy9SZW5kZXJlcjNELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL2NvbGxlY3Rpb25zL0FnZW50VHJlZS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9Db2xvdXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWF0aHMvR2VvbWV0cnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL1N0b3BBZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvUlZPQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0hSVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudEZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvQ29uZmlndXJhdGlvbkZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1RyYWNlUmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWF0aHMvU3RhdHMudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbG9nZ2Vycy9Mb2dnZXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvZGVtby50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJuYW1lcyI6WyJhZ2VudHMiLCJ0aGlzIiwiX2FnZW50cyIsImluaXQiLCJjb25maWd1cmF0aW9uIiwiX2RvbmUiLCJ1cGRhdGUiLCJfb2JzdGFjbGVzIiwib2JzdGFjbGVzIiwic3RlcFNpemUiLCJyYW5nZSIsImZvckVhY2giLCJhZ2VudCIsImdldE5laWdoYm91cnNJblJhbmdlRXVjbGlkZWFuIiwiTWF0aCIsIm1pbiIsImdldERpc3RhbmNlVG9Hb2FsIiwiUmFkaXVzIiwiZ2V0QWxsIiwiZ2V0QWdlbnRzIiwiZ2V0T2JzdGFjbGVzIiwiaXNEb25lIiwiZG9uZSIsIngiLCJ5IiwidG9TdHJpbmciLCJjb3B5IiwidiIsIlZlY3RvcjJmIiwiYWRkIiwic3VidHJhY3QiLCJtdWx0aXBseSIsInMiLCJkaXZpZGUiLCJkb3QiLCJtYWduaXR1ZGVTcXJkIiwibWFnbml0dWRlIiwic3FydCIsIm5vcm1hbGlzZSIsIm0iLCJzYW1wbGUiLCJtYXhSYWRpdXMiLCJyYWRpdXMiLCJyYW5kb20iLCJhbmdsZSIsIlBJIiwiY29zIiwic2luIiwiaXNMZWZ0T2YiLCJwb2ludCIsImlzUmlnaHRPZiIsInZlcnRleCIsInRhbmdlbnQxIiwidGFuZ2VudDIiLCJjb250YWlucyIsInZlbG9jaXR5IiwiZGV0ZXJtaW5hbnQxIiwiZGV0ZXJtaW5hbnQyIiwicG9zaXRpb24iLCJQb3NpdGlvbiIsImdldFZlbG9jaXR5T2JzdGFjbGUiLCJ2ZWxvY2l0eUIiLCJjZW50cmUiLCJnZXRQb3NpdGlvbiIsImRpZmYiLCJkaXN0IiwidGhldGEiLCJhY29zIiwicGhpIiwiYXRhbjIiLCJhbmdsZTEiLCJhbmdsZTIiLCJWZWxvY2l0eU9ic3RhY2xlIiwic3RhcnQiLCJlbmQiLCJTdGFydCIsIkVuZCIsInZvU3RhcnQiLCJwb2ludFZlbG9jaXR5T2JzdGFjbGUiLCJ2b0VuZCIsImxlZnQiLCJyaWdodCIsImNhbnZhcyIsImNhbWVyYURpc3QiLCJtb3VzZURvd24iLCJldmVudCIsImRyYWciLCJvbGRYIiwicGFnZVgiLCJvbGRZIiwicGFnZVkiLCJtb3VzZVVwIiwicHJldmVudERlZmF1bHQiLCJtb3VzZU1vdmUiLCJ4UGFuIiwieVBhbiIsIm1vdXNlU2Nyb2xsIiwiZGVsdGFZIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwiX3NpbXVsYXRpb24iLCJyZW5kZXIiLCJzaW11bGF0aW9uIiwic2NhbGVGYWN0b3IiLCJzZXRUcmFuc2Zvcm0iLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwib2JzdGFjbGUiLCJDaXJjbGVPYnN0YWNsZSIsImRyYXdDaXJjbGVPYnN0YWNsZSIsIkxpbmVPYnN0YWNsZSIsImRyYXdMaW5lT2JzdGFjbGUiLCJkcmF3QWdlbnQiLCJkaXJlY3Rpb24iLCJnZXREaXJlY3Rpb24iLCJjb2xvdXIiLCJnZXRDb2xvdXIiLCJiZWdpblBhdGgiLCJyIiwiZyIsImIiLCJhcmMiLCJtb3ZlVG8iLCJuZXdQb3MiLCJsaW5lVG8iLCJzdHJva2UiLCJkIiwiU1FSVDFfMiIsImdldElkZW50aXR5TWF0cml4IiwiRmxvYXQzMkFycmF5IiwiZ2V0WFJvdGF0aW9uTWF0cml4IiwiYyIsImdldFlSb3RhdGlvbk1hdHJpeCIsImdldFpSb3RhdGlvbk1hdHJpeCIsImdldFRyYW5zbGF0aW9uTWF0cml4IiwieiIsImdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeCIsImZvdiIsImFzcGVjdFJhdGlvIiwibmVhciIsImZhciIsImYiLCJ0YW4iLCJpIiwibXVsdGlwbHlNYXRyaWNlcyIsImEiLCJyZXN1bHQiLCJqIiwibnVtIiwiayIsInZlcnRpY2VzIiwiaW5kaWNlcyIsImdldFZlcnRpY2VzIiwidyIsImgiLCJ3YWxsIiwibm9ybWFsIiwieFJvdCIsInlSb3QiLCJ4Um90TWF0IiwiTWF0NGYiLCJ5Um90TWF0Iiwid29ybGRNYXRyaXgiLCJnbCIsInVuaWZvcm1NYXRyaXg0ZnYiLCJ3b3JsZE1hdExvYyIsInZpZXdNYXRyaXgiLCJ2aWV3TWF0TG9jIiwicHJvamVjdGlvbk1hdHJpeCIsInByb2pNYXRMb2MiLCJ2ZXJ0ZXhTaGFkZXIiLCJjcmVhdGVTaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiZnJhZ21lbnRTaGFkZXIiLCJGUkFHTUVOVF9TSEFERVIiLCJzaGFkZXJTb3VyY2UiLCJjb21waWxlU2hhZGVyIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJwcm9ncmFtIiwiY3JlYXRlUHJvZ3JhbSIsImF0dGFjaFNoYWRlciIsImxpbmtQcm9ncmFtIiwiZ2V0UHJvZ3JhbVBhcmFtZXRlciIsIkxJTktfU1RBVFVTIiwidmFsaWRhdGVQcm9ncmFtIiwiVkFMSURBVEVfU1RBVFVTIiwidXNlUHJvZ3JhbSIsImVuYWJsZSIsIkRFUFRIX1RFU1QiLCJjbGVhckNvbG9yIiwiQ1VMTF9GQUNFIiwiZnJvbnRGYWNlIiwiQ0NXIiwiY3VsbEZhY2UiLCJCQUNLIiwiZ2V0VW5pZm9ybUxvY2F0aW9uIiwicG9zVmVjTG9jIiwiZGlyVmVjTG9jIiwicmFkaXVzTG9jIiwiaGVpZ2h0TG9jIiwiYmFzZUNvbG91ckxvYyIsImNvbnNvbGUiLCJlcnJvciIsImdldFByb2dyYW1JbmZvTG9nIiwiZ2V0U2hhZGVySW5mb0xvZyIsImZsb29yVmVydHMiLCJGbG9vck1lc2giLCJ3YWxscyIsImZpbHRlciIsIm1hcCIsIndhbGxWZXJ0cyIsIldhbGxNZXNoIiwicmVkdWNlIiwiYWNjIiwidmFsIiwiY29uY2F0IiwiQWdlbnRNZXNoIiwiQ3lsaW5kZXJNZXNoIiwiVmVydGV4QnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiYmluZEJ1ZmZlciIsIkFSUkFZX0JVRkZFUiIsImJ1ZmZlckRhdGEiLCJTVEFUSUNfRFJBVyIsImN5bGluZGVyT2Zmc2V0IiwibGVuZ3RoIiwiZmxvb3JPZmZzZXQiLCJ3YWxsc09mZnNldCIsIndhbGxJbmRpY2VzIiwiX3dhbGwiLCJVaW50MTZBcnJheSIsIkluZGV4QnVmZmVyIiwiRUxFTUVOVF9BUlJBWV9CVUZGRVIiLCJwb3NpdGlvbkF0dHJpYnV0ZSIsImdldEF0dHJpYkxvY2F0aW9uIiwidmVydGV4QXR0cmliUG9pbnRlciIsIkZMT0FUIiwiQllURVNfUEVSX0VMRU1FTlQiLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsIm5vcm1hbEF0dHJpYnV0ZSIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJwb3MiLCJ1bmlmb3JtMmYiLCJkaXIiLCJ1bmlmb3JtMWYiLCJjb2xvciIsInVuaWZvcm0zZiIsImRyYXdFbGVtZW50cyIsIlRSSUFOR0xFUyIsIlVOU0lHTkVEX1NIT1JUIiwid2FsbENvdW50IiwiX3Jvb3QiLCJjb25zdHJ1Y3RUcmVlIiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhciIsIm1pblgiLCJtaW5ZIiwibWF4WCIsIm1heFkiLCJyYW5nZVNlYXJjaCIsIm90aGVyIiwiSWQiLCJmdW4iLCJ4QXhpcyIsIm1pZCIsImZsb29yIiwic29ydGVkIiwic29ydCIsInNsaWNlIiwicm9vdCIsInJlcyIsInB1c2giLCJpZCIsInN0YXJ0UG9zaXRpb24iLCJnb2FsUG9zaXRpb24iLCJnZXRQcmVmZXJyZWRWZWxvY2l0eSIsIl9wb3NpdGlvbiIsIl9kaXJlY3Rpb24iLCJfZ29hbFBvc2l0aW9uIiwiX2dldFByZWZlcnJlZFZlbG9jaXR5IiwiX2lzRG9uZSIsImZyb21Ic3YiLCJmcmFjdCIsIlAiLCJRIiwiVCIsIldoaXRlIiwiUmVkIiwiR3JlZW4iLCJDb2xvdXIiLCJfbmVpZ2hib3VycyIsInByZWZlcnJlZFZlbG9jaXR5IiwiQWdlbnQiLCJnZXRDbG9zZXN0UG9pbnRPbkxpbmUiLCJsaW5lUG9pbnQiLCJsaW5lRGlyZWN0aW9uIiwiZGlzdGFuY2UiLCJnZXRGaXJzdFJheUNpcmNsZUludGVyc2VjdGlvbiIsIm9yaWdpbiIsImRlbHRhIiwiZGlzY3JpbSIsIkluZmluaXR5Iiwic3FydERpc2NyaW0iLCJkMSIsImQyIiwiZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24iLCJhMSIsImEyIiwiYjEiLCJiMiIsInUiLCJfaXNTdHVjayIsIm5laWdoYm91cnMiLCJoZWFkaW5nIiwiY29sbGlkZXNBZ2VudCIsImNvbGxpZGVzT2JzdGFjbGUiLCJ0IiwiR2VvbWV0cnkiLCJfY29sb3VyIiwiY29sbGlzaW9uIiwic2FmZSIsInZlbG9jaXR5T2JzdGFjbGUiLCJnZXRBZ2VudFZlbG9jaXR5T2JzdGFjbGUiLCJsZWZ0U2FmZSIsInJpZ2h0U2FmZSIsInNldENvbG91ciIsIm1pblBlbmFsdHkiLCJiZXN0VmVsb2NpdHkiLCJtaW5UaW1lVG9Db2xsaXNpb24iLCJ0aW1lVG9Db2xsaXNpb24iLCJwZW5hbHR5Iiwic3RyZXNzIiwiaHVlIiwidmVsb2NpdHlBIiwiVk9BZ2VudCIsInZvVmVydGV4IiwicnZvVmVydGV4IiwicG9zaXRpb25CIiwiZ2V0QWdlbnQiLCJ0eXBlIiwiQmFzaWNBZ2VudCIsIlN0b3BBZ2VudCIsIlJWT0FnZW50IiwiSFJWT0FnZW50IiwiRXJyb3IiLCJnZXRDb25maWd1cmF0aW9uIiwiYWdlbnRUeXBlIiwibnVtYmVyT2ZBZ2VudHMiLCJSYW5kb21Ub1JhbmRvbSIsIlJhbmRvbVRvTGluZSIsIkNpcmNsZVRvQ2lyY2xlIiwiR3JpZFRvR3JpZCIsIkJvbGxhcmRzIiwiQm90dGxlbmVjayIsIkJvdHRsZW5lY2tXaXRoTmF2IiwiU2xhbG9tIiwiU2xhbG9tV2l0aE5hdiIsInN0YXJ0UG9zaXRpb25zIiwicG9pc3NvbkRpc2tTYW1wbGUiLCJnb2FsUG9zaXRpb25zIiwiQWdlbnRGYWN0b3J5IiwicHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uIiwiX3dpZHRoIiwiX2hlaWdodCIsImdyaWRTaXplIiwiY2VpbCIsIm9mZnNldCIsImlkeCIsInJvdyIsImNvbCIsImdhcFdpZHRoIiwid2FsbEhlaWdodCIsIm1pZEdhcCIsImdhcEhlaWdodCIsImdvYWxEaXJlY3Rpb24iLCJ4UmFuZ2UiLCJ5UmFuZ2UiLCJuIiwidGhyZXNob2xkIiwic2FtcGxlcyIsInJlc2FtcGxlIiwiYXR0ZW1wdHMiLCJ3YXJuIiwiZHJhd0FnZW50RmluYWwiLCJyb3VuZDNkcCIsInJvdW5kIiwiTnVtYmVyIiwiRVBTSUxPTiIsInN1bSIsImFyciIsInF1YXJ0aWxlcyIsIm1lZGlhbiIsIm1pbmltdW0iLCJsb3dlclF1YXJ0IiwidXBwZXJRdWFydCIsIm1heGltdW0iLCJfbG9nZ2luZyIsImxvZyIsIl9zdGFydFRpbWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsIl90aW1lU3RlcCIsIl9mcmFtZVRpbWVzIiwiX2FnZW50Q29sbGlzaW9ucyIsIl9vYnN0YWNsZUNvbGxpc2lvbnMiLCJfcGF0aExlbmd0aHMiLCJfc3RhcnRQb3NpdGlvbnMiLCJkZWx0YVQiLCJTdGF0cyIsIm5laWdoYm91ciIsInN0b3AiLCJ0b0ZpeGVkIiwidG90YWxGcmFtZVRpbWUiLCJhdmVyYWdlRnJhbWVUaW1lIiwiZnJhbWVUaW1lUXVhcnRpbGVzIiwidG90YWxBZ2VudENvbGxpc2lvbnMiLCJ0b3RhbE9ic3RhY2xlQ29sbGlzaW9ucyIsIm92ZXJoZWFkIiwiYXZlcmFnZU92ZXJoZWFkIiwib3ZlcmhlYWRRdWFydGlsZXMiLCJjb25maWdTZWxlY3QiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWdlbnRUeXBlU2VsZWN0IiwicmFuZ2VJbnB1dCIsIm51bWJlck9mQWdlbnRzSW5wdXQiLCJjYW52YXMyZCIsImNhbnZhczNkIiwiY2FudmFzVHJhY2UiLCJmcmFtZXJhdGUiLCJwbGF5QnV0dG9uIiwic3RlcEJ1dHRvbiIsIlNpbXVsYXRpb24iLCJBZ2VudFRyZWUiLCJyZW5kZXJlcjJkIiwiUmVuZGVyZXIyRCIsInJlbmRlcmVyM2QiLCJSZW5kZXJlcjNEIiwicmVuZGVyZXJUcmFjZSIsIlRyYWNlUmVuZGVyZXIiLCJyZW5kZXJlciIsImxvZ2dlciIsIkxvZ2dlciIsInBsYXkiLCJyZWNvbmZpZ3VyZSIsImxhc3RUaW1lc3RhbXAiLCJsYXN0RlBTIiwiZnJhbWVzIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibG9vcCIsInRpbWVzdGFtcCIsInRleHRDb250ZW50Iiwic3dpdGNoVmlldyIsInZpZXciLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJzdHlsZSIsImRpc3BsYXkiLCJwbGF5UGF1c2UiLCJkaXNhYmxlZCIsInN0ZXAiLCJjb25maWciLCJ2YWx1ZSIsInBhcnNlSW50IiwiQ29uZmlndXJhdGlvbkZhY3RvcnkiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIl0sIm1hcHBpbmdzIjoidUtBSUEsSSxFQUFBLGFBS0UsV0FBWUEsR0FDVkMsS0FBS0MsUUFBVUYsRUE4Q25CLE9BM0NFLFlBQUFHLEtBQUEsU0FBS0MsR0FDSEgsS0FBS0ksT0FBUSxFQUNiSixLQUFLQyxRQUFRSSxPQUFPRixFQUFjSixRQUNsQ0MsS0FBS00sV0FBYUgsRUFBY0ksV0FHbEMsWUFBQUYsT0FBQSxTQUFPRyxFQUFrQkMsR0FBekIsV0FDRVQsS0FBS0MsUUFBUVMsU0FBUSxTQUFDQyxHQUNwQkEsRUFBTU4sT0FDSkcsRUFDQSxFQUFLUCxRQUFRVyw4QkFDWEQsRUFDQUUsS0FBS0MsSUFBSUwsRUFBT0UsRUFBTUksb0JBQXNCSixFQUFNSyxTQUVwRCxFQUFLVixlQUtUTixLQUFLQyxRQUFRSSxPQUFPTCxLQUFLQyxRQUFRZ0IsV0FHbkMsWUFBQUMsVUFBQSxXQUNFLE9BQU9sQixLQUFLQyxTQUdkLFlBQUFrQixhQUFBLFdBQ0UsT0FBT25CLEtBQUtNLFlBR2QsWUFBQWMsT0FBQSxXQUNFLEdBQUlwQixLQUFLSSxNQUNQLE9BQU8sRUFHVCxJQUFJaUIsR0FBTyxFQU1YLE9BTEFyQixLQUFLQyxRQUFRUyxTQUFRLFNBQUNDLEdBQ3BCVSxNQUFTVixFQUFNUyxhQUdqQnBC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QUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLE9BQVMsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxHQUFNLEdBQ3hDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFDeEMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3RDLE9BQVMsUUFBVSxRQUFVLEVBQUssR0FBTSxHQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ2xDLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUNyQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbEMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUFLLEVBQ3BDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxHQUFNLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ25DLFNBQVcsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUN0QyxTQUFXLFFBQVUsRUFBSyxHQUFNLEVBQUssR0FDcEMsU0FBVyxRQUFVLEVBQUssR0FBTSxFQUFLLEVBQ3RDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDM0MsU0FBVyxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxHQUN2QyxTQUFXLEtBQU8sVUFBVyxFQUFLLEVBQUssRUFDeEMsU0FBVyxLQUFPLFNBQVUsR0FBTSxFQUFLLEVBQ3ZDLFNBQVcsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUN0QyxTQUFXLEtBQU8sU0FBVSxHQUFNLEVBQUssRUFDdkMsU0FBVyxLQUFPLFNBQVUsRUFBSyxFQUFLLEdBQ3JDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxHQUN2QyxTQUFXLEtBQU8sVUFBVyxFQUFLLEVBQUssR0FDdkMsUUFBVSxLQUFPLFVBQVcsRUFBSyxFQUFLLEdBQ3RDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxHQUNyQyxRQUFVLEtBQU8sVUFBVyxFQUFLLEVBQUssR0FDdEMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3RDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDckMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3JDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUN6QyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUMxQyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsT0FBUyxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUN6QyxPQUFTLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdEMsT0FBUyxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN4QyxPQUFTLFFBQVUsU0FBVyxFQUFLLEVBQUssR0FDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLE9BQVMsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN2QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDdkMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3RDLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNwQyxRQUFVLFFBQVUsRUFBSyxHQUFNLEVBQUssRUFDckMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3BDLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFBSyxHQUNuQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDcEMsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3JDLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNwQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEVBQzFDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssRUFDckMsU0FBVyxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3JDLFNBQVcsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNuQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDckMsU0FBVyxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3RDLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbkMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUMxQyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDM0MsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEVBQzNDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDMUMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FJcEMsRUFBQUMsUUFBVSxDQUNmLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsRUFBRyxFQUNOLEVBQUcsRUFBRyxFQUNOLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsR0FBSSxFQUNQLElBQUssR0FBSSxHQUNULElBQUssSUFBSyxHQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxJQUNULEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxJQUNULEdBQUksSUFBSyxHQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksSUFBSyxJQUNULElBQUssR0FBSSxHQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsRUFBRyxFQUNOLEVBQUcsRUFBRyxFQUNOLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsR0FBSSxHQUNQLElBQUssSUFBSyxHQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxHQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxHQUNULEdBQUksSUFBSyxJQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxJQUNSLElBQUssSUFBSyxHQUNWLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxJQUVaLEVBelNBLEdDQUEsMkJBb0JBLE9BbkJTLEVBQUFDLFlBQVAsU0FBbUIxRCxFQUFlQyxHQUNoQyxJQUFNMEQsRUFBSTNELEVBQVEsRUFD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QUFFRixFQUFZQyxLQUFTTixFQUFvQk8sRUFBRUwsRUFBU0ksSUFDNUVFLE9BQU9DLGVBQWVQLEVBQVNJLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxNQ0ozRU4sRUFBb0JPLEVBQUksQ0FBQ0ssRUFBS0MsSUFBU0wsT0FBT00sVUFBVUMsZUFBZUMsS0FBS0osRUFBS0MsR0NDakZiLEVBQW9CL1YsRUFBS2lXLElBQ0gsb0JBQVhlLFFBQTBCQSxPQUFPQyxhQUMxQ1YsT0FBT0MsZUFBZVAsRUFBU2UsT0FBT0MsWUFBYSxDQUFFdEIsTUFBTyxXQUU3RFksT0FBT0MsZUFBZVAsRUFBUyxhQUFjLENBQUVOLE9BQU8sS0hGaERJLEVBQW9CLE0iLCJmaWxlIjoiZGVtby5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElBZ2VudENvbGxlY3Rpb24gfSBmcm9tIFwiLi9pbnRlcmZhY2VzL0lBZ2VudENvbGxlY3Rpb25cIjtcclxuaW1wb3J0IHsgSU9ic3RhY2xlIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL0NvbmZpZ3VyYXRpb25GYWN0b3J5XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU2ltdWxhdGlvbiB7XHJcbiAgcHJpdmF0ZSBfYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uO1xyXG4gIHByaXZhdGUgX29ic3RhY2xlczogSU9ic3RhY2xlW107XHJcbiAgcHJpdmF0ZSBfZG9uZTogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgfVxyXG5cclxuICBpbml0KGNvbmZpZ3VyYXRpb246IENvbmZpZ3VyYXRpb24pIHtcclxuICAgIHRoaXMuX2RvbmUgPSBmYWxzZTtcclxuICAgIHRoaXMuX2FnZW50cy51cGRhdGUoY29uZmlndXJhdGlvbi5hZ2VudHMpO1xyXG4gICAgdGhpcy5fb2JzdGFjbGVzID0gY29uZmlndXJhdGlvbi5vYnN0YWNsZXM7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoc3RlcFNpemU6IG51bWJlciwgcmFuZ2U6IG51bWJlcikge1xyXG4gICAgdGhpcy5fYWdlbnRzLmZvckVhY2goKGFnZW50KSA9PiB7XHJcbiAgICAgIGFnZW50LnVwZGF0ZShcclxuICAgICAgICBzdGVwU2l6ZSxcclxuICAgICAgICB0aGlzLl9hZ2VudHMuZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4oXHJcbiAgICAgICAgICBhZ2VudCxcclxuICAgICAgICAgIE1hdGgubWluKHJhbmdlLCBhZ2VudC5nZXREaXN0YW5jZVRvR29hbCgpICsgYWdlbnQuUmFkaXVzKSAvLyBpZ25vcmUgYWdlbnRzIGZ1cnRoZXIgYXdheSB0aGFuIGdvYWwgcG9zaXRpb25cclxuICAgICAgICApLFxyXG4gICAgICAgIHRoaXMuX29ic3RhY2xlc1xyXG4gICAgICApO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gUmVxdWlyZWQgdG8gcmUtY29uc3RydWN0IGFnZW50IHRyZWVcclxuICAgIHRoaXMuX2FnZW50cy51cGRhdGUodGhpcy5fYWdlbnRzLmdldEFsbCgpKTtcclxuICB9XHJcblxyXG4gIGdldEFnZW50cygpIHtcclxuICAgIHJldHVybiB0aGlzLl9hZ2VudHM7XHJcbiAgfVxyXG5cclxuICBnZXRPYnN0YWNsZXMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fb2JzdGFjbGVzO1xyXG4gIH1cclxuXHJcbiAgaXNEb25lKCkge1xyXG4gICAgaWYgKHRoaXMuX2RvbmUpIHtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGRvbmUgPSB0cnVlO1xyXG4gICAgdGhpcy5fYWdlbnRzLmZvckVhY2goKGFnZW50KSA9PiB7XHJcbiAgICAgIGRvbmUgJiY9IGFnZW50LmlzRG9uZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fZG9uZSA9IGRvbmU7XHJcbiAgICByZXR1cm4gdGhpcy5fZG9uZTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIFZlY3RvcjJmIHtcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG5cclxuICB0b1N0cmluZygpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIGAoJHt0aGlzLnh9LCAke3RoaXMueX0pYDtcclxuICB9XHJcblxyXG4gIGNvcHkodjogVmVjdG9yMmYpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHYueCwgdi55KTtcclxuICB9XHJcblxyXG4gIGFkZCh2OiBWZWN0b3IyZik6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYodGhpcy54ICsgdi54LCB0aGlzLnkgKyB2LnkpO1xyXG4gIH1cclxuXHJcbiAgc3VidHJhY3QodjogVmVjdG9yMmYpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCAtIHYueCwgdGhpcy55IC0gdi55KTtcclxuICB9XHJcblxyXG4gIG11bHRpcGx5KHM6IG51bWJlcik6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYodGhpcy54ICogcywgdGhpcy55ICogcyk7XHJcbiAgfVxyXG5cclxuICBkaXZpZGUoczogbnVtYmVyKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih0aGlzLnggLyBzLCB0aGlzLnkgLyBzKTtcclxuICB9XHJcblxyXG4gIGRvdCh2OiBWZWN0b3IyZikge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIHYueCArIHRoaXMueSAqIHYueTtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZVNxcmQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnggKiogMiArIHRoaXMueSAqKiAyO1xyXG4gIH1cclxuXHJcbiAgbWFnbml0dWRlKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gTWF0aC5zcXJ0KHRoaXMubWFnbml0dWRlU3FyZCgpKTtcclxuICB9XHJcblxyXG4gIG5vcm1hbGlzZSgpOiBWZWN0b3IyZiB7XHJcbiAgICBsZXQgbSA9IHRoaXMubWFnbml0dWRlKCk7XHJcbiAgICByZXR1cm4gbSA9PSAwID8gbmV3IFZlY3RvcjJmKDAsIDApIDogdGhpcy5kaXZpZGUobSk7XHJcbiAgfVxyXG5cclxuICBzYW1wbGUobWF4UmFkaXVzOiBudW1iZXIpIHtcclxuICAgIC8vIFVuaWZvcm1seSBzYW1wbGUgdGhlIGNpcmNsZSBjZW50cmVkIGF0IHRoaXMgcG9pbnQgd2l0aCByYWRpdXMgbWF4UmFkaXVzXHJcbiAgICBsZXQgcmFkaXVzID0gTWF0aC5zcXJ0KE1hdGgucmFuZG9tKCkpICogbWF4UmFkaXVzO1xyXG4gICAgbGV0IGFuZ2xlID0gMiAqIE1hdGguUEkgKiBNYXRoLnJhbmRvbSgpO1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZihcclxuICAgICAgdGhpcy54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUpLFxyXG4gICAgICB0aGlzLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZSlcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvLyBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIHBvaW50IGxpZXMgdG8gdGhlIGxlZnQgb2YgdGhlIGxpbmUgZnJvbSB0aGVcclxuICAvLyBvcmlnaW4gdG8gdGhpcyB2ZWN0b3IsIG90aGVyd2lzZSByZXR1cm5zIGZhbHNlXHJcbiAgaXNMZWZ0T2YocG9pbnQ6IFZlY3RvcjJmKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy54ICogKHBvaW50LnkgLSB0aGlzLnkpIC0gdGhpcy55ICogKHBvaW50LnggLSB0aGlzLngpID4gMDtcclxuICB9XHJcblxyXG4gIC8vIFJldHVybnMgdHJ1ZSBpZiB0aGUgZ2l2ZW4gcG9pbnQgbGllcyB0byB0aGUgcmlnaHQgb2YgdGhlIGxpbmUgZnJvbSB0aGVcclxuICAvLyBvcmlnaW4gdG8gdGhpcyB2ZWN0b3IsIG90aGVyd2lzZSByZXR1cm5zIGZhbHNlXHJcbiAgaXNSaWdodE9mKHBvaW50OiBWZWN0b3IyZik6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIChwb2ludC55IC0gdGhpcy55KSAtIHRoaXMueSAqIChwb2ludC54IC0gdGhpcy54KSA8IDA7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vVmVjdG9yMmZcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBWZWxvY2l0eU9ic3RhY2xlIHtcclxuICB2ZXJ0ZXg6IFZlY3RvcjJmO1xyXG4gIHRhbmdlbnQxOiBWZWN0b3IyZjtcclxuICB0YW5nZW50MjogVmVjdG9yMmY7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHZlcnRleDogVmVjdG9yMmYsIHRhbmdlbnQxOiBWZWN0b3IyZiwgdGFuZ2VudDI6IFZlY3RvcjJmKSB7XHJcbiAgICB0aGlzLnZlcnRleCA9IHZlcnRleDtcclxuICAgIHRoaXMudGFuZ2VudDEgPSB0YW5nZW50MTtcclxuICAgIHRoaXMudGFuZ2VudDIgPSB0YW5nZW50MjtcclxuICB9XHJcblxyXG4gIGNvbnRhaW5zKHZlbG9jaXR5OiBWZWN0b3IyZik6IGJvb2xlYW4ge1xyXG4gICAgLy8gRmlyc3QgaGFsZi1wbGFuZVxyXG4gICAgY29uc3QgZGV0ZXJtaW5hbnQxID1cclxuICAgICAgKHRoaXMudGFuZ2VudDEueCAtIHRoaXMudmVydGV4LngpICogKHZlbG9jaXR5LnkgLSB0aGlzLnZlcnRleC55KSAtXHJcbiAgICAgICh0aGlzLnRhbmdlbnQxLnkgLSB0aGlzLnZlcnRleC55KSAqICh2ZWxvY2l0eS54IC0gdGhpcy52ZXJ0ZXgueCk7XHJcblxyXG4gICAgLy8gU2Vjb25kIGhhbGYtcGxhbmVcclxuICAgIGNvbnN0IGRldGVybWluYW50MiA9XHJcbiAgICAgICh0aGlzLnRhbmdlbnQyLnggLSB0aGlzLnZlcnRleC54KSAqICh2ZWxvY2l0eS55IC0gdGhpcy52ZXJ0ZXgueSkgLVxyXG4gICAgICAodGhpcy50YW5nZW50Mi55IC0gdGhpcy52ZXJ0ZXgueSkgKiAodmVsb2NpdHkueCAtIHRoaXMudmVydGV4LngpO1xyXG5cclxuICAgIHJldHVybiBkZXRlcm1pbmFudDEgPiAwICYmIGRldGVybWluYW50MiA8IDA7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL0lPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9tYXRocy9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBWZWxvY2l0eU9ic3RhY2xlIH0gZnJvbSBcIi4uL21hdGhzL1ZlbG9jaXR5T2JzdGFjbGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBDaXJjbGVPYnN0YWNsZSBpbXBsZW1lbnRzIElPYnN0YWNsZSB7XHJcbiAgcmVhZG9ubHkgUG9zaXRpb246IFZlY3RvcjJmO1xyXG4gIHJlYWRvbmx5IFJhZGl1czogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwb3NpdGlvbjogVmVjdG9yMmYsIHJhZGl1czogbnVtYmVyKSB7XHJcbiAgICB0aGlzLlBvc2l0aW9uID0gcG9zaXRpb247XHJcbiAgICB0aGlzLlJhZGl1cyA9IHJhZGl1cztcclxuICB9XHJcblxyXG4gIGdldFZlbG9jaXR5T2JzdGFjbGUoYWdlbnQ6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgICAvLyBSZXByZXNlbnQgY2lyY3VsYXIgb2JzdGFjbGUgYXMgYW4gYWdlbnQgd2l0aCB6ZXJvIHZlbG9jaXR5XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGUgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gdGhpcy5Qb3NpdGlvbi5zdWJ0cmFjdChhZ2VudC5nZXRQb3NpdGlvbigpKTtcclxuXHJcbiAgICAvLyBGaW5kIE1pbmtvd3NraSBzdW0gb2YgYWdlbnRzXHJcbiAgICBjb25zdCBjZW50cmUgPSBwb3NpdGlvbkI7XHJcbiAgICBjb25zdCByYWRpdXMgPSB0aGlzLlJhZGl1cyArIGFnZW50LlJhZGl1cztcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgYW5nbGVzXHJcbiAgICBjb25zdCBkaWZmID0gdmVsb2NpdHlCLnN1YnRyYWN0KGNlbnRyZSk7XHJcbiAgICBjb25zdCBkaXN0ID0gZGlmZi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChkaXN0IDwgcmFkaXVzKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHRoZXRhID0gTWF0aC5hY29zKHJhZGl1cyAvIGRpc3QpO1xyXG4gICAgY29uc3QgcGhpID0gTWF0aC5hdGFuMihkaWZmLnksIGRpZmYueCk7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIHRhbmdlbnQgdmVjdG9yc1xyXG4gICAgY29uc3QgYW5nbGUxID0gcGhpICsgdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MSA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTEpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYW5nbGUyID0gcGhpIC0gdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTIpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMilcclxuICAgICk7XHJcblxyXG4gICAgLy8gUmV0dXJuIHZlbG9jaXR5IG9ic3RhY2xlXHJcbiAgICByZXR1cm4gbmV3IFZlbG9jaXR5T2JzdGFjbGUodmVsb2NpdHlCLCB0YW5nZW50MSwgdGFuZ2VudDIpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vbWF0aHMvVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9tYXRocy9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGluZU9ic3RhY2xlIGltcGxlbWVudHMgSU9ic3RhY2xlIHtcclxuICByZWFkb25seSBTdGFydDogVmVjdG9yMmY7XHJcbiAgcmVhZG9ubHkgRW5kOiBWZWN0b3IyZjtcclxuXHJcbiAgY29uc3RydWN0b3Ioc3RhcnQ6IFZlY3RvcjJmLCBlbmQ6IFZlY3RvcjJmKSB7XHJcbiAgICB0aGlzLlN0YXJ0ID0gc3RhcnQ7XHJcbiAgICB0aGlzLkVuZCA9IGVuZDtcclxuICB9XHJcblxyXG4gIGdldFZlbG9jaXR5T2JzdGFjbGUoYWdlbnQ6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgICBjb25zdCB2b1N0YXJ0ID0gdGhpcy5wb2ludFZlbG9jaXR5T2JzdGFjbGUoYWdlbnQsIHRoaXMuU3RhcnQpO1xyXG4gICAgY29uc3Qgdm9FbmQgPSB0aGlzLnBvaW50VmVsb2NpdHlPYnN0YWNsZShhZ2VudCwgdGhpcy5FbmQpO1xyXG5cclxuICAgIGlmICh2b1N0YXJ0ID09IG51bGwgJiYgdm9FbmQgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH0gZWxzZSBpZiAodm9TdGFydCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiB2b0VuZDtcclxuICAgIH0gZWxzZSBpZiAodm9FbmQgPT0gbnVsbCkge1xyXG4gICAgICByZXR1cm4gdm9TdGFydDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgbGVmdCA9IHZvU3RhcnQudGFuZ2VudDE7XHJcbiAgICBpZiAodm9TdGFydC50YW5nZW50Mi5pc0xlZnRPZihsZWZ0KSkge1xyXG4gICAgICBsZWZ0ID0gdm9TdGFydC50YW5nZW50MjtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50MS5pc0xlZnRPZihsZWZ0KSkge1xyXG4gICAgICBsZWZ0ID0gdm9FbmQudGFuZ2VudDE7XHJcbiAgICB9XHJcbiAgICBpZiAodm9FbmQudGFuZ2VudDIuaXNMZWZ0T2YobGVmdCkpIHtcclxuICAgICAgbGVmdCA9IHZvRW5kLnRhbmdlbnQyO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByaWdodCA9IHZvU3RhcnQudGFuZ2VudDE7XHJcbiAgICBpZiAodm9TdGFydC50YW5nZW50Mi5pc1JpZ2h0T2YocmlnaHQpKSB7XHJcbiAgICAgIHJpZ2h0ID0gdm9TdGFydC50YW5nZW50MjtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50MS5pc1JpZ2h0T2YocmlnaHQpKSB7XHJcbiAgICAgIHJpZ2h0ID0gdm9FbmQudGFuZ2VudDE7XHJcbiAgICB9XHJcbiAgICBpZiAodm9FbmQudGFuZ2VudDIuaXNSaWdodE9mKHJpZ2h0KSkge1xyXG4gICAgICByaWdodCA9IHZvRW5kLnRhbmdlbnQyO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgMCksIGxlZnQsIHJpZ2h0KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcG9pbnRWZWxvY2l0eU9ic3RhY2xlKFxyXG4gICAgYWdlbnQ6IEFnZW50LFxyXG4gICAgcG9zaXRpb246IFZlY3RvcjJmXHJcbiAgKTogVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgICAvLyBSZXByZXNlbnQgY2lyY3VsYXIgb2JzdGFjbGUgYXMgYW4gYWdlbnQgd2l0aCB6ZXJvIHZlbG9jaXR5XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGUgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gcG9zaXRpb24uc3VidHJhY3QoYWdlbnQuZ2V0UG9zaXRpb24oKSk7XHJcblxyXG4gICAgLy8gRmluZCBNaW5rb3dza2kgc3VtIG9mIGFnZW50c1xyXG4gICAgY29uc3QgY2VudHJlID0gcG9zaXRpb25CO1xyXG4gICAgY29uc3QgcmFkaXVzID0gYWdlbnQuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IElSZW5kZXJlciB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL0lSZW5kZXJlclwiO1xyXG5pbXBvcnQgeyBTaW11bGF0aW9uIH0gZnJvbSBcIi4uL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUmVuZGVyZXIyRCBpbXBsZW1lbnRzIElSZW5kZXJlciB7XHJcbiAgcHJpdmF0ZSBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG4gIHByaXZhdGUgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xyXG5cclxuICAvLyBDYW1lcmEgY29udHJvbHNcclxuICBwcml2YXRlIGRyYWc6IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBvbGRYOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBvbGRZOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSB4UGFuOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSB5UGFuOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBjYW1lcmFEaXN0ID0gODAwOyAvLyBTdGFydCBjYW1lcmEgODAwICdweCcgYXdheVxyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgIHRoaXMueFBhbiA9IHRoaXMuY2FudmFzLndpZHRoIC8gMjtcclxuICAgIHRoaXMueVBhbiA9IHRoaXMuY2FudmFzLmhlaWdodCAvIDI7XHJcblxyXG4gICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVyc1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLm1vdXNlRG93biwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5tb3VzZVVwLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgdGhpcy5tb3VzZVVwLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMubW91c2VNb3ZlLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwid2hlZWxcIiwgdGhpcy5tb3VzZVNjcm9sbCwgeyBwYXNzaXZlOiBmYWxzZSB9KTtcclxuICB9XHJcblxyXG4gIGluaXQoX3NpbXVsYXRpb246IFNpbXVsYXRpb24pIHt9XHJcblxyXG4gIHJlbmRlcihzaW11bGF0aW9uOiBTaW11bGF0aW9uKSB7XHJcbiAgICBjb25zdCBzY2FsZUZhY3RvciA9IDgwMCAvIHRoaXMuY2FtZXJhRGlzdDtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcbiAgICBjb25zdCBvYnN0YWNsZXMgPSBzaW11bGF0aW9uLmdldE9ic3RhY2xlcygpO1xyXG5cclxuICAgIC8vIENsZWFyIGJhY2tncm91bmRcclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoNTEsIDUxLCA1MSlcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdChcclxuICAgICAgMCxcclxuICAgICAgMCxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy53aWR0aCxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy5oZWlnaHRcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShcclxuICAgICAgc2NhbGVGYWN0b3IsXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIHNjYWxlRmFjdG9yLFxyXG4gICAgICB0aGlzLnhQYW4sXHJcbiAgICAgIHRoaXMueVBhblxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBEcmF3IG9ic3RhY2xlc1xyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZVN0eWxlID0gXCJ3aGl0ZVwiO1xyXG4gICAgdGhpcy5jb250ZXh0LmxpbmVXaWR0aCA9IDI7XHJcbiAgICBvYnN0YWNsZXMuZm9yRWFjaCgob2JzdGFjbGUpID0+IHtcclxuICAgICAgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICB0aGlzLmRyYXdDaXJjbGVPYnN0YWNsZShvYnN0YWNsZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBMaW5lT2JzdGFjbGUpIHtcclxuICAgICAgICB0aGlzLmRyYXdMaW5lT2JzdGFjbGUob2JzdGFjbGUpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBEcmF3IGFnZW50c1xyXG4gICAgYWdlbnRzLmZvckVhY2goKGFnZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuZHJhd0FnZW50KGFnZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3QWdlbnQoYWdlbnQ6IEFnZW50KTogdm9pZCB7XHJcbiAgICBjb25zdCBwb3NpdGlvbiA9IGFnZW50LmdldFBvc2l0aW9uKCk7XHJcbiAgICBjb25zdCBkaXJlY3Rpb24gPSBhZ2VudC5nZXREaXJlY3Rpb24oKTtcclxuICAgIGNvbnN0IGNvbG91ciA9IGFnZW50LmdldENvbG91cigpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9IGByZ2IoJHtjb2xvdXIucn0sICR7Y29sb3VyLmd9LCAke2NvbG91ci5ifSlgO1xyXG5cclxuICAgIC8vIHkgcG9zaXRpb24gaW52ZXJ0ZWQgdG8gbWF0Y2ggM0Qgdmlld1xyXG4gICAgdGhpcy5jb250ZXh0LmFyYyhwb3NpdGlvbi54LCAtcG9zaXRpb24ueSwgYWdlbnQuUmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XHJcblxyXG4gICAgbGV0IG1hZ25pdHVkZSA9IGRpcmVjdGlvbi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChtYWduaXR1ZGUgIT09IDApIHtcclxuICAgICAgdGhpcy5jb250ZXh0Lm1vdmVUbyhwb3NpdGlvbi54LCAtcG9zaXRpb24ueSk7XHJcbiAgICAgIGxldCBuZXdQb3MgPSBwb3NpdGlvbi5hZGQoXHJcbiAgICAgICAgZGlyZWN0aW9uLmRpdmlkZShtYWduaXR1ZGUpLm11bHRpcGx5KGFnZW50LlJhZGl1cylcclxuICAgICAgKTtcclxuICAgICAgdGhpcy5jb250ZXh0LmxpbmVUbyhuZXdQb3MueCwgLW5ld1Bvcy55KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRyYXdDaXJjbGVPYnN0YWNsZShvYnN0YWNsZTogQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuYXJjKFxyXG4gICAgICBvYnN0YWNsZS5Qb3NpdGlvbi54LFxyXG4gICAgICAtb2JzdGFjbGUuUG9zaXRpb24ueSwgLy8geSBwb3NpdGlvbiBpbnZlcnRlZCB0byBtYXRjaCAzRCB2aWV3XHJcbiAgICAgIG9ic3RhY2xlLlJhZGl1cyxcclxuICAgICAgMCxcclxuICAgICAgMiAqIE1hdGguUElcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgZCA9IG9ic3RhY2xlLlJhZGl1cyAqIE1hdGguU1FSVDFfMjtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggLSBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55IC0gZCk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggKyBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55ICsgZCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0Lm1vdmVUbyhvYnN0YWNsZS5Qb3NpdGlvbi54ICsgZCwgb2JzdGFjbGUuUG9zaXRpb24ueSAtIGQpO1xyXG4gICAgdGhpcy5jb250ZXh0LmxpbmVUbyhvYnN0YWNsZS5Qb3NpdGlvbi54IC0gZCwgb2JzdGFjbGUuUG9zaXRpb24ueSArIGQpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0xpbmVPYnN0YWNsZShvYnN0YWNsZTogTGluZU9ic3RhY2xlKSB7XHJcbiAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0Lm1vdmVUbyhvYnN0YWNsZS5TdGFydC54LCAtb2JzdGFjbGUuU3RhcnQueSk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLkVuZC54LCAtb2JzdGFjbGUuRW5kLnkpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgbW91c2VEb3duID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICB0aGlzLmRyYWcgPSB0cnVlO1xyXG4gICAgdGhpcy5vbGRYID0gZXZlbnQucGFnZVg7XHJcbiAgICB0aGlzLm9sZFkgPSBldmVudC5wYWdlWTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlVXAgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZyA9IGZhbHNlO1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlTW92ZSA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgaWYgKCF0aGlzLmRyYWcpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICB0aGlzLnhQYW4gKz0gZXZlbnQucGFnZVggLSB0aGlzLm9sZFg7XHJcbiAgICB0aGlzLnlQYW4gKz0gZXZlbnQucGFnZVkgLSB0aGlzLm9sZFk7XHJcblxyXG4gICAgdGhpcy5vbGRYID0gZXZlbnQucGFnZVg7XHJcbiAgICB0aGlzLm9sZFkgPSBldmVudC5wYWdlWTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlU2Nyb2xsID0gKGV2ZW50OiBXaGVlbEV2ZW50KSA9PiB7XHJcbiAgICB0aGlzLmNhbWVyYURpc3QgKz0gZXZlbnQuZGVsdGFZO1xyXG4gICAgaWYgKHRoaXMuY2FtZXJhRGlzdCA8IDAuMSkge1xyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgPSAwLjE7XHJcbiAgICB9XHJcblxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBNYXQ0ZiB7XHJcbiAgc3RhdGljIGdldElkZW50aXR5TWF0cml4KCk6IEZsb2F0MzJBcnJheSB7XHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgMCwgMSwgMCwgMCxcclxuICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgMCwgMCwgMCwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0WFJvdGF0aW9uTWF0cml4KGFuZ2xlOiBudW1iZXIpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcyA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgIGNvbnN0IGMgPSBNYXRoLmNvcyhhbmdsZSk7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIDEsIDAsIDAsIDAsXHJcbiAgICAgIDAsIGMsIHMsIDAsXHJcbiAgICAgIDAsLXMsIGMsIDAsXHJcbiAgICAgIDAsIDAsIDAsIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFlSb3RhdGlvbk1hdHJpeChhbmdsZTogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IHMgPSBNYXRoLnNpbihhbmdsZSk7XHJcbiAgICBjb25zdCBjID0gTWF0aC5jb3MoYW5nbGUpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICBjLCAwLC1zLCAwLFxyXG4gICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICBzLCAwLCBjLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRaUm90YXRpb25NYXRyaXgoYW5nbGU6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBzID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgY29uc3QgYyA9IE1hdGguY29zKGFuZ2xlKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgYywgcywgMCwgMCxcclxuICAgICAtcywgYywgMCwgMCxcclxuICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgMCwgMCwgMCwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0VHJhbnNsYXRpb25NYXRyaXgoeDogbnVtYmVyLCB5OiBudW1iZXIsIHo6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgMCwgMSwgMCwgMCxcclxuICAgICAgMCwgMCwgMSwgMCxcclxuICAgICAgeCwgeSwgeiwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0UGVyc3BlY3RpdmVQcm9qZWN0aW9uTWF0cml4KFxyXG4gICAgZm92OiBudW1iZXIsXHJcbiAgICBhc3BlY3RSYXRpbzogbnVtYmVyLFxyXG4gICAgbmVhcjogbnVtYmVyLFxyXG4gICAgZmFyOiBudW1iZXJcclxuICApOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgZiA9IDEuMCAvIE1hdGgudGFuKGZvdiAvIDIpO1xyXG4gICAgY29uc3QgaSA9IDEuMCAvIChuZWFyIC0gZmFyKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgZiAvIGFzcGVjdFJhdGlvLCAwLCAgICAgICAgICAgICAgICAgIDAsICAwLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsIGYsICAgICAgICAgICAgICAgICAgMCwgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgMCwgMCwgICAobmVhciArIGZhcikgKiBpLCAtMSxcclxuICAgICAgICAgICAgICAgICAgICAwLCAwLCBuZWFyICogZmFyICogaSAqIDIsICAwXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBtdWx0aXBseU1hdHJpY2VzKGE6IEZsb2F0MzJBcnJheSwgYjogRmxvYXQzMkFycmF5KTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBGbG9hdDMyQXJyYXkoMTYpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgNDsgaisrKSB7XHJcbiAgICAgICAgbGV0IG51bSA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCA0OyBrKyspIHtcclxuICAgICAgICAgIG51bSArPSBhW2kgKiA0ICsga10gKiBiW2sgKiA0ICsgal07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlc3VsdFtpICogNCArIGpdID0gbnVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIEFnZW50TWVzaCB7XHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIHZlcnRpY2VzID0gW1xyXG4gICAgLy8gcG9zaXRpb24gKyBub3JtYWxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMjI3ODgxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1NTc2MiwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjIyNzg4MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgLTAuMzE0LCAxLjczNjEyMywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgLTAuMzE0LCAzLjM5NjQyNCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAzLjM5NjQyNCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgNC4wMjUwODcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjI1NDc3MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgMy40OTM0NjUsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAxLjY1MDYwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMjI3ODgxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgMC40MDc1NDYsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMS43OTc4MzksIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDEuNzk3ODM5LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMy4yNDc0MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMS43OTc4MzksIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAzLjI0NzQwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDEuNzk3ODM5LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMy4yNDc0MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAzLjI0NzQwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMS43OTc4MzksIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjU4ODM5NiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMS4wLCAwLjAsIDAuMCxcclxuICBdO1xyXG5cclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgaW5kaWNlcyA9IFtcclxuICAgIDY4LCA2NCwgNjYsXHJcbiAgICA2NSwgNzQsIDcyLFxyXG4gICAgNzUsIDc2LCA3MyxcclxuICAgIDc5LCA2NywgNzcsXHJcbiAgICA2LCAwLCAyLFxyXG4gICAgMywgNSwgNyxcclxuICAgIDkxLCA4NCwgOTQsXHJcbiAgICA5MiwgOTAsIDk1LFxyXG4gICAgODMsIDEzLCA4NSxcclxuICAgIDgwLCAxNSwgODcsXHJcbiAgICAxMiwgODEsIDg4LFxyXG4gICAgOCwgMTEsIDksXHJcbiAgICAxMDAsIDk2LCA5OCxcclxuICAgIDEwMywgMTA0LCA5NyxcclxuICAgIDEwNywgMTA4LCAxMDUsXHJcbiAgICAxMTEsIDk5LCAxMDksXHJcbiAgICAyMiwgMTYsIDE4LFxyXG4gICAgMTksIDIxLCAyMyxcclxuICAgIDExNiwgMTE0LCAxMTIsXHJcbiAgICAxMjIsIDEyNCwgMTIwLFxyXG4gICAgMTIzLCAxMTMsIDExNSxcclxuICAgIDEyNywgMjQsIDExOSxcclxuICAgIDI5LCAxMTcsIDI1LFxyXG4gICAgMzEsIDI2LCAyNyxcclxuICAgIDEzMiwgMTI4LCAxMzAsXHJcbiAgICAxMzUsIDEzNiwgMTI5LFxyXG4gICAgMTM5LCAxNDAsIDEzNyxcclxuICAgIDE0MywgMTMxLCAxNDEsXHJcbiAgICAzOCwgMzIsIDM0LFxyXG4gICAgMzUsIDM3LCAzOSxcclxuICAgIDE0NCwgMTQ4LCAxNDYsXHJcbiAgICAxNTIsIDE1MSwgMTQ1LFxyXG4gICAgMTU2LCAxNTUsIDE1MyxcclxuICAgIDE0NywgMTU5LCAxNTcsXHJcbiAgICA0MCwgNDYsIDQyLFxyXG4gICAgNDUsIDQzLCA0NyxcclxuICAgIDE2MiwgMTY0LCAxNjAsXHJcbiAgICAxNzIsIDE3MCwgMTY4LFxyXG4gICAgMTYxLCAxNzEsIDE2MyxcclxuICAgIDQ4LCAxNzUsIDE2NyxcclxuICAgIDE2NSwgNTMsIDQ5LFxyXG4gICAgNTAsIDU1LCA1MSxcclxuICAgIDE3NiwgMTgwLCAxNzgsXHJcbiAgICAxODQsIDE4MywgMTc3LFxyXG4gICAgMTg4LCAxODcsIDE4NSxcclxuICAgIDE3OSwgMTkxLCAxODksXHJcbiAgICA1NiwgNjIsIDU4LFxyXG4gICAgNjEsIDU5LCA2MyxcclxuICAgIDY4LCA3MCwgNjQsXHJcbiAgICA2NSwgNzEsIDc0LFxyXG4gICAgNzUsIDc4LCA3NixcclxuICAgIDc5LCA2OSwgNjcsXHJcbiAgICA2LCA0LCAwLFxyXG4gICAgMywgMSwgNSxcclxuICAgIDkxLCA4NiwgODQsXHJcbiAgICA5MiwgODksIDkwLFxyXG4gICAgODMsIDkzLCAxMyxcclxuICAgIDgwLCA4MiwgMTUsXHJcbiAgICAxMiwgMTQsIDgxLFxyXG4gICAgOCwgMTAsIDExLFxyXG4gICAgMTAwLCAxMDIsIDk2LFxyXG4gICAgMTAzLCAxMDYsIDEwNCxcclxuICAgIDEwNywgMTEwLCAxMDgsXHJcbiAgICAxMTEsIDEwMSwgOTksXHJcbiAgICAyMiwgMjAsIDE2LFxyXG4gICAgMTksIDE3LCAyMSxcclxuICAgIDExNiwgMTE4LCAxMTQsXHJcbiAgICAxMjIsIDEyNiwgMTI0LFxyXG4gICAgMTIzLCAxMjEsIDExMyxcclxuICAgIDEyNywgMjgsIDI0LFxyXG4gICAgMjksIDEyNSwgMTE3LFxyXG4gICAgMzEsIDMwLCAyNixcclxuICAgIDEzMiwgMTM0LCAxMjgsXHJcbiAgICAxMzUsIDEzOCwgMTM2LFxyXG4gICAgMTM5LCAxNDIsIDE0MCxcclxuICAgIDE0MywgMTMzLCAxMzEsXHJcbiAgICAzOCwgMzYsIDMyLFxyXG4gICAgMzUsIDMzLCAzNyxcclxuICAgIDE0NCwgMTUwLCAxNDgsXHJcbiAgICAxNTIsIDE1NCwgMTUxLFxyXG4gICAgMTU2LCAxNTgsIDE1NSxcclxuICAgIDE0NywgMTQ5LCAxNTksXHJcbiAgICA0MCwgNDQsIDQ2LFxyXG4gICAgNDUsIDQxLCA0MyxcclxuICAgIDE2MiwgMTY2LCAxNjQsXHJcbiAgICAxNzIsIDE3NCwgMTcwLFxyXG4gICAgMTYxLCAxNjksIDE3MSxcclxuICAgIDQ4LCA1MiwgMTc1LFxyXG4gICAgMTY1LCAxNzMsIDUzLFxyXG4gICAgNTAsIDU0LCA1NSxcclxuICAgIDE3NiwgMTgyLCAxODAsXHJcbiAgICAxODQsIDE4NiwgMTgzLFxyXG4gICAgMTg4LCAxOTAsIDE4NyxcclxuICAgIDE3OSwgMTgxLCAxOTEsXHJcbiAgICA1NiwgNjAsIDYyLFxyXG4gICAgNjEsIDU3LCA1OSxcclxuICBdO1xyXG59XHJcbiIsImV4cG9ydCBjbGFzcyBGbG9vck1lc2gge1xyXG4gIHN0YXRpYyBnZXRWZXJ0aWNlcyh3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcikge1xyXG4gICAgY29uc3QgdyA9IHdpZHRoIC8gMjtcclxuICAgIGNvbnN0IGggPSBoZWlnaHQgLyAyO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIFtcclxuICAgICAgLy8gcG9zaXRpb24gKyBub3JtYWxcclxuICAgICAgIHcsIC1oLCAwLjAsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAgICB3LCAgaCwgMC4wLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgICAtdywgLWgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgICAgLXcsICBoLCAwLjAsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIGluZGljZXMgPSBbXHJcbiAgICAxLCAyLCAwLFxyXG4gICAgMSwgMywgMixcclxuICBdXHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIEN5bGluZGVyTWVzaCB7XHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIHZlcnRpY2VzID0gW1xyXG4gICAgLy8gcG9zaXRpb24gKyBub3JtYWxcclxuICAgIC0wLjkyMzg4LCAtMC4zODI2ODMsIDEuMCwgLTAuOTIzOSwgLTAuMzgyNywgMC4wLFxyXG4gICAgLTAuOTIzODgsIC0wLjM4MjY4MywgMC4wLCAtMC45MjM5LCAtMC4zODI3LCAwLjAsXHJcbiAgICAtMC43MDcxMDcsIC0wLjcwNzEwNywgMS4wLCAtMC43MDcxLCAtMC43MDcxLCAwLjAsXHJcbiAgICAtMC43MDcxMDcsIC0wLjcwNzEwNywgMC4wLCAtMC43MDcxLCAtMC43MDcxLCAwLjAsXHJcbiAgICAtMC4zODI2ODQsIC0wLjkyMzg3OSwgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjM4MjY4NCwgLTAuOTIzODc5LCAwLjAsIC0wLjM4MjcsIC0wLjkyMzksIDAuMCxcclxuICAgIC0wLjAsIC0xLjAsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4wLCAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4zODI2ODQsIC0wLjkyMzg4LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4zODI2ODQsIC0wLjkyMzg4LCAwLjAsIDAuMzgyNywgLTAuOTIzOSwgMC4wLFxyXG4gICAgMC43MDcxMDcsIC0wLjcwNzEwNywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNzA3MTA3LCAtMC43MDcxMDcsIDAuMCwgMC43MDcxLCAtMC43MDcxLCAwLjAsXHJcbiAgICAwLjkyMzg4LCAtMC4zODI2ODMsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjkyMzg4LCAtMC4zODI2ODMsIDAuMCwgMC45MjM5LCAtMC4zODI3LCAwLjAsXHJcbiAgICAxLjAsIDAuMCwgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjkyMzg4LCAwLjM4MjY4MywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuOTIzODgsIDAuMzgyNjgzLCAwLjAsIDAuOTIzOSwgMC4zODI3LCAwLjAsXHJcbiAgICAwLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjcwNzEwNywgMC43MDcxMDcsIDAuMCwgMC43MDcxLCAwLjcwNzEsIDAuMCxcclxuICAgIDAuMzgyNjg0LCAwLjkyMzg4LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4zODI2ODQsIDAuOTIzODgsIDAuMCwgMC4zODI3LCAwLjkyMzksIDAuMCxcclxuICAgIDAuMCwgMS4wLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4wLCAxLjAsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjM4MjY4MywgMC45MjM4OCwgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjM4MjY4MywgMC45MjM4OCwgMC4wLCAtMC4zODI3LCAwLjkyMzksIDAuMCxcclxuICAgIC0wLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC43MDcxMDcsIDAuNzA3MTA3LCAwLjAsIC0wLjcwNzEsIDAuNzA3MSwgMC4wLFxyXG4gICAgLTAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuOTIzODgsIDAuMzgyNjgzLCAwLjAsIC0wLjkyMzksIDAuMzgyNywgMC4wLFxyXG4gICAgLTEuMCwgMC4wLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTEuMCwgMC4wLCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC43MDcxMDcsIDAuNzA3MTA3LCAxLjAsIDAuNzA3MSwgMC43MDcxLCAwLjAsXHJcbiAgICAwLjM4MjY4NCwgMC45MjM4OCwgMS4wLCAwLjM4MjcsIDAuOTIzOSwgMC4wLFxyXG4gICAgLTAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4wLCAxLjAsIDEuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjM4MjY4NCwgLTAuOTIzODc5LCAxLjAsIC0wLjM4MjcsIC0wLjkyMzksIDAuMCxcclxuICAgIC0wLjAsIC0xLjAsIDEuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4zODI2ODMsIDAuOTIzODgsIDEuMCwgLTAuMzgyNywgMC45MjM5LCAwLjAsXHJcbiAgICAtMC43MDcxMDcsIDAuNzA3MTA3LCAxLjAsIC0wLjcwNzEsIDAuNzA3MSwgMC4wLFxyXG4gICAgMC43MDcxMDcsIC0wLjcwNzEwNywgMS4wLCAwLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIDAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAwLjkyMzksIC0wLjM4MjcsIDAuMCxcclxuICAgIC0wLjkyMzg4LCAwLjM4MjY4MywgMS4wLCAtMC45MjM5LCAwLjM4MjcsIDAuMCxcclxuICAgIC0xLjAsIDAuMCwgMS4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIDAuOTIzOSwgMC4zODI3LCAwLjAsXHJcbiAgICAwLjM4MjY4NCwgLTAuOTIzODgsIDEuMCwgMC4zODI3LCAtMC45MjM5LCAwLjAsXHJcbiAgICAxLjAsIDAuMCwgMS4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gIF07XHJcblxyXG4gIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gIHN0YXRpYyBpbmRpY2VzID0gW1xyXG4gICAgMjYsIDM1LCAxMCxcclxuICAgIDE4LCAyMCwgMjIsXHJcbiAgICAyMiwgMjQsIDE4LFxyXG4gICAgMjQsIDI2LCAxOCxcclxuICAgIDI2LCAyOCwgMzAsXHJcbiAgICAzMCwgMzQsIDM1LFxyXG4gICAgMzUsIDQsIDYsXHJcbiAgICA2LCA4LCAxMCxcclxuICAgIDEwLCAxMiwgMTgsXHJcbiAgICAxMiwgMTQsIDE4LFxyXG4gICAgMTQsIDE2LCAxOCxcclxuICAgIDI2LCAzMCwgMzUsXHJcbiAgICAzNSwgNiwgMTAsXHJcbiAgICAxOCwgMjYsIDEwLFxyXG4gICAgMzksIDIzLCAyNSxcclxuICAgIDQwLCAyNSwgMjcsXHJcbiAgICA0MywgMjcsIDI5LFxyXG4gICAgNDQsIDI5LCAzMSxcclxuICAgIDM2LCAyMSwgMjMsXHJcbiAgICAzMywgMTksIDIxLFxyXG4gICAgMzIsIDE3LCAxOSxcclxuICAgIDQ1LCAxNSwgMTcsXHJcbiAgICA0NywgMTMsIDE1LFxyXG4gICAgNDIsIDExLCAxMyxcclxuICAgIDQxLCA5LCAxMSxcclxuICAgIDQ2LCA3LCA5LFxyXG4gICAgMzgsIDUsIDcsXHJcbiAgICAzNywgMywgNSxcclxuICAgIDIsIDEsIDMsXHJcbiAgICAwLCAzMSwgMSxcclxuICAgIDM5LCAzNiwgMjMsXHJcbiAgICA0MCwgMzksIDI1LFxyXG4gICAgNDMsIDQwLCAyNyxcclxuICAgIDQ0LCA0MywgMjksXHJcbiAgICAzNiwgMzMsIDIxLFxyXG4gICAgMzMsIDMyLCAxOSxcclxuICAgIDMyLCA0NSwgMTcsXHJcbiAgICA0NSwgNDcsIDE1LFxyXG4gICAgNDcsIDQyLCAxMyxcclxuICAgIDQyLCA0MSwgMTEsXHJcbiAgICA0MSwgNDYsIDksXHJcbiAgICA0NiwgMzgsIDcsXHJcbiAgICAzOCwgMzcsIDUsXHJcbiAgICAzNywgMiwgMyxcclxuICAgIDIsIDAsIDEsXHJcbiAgICAwLCA0NCwgMzEsXHJcbiAgXTtcclxufVxyXG4iLCJpbXBvcnQgeyBMaW5lT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0xpbmVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9tYXRocy9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFdhbGxNZXNoIHtcclxuICBzdGF0aWMgZ2V0VmVydGljZXMod2FsbDogTGluZU9ic3RhY2xlKSB7XHJcbiAgICBjb25zdCBkaXJlY3Rpb24gPSB3YWxsLlN0YXJ0LnN1YnRyYWN0KHdhbGwuRW5kKTtcclxuICAgIGNvbnN0IG5vcm1hbCA9IG5ldyBWZWN0b3IyZigtZGlyZWN0aW9uLnksIGRpcmVjdGlvbi54KS5ub3JtYWxpc2UoKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBbXHJcbiAgICAgIC8vIFBvc2l0aW9uICsgbm9ybWFsXHJcbiAgICAgIHdhbGwuU3RhcnQueCwgd2FsbC5TdGFydC55LCAwLjAsICBub3JtYWwueCwgIG5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuRW5kLngsICAgd2FsbC5FbmQueSwgICAwLjAsICBub3JtYWwueCwgIG5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuU3RhcnQueCwgd2FsbC5TdGFydC55LCAxLjAsICBub3JtYWwueCwgIG5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuRW5kLngsICAgd2FsbC5FbmQueSwgICAxLjAsICBub3JtYWwueCwgIG5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuU3RhcnQueCwgd2FsbC5TdGFydC55LCAwLjAsIC1ub3JtYWwueCwgLW5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuRW5kLngsICAgd2FsbC5FbmQueSwgICAwLjAsIC1ub3JtYWwueCwgLW5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuU3RhcnQueCwgd2FsbC5TdGFydC55LCAxLjAsIC1ub3JtYWwueCwgLW5vcm1hbC55LCAwLjAsXHJcbiAgICAgIHdhbGwuRW5kLngsICAgd2FsbC5FbmQueSwgICAxLjAsIC1ub3JtYWwueCwgLW5vcm1hbC55LCAwLjAsXHJcbiAgICBdO1xyXG4gIH1cclxuXHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIGluZGljZXMgPSBbXHJcbiAgICAgIDEsIDIsIDAsXHJcbiAgICAgIDEsIDMsIDIsXHJcbiAgICAgIDUsIDQsIDYsXHJcbiAgICAgIDUsIDYsIDcsXHJcbiAgICBdXHJcbn1cclxuIiwiaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFNpbXVsYXRpb24gfSBmcm9tIFwiLi4vU2ltdWxhdGlvblwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9tYXRocy9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBNYXQ0ZiB9IGZyb20gXCIuLi9tYXRocy9NYXQ0ZlwiO1xyXG5pbXBvcnQgeyBBZ2VudE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0FnZW50TWVzaFwiO1xyXG5pbXBvcnQgeyBGbG9vck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0Zsb29yTWVzaFwiO1xyXG5pbXBvcnQgeyBDeWxpbmRlck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0N5bGluZGVyTWVzaFwiO1xyXG5pbXBvcnQgeyBDaXJjbGVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgV2FsbE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL1dhbGxNZXNoXCI7XHJcblxyXG5jb25zdCB2ZXJ0ZXhTaGFkZXJUZXh0ID0gYFxyXG4gIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG4gIGF0dHJpYnV0ZSB2ZWMzIHZlcnRQb3NpdGlvbjtcclxuICBhdHRyaWJ1dGUgdmVjMyB2ZXJ0Tm9ybWFsO1xyXG4gIHZhcnlpbmcgdmVjMyBmcmFnQ29sb3VyO1xyXG5cclxuICB1bmlmb3JtIG1hdDQgcHJvak1hdDtcclxuICB1bmlmb3JtIG1hdDQgdmlld01hdDtcclxuICB1bmlmb3JtIG1hdDQgd29ybGRNYXQ7XHJcblxyXG4gIHVuaWZvcm0gdmVjMiBwb3NpdGlvbjtcclxuICB1bmlmb3JtIHZlYzIgZGlyZWN0aW9uO1xyXG4gIHVuaWZvcm0gZmxvYXQgcmFkaXVzO1xyXG4gIHVuaWZvcm0gZmxvYXQgaGVpZ2h0O1xyXG4gIHVuaWZvcm0gdmVjMyBiYXNlQ29sb3VyO1xyXG5cclxuICB2b2lkIG1haW4oKVxyXG4gIHtcclxuICAgIG1lZGl1bXAgdmVjMyBhbWJpZW50ID0gdmVjMygwLjI2LCAwLjM4LCAwLjQ5KTtcclxuICAgIG1lZGl1bXAgdmVjMyBsaWdodENvbG91ciA9IHZlYzMoMS4wLCAxLjAsIDAuOCk7XHJcbiAgICBtZWRpdW1wIHZlYzMgbGlnaHREaXJlY3Rpb24gPSBub3JtYWxpemUodmVjMygtMC4yLCAtMC4zLCAxLjApKTtcclxuXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZFZlcnQgPSB2ZWMzKHZlcnRQb3NpdGlvbi54ICogZGlyZWN0aW9uLnggLSB2ZXJ0UG9zaXRpb24ueSAqIGRpcmVjdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0UG9zaXRpb24ueCAqIGRpcmVjdGlvbi55ICsgdmVydFBvc2l0aW9uLnkgKiBkaXJlY3Rpb24ueCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydFBvc2l0aW9uLnopO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgIGdsX1Bvc2l0aW9uID0gcHJvak1hdCAqIHZpZXdNYXQgKiB3b3JsZE1hdCAqIHZlYzQocm90YXRlZFZlcnQueCAqIHJhZGl1cyArIHBvc2l0aW9uLngsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZWRWZXJ0LnkgKiByYWRpdXMgKyBwb3NpdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGVkVmVydC56ICogaGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLjApO1xyXG4gICAgXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZE5vcm1hbCA9IHZlYzModmVydE5vcm1hbC54ICogZGlyZWN0aW9uLnggLSB2ZXJ0Tm9ybWFsLnkgKiBkaXJlY3Rpb24ueSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0Tm9ybWFsLnggKiBkaXJlY3Rpb24ueSArIHZlcnROb3JtYWwueSAqIGRpcmVjdGlvbi54LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnROb3JtYWwueik7XHJcbiAgICBcclxuICAgIG1lZGl1bXAgdmVjMyBkaXJlY3Rpb25hbCA9IGxpZ2h0Q29sb3VyICogbWF4KGRvdChyb3RhdGVkTm9ybWFsLCBsaWdodERpcmVjdGlvbiksIDAuMCk7XHJcbiAgICBmcmFnQ29sb3VyID0gKGFtYmllbnQgKyBkaXJlY3Rpb25hbCkgKiBiYXNlQ29sb3VyO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGZyYWdtZW50U2hhZGVyVGV4dCA9IGBcclxuICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuICB2YXJ5aW5nIHZlYzMgZnJhZ0NvbG91cjtcclxuXHJcbiAgdm9pZCBtYWluKClcclxuICB7XHJcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGZyYWdDb2xvdXIsIDEpO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjbGFzcyBSZW5kZXJlcjNEIGltcGxlbWVudHMgSVJlbmRlcmVyIHtcclxuICAvLyBSZW5kZXJpbmdcclxuICBwcml2YXRlIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgcHJpdmF0ZSBnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0O1xyXG4gIHByaXZhdGUgcHJvZ3JhbTogV2ViR0xQcm9ncmFtO1xyXG4gIHByaXZhdGUgVmVydGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIEluZGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIHBvc2l0aW9uQXR0cmlidXRlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBub3JtYWxBdHRyaWJ1dGU6IG51bWJlcjtcclxuICBwcml2YXRlIHByb2pNYXRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgdmlld01hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSB3b3JsZE1hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBwb3NWZWNMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgZGlyVmVjTG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIHJhZGl1c0xvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBoZWlnaHRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgYmFzZUNvbG91ckxvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcblxyXG4gIC8vIENhbWVyYSBjb250cm9sc1xyXG4gIHByaXZhdGUgZHJhZzogYm9vbGVhbjtcclxuICBwcml2YXRlIG9sZFg6IG51bWJlcjtcclxuICBwcml2YXRlIG9sZFk6IG51bWJlcjtcclxuICBwcml2YXRlIHhSb3QgPSAwO1xyXG4gIHByaXZhdGUgeVJvdCA9IDA7XHJcbiAgcHJpdmF0ZSBjYW1lcmFEaXN0ID0gODAwOyAvLyBTdGFydCBjYW1lcmEgODAwICdweCcgYXdheVxyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuXHJcbiAgICAvLyBHZXQgV2ViR0wgY29udGV4dFxyXG4gICAgdGhpcy5nbCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIldlYkdMIG5vdCBzdXBwb3J0ZWRcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDb21waWxlIHNoYWRlcnNcclxuICAgIGNvbnN0IHZlcnRleFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuVkVSVEVYX1NIQURFUik7XHJcbiAgICBjb25zdCBmcmFnbWVudFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuRlJBR01FTlRfU0hBREVSKTtcclxuXHJcbiAgICB0aGlzLmdsLnNoYWRlclNvdXJjZSh2ZXJ0ZXhTaGFkZXIsIHZlcnRleFNoYWRlclRleHQpO1xyXG4gICAgdGhpcy5nbC5zaGFkZXJTb3VyY2UoZnJhZ21lbnRTaGFkZXIsIGZyYWdtZW50U2hhZGVyVGV4dCk7XHJcblxyXG4gICAgdGhpcy5nbC5jb21waWxlU2hhZGVyKHZlcnRleFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKHZlcnRleFNoYWRlciwgdGhpcy5nbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBcIkVSUk9SIGNvbXBpbGluZyB2ZXJ0ZXggc2hhZGVyXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRTaGFkZXJJbmZvTG9nKHZlcnRleFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcihmcmFnbWVudFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKGZyYWdtZW50U2hhZGVyLCB0aGlzLmdsLkNPTVBJTEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgY29tcGlsaW5nIGZyYWdtZW50IHNoYWRlclwiLFxyXG4gICAgICAgIHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyhmcmFnbWVudFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENyZWF0ZSBhbmQgdmFsaWRhdGUgcHJvZ3JhbVxyXG4gICAgdGhpcy5wcm9ncmFtID0gdGhpcy5nbC5jcmVhdGVQcm9ncmFtKCk7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIHZlcnRleFNoYWRlcik7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIGZyYWdtZW50U2hhZGVyKTtcclxuICAgIHRoaXMuZ2wubGlua1Byb2dyYW0odGhpcy5wcm9ncmFtKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuTElOS19TVEFUVVMpKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgXCJFUlJPUiBsaW5raW5nIHByb2dyYW1cIixcclxuICAgICAgICB0aGlzLmdsLmdldFByb2dyYW1JbmZvTG9nKHRoaXMucHJvZ3JhbSlcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wudmFsaWRhdGVQcm9ncmFtKHRoaXMucHJvZ3JhbSk7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuVkFMSURBVEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgdmFsaWRhdGluZyBwcm9ncmFtXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRQcm9ncmFtSW5mb0xvZyh0aGlzLnByb2dyYW0pXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTZXQgV2ViR0wgc2V0dGluZ3NcclxuICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xyXG4gICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5ERVBUSF9URVNUKTtcclxuICAgIHRoaXMuZ2wuY2xlYXJDb2xvcigwLjUzLCAwLjc2LCAwLjk4LCAxLjApO1xyXG5cclxuICAgIHRoaXMuZ2wuZW5hYmxlKHRoaXMuZ2wuQ1VMTF9GQUNFKTtcclxuICAgIHRoaXMuZ2wuZnJvbnRGYWNlKHRoaXMuZ2wuQ0NXKTtcclxuICAgIHRoaXMuZ2wuY3VsbEZhY2UodGhpcy5nbC5CQUNLKTtcclxuXHJcbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMubW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgdGhpcy5tb3VzZU1vdmUsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLm1vdXNlU2Nyb2xsLCB7IHBhc3NpdmU6IGZhbHNlIH0pO1xyXG5cclxuICAgIC8vIEdldCB1bmlmb3JtIGxvY2F0aW9uc1xyXG4gICAgdGhpcy5wcm9qTWF0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInByb2pNYXRcIik7XHJcbiAgICB0aGlzLnZpZXdNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwidmlld01hdFwiKTtcclxuICAgIHRoaXMud29ybGRNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwid29ybGRNYXRcIik7XHJcbiAgICB0aGlzLnBvc1ZlY0xvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJwb3NpdGlvblwiKTtcclxuICAgIHRoaXMuZGlyVmVjTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImRpcmVjdGlvblwiKTtcclxuICAgIHRoaXMucmFkaXVzTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInJhZGl1c1wiKTtcclxuICAgIHRoaXMuaGVpZ2h0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImhlaWdodFwiKTtcclxuICAgIHRoaXMuYmFzZUNvbG91ckxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJiYXNlQ29sb3VyXCIpO1xyXG5cclxuICAgIC8vIFNldCB1cCBtYXRyaWNlc1xyXG4gICAgY29uc3QgcHJvamVjdGlvbk1hdHJpeCA9IE1hdDRmLmdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgICAgNDUgKiAoTWF0aC5QSSAvIDE4MCksIC8vIDQ1ZGVnIHktYXhpcyBGT1ZcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmNhbnZhcy5oZWlnaHQsXHJcbiAgICAgIDAuMSxcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ICsgMjAwMFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB2aWV3TWF0cml4ID0gTWF0NGYuZ2V0VHJhbnNsYXRpb25NYXRyaXgoMCwgMCwgLXRoaXMuY2FtZXJhRGlzdCk7IC8vIE1vdmUgY2FtZXJhIGJhY2sgb24geiBheGlzXHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLmdldElkZW50aXR5TWF0cml4KCk7XHJcblxyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMudmlld01hdExvYywgZmFsc2UsIHZpZXdNYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMud29ybGRNYXRMb2MsIGZhbHNlLCB3b3JsZE1hdHJpeCk7XHJcbiAgfVxyXG5cclxuICBpbml0KHNpbXVsYXRpb246IFNpbXVsYXRpb24pOiB2b2lkIHtcclxuICAgIGNvbnN0IGZsb29yVmVydHMgPSBGbG9vck1lc2guZ2V0VmVydGljZXMoMTI4MCAqIDQgKyAxMDAsIDY0MCAqIDQgKyAxMDApO1xyXG5cclxuICAgIGNvbnN0IHdhbGxzOiBMaW5lT2JzdGFjbGVbXSA9IHNpbXVsYXRpb25cclxuICAgICAgLmdldE9ic3RhY2xlcygpXHJcbiAgICAgIC5maWx0ZXIoKHgpID0+IHggaW5zdGFuY2VvZiBMaW5lT2JzdGFjbGUpXHJcbiAgICAgIC5tYXAoKHgpID0+IHggYXMgTGluZU9ic3RhY2xlKTsgLy8ga2x1ZGdlIGR1ZSB0byBrbm93biBpc3N1ZSB3aXRoIFRTIHR5cGUgaW5mZXJlbmNlXHJcblxyXG4gICAgY29uc3Qgd2FsbFZlcnRzID0gd2FsbHNcclxuICAgICAgLm1hcCgod2FsbCkgPT4gV2FsbE1lc2guZ2V0VmVydGljZXMod2FsbCkpXHJcbiAgICAgIC5yZWR1Y2UoKGFjYywgdmFsKSA9PiBhY2MuY29uY2F0KHZhbCksIFtdKTtcclxuXHJcbiAgICAvLyBJbml0aWFsaXNlIHZlcnRleCBhbmQgaW5kZXggYnVmZmVyXHJcbiAgICBjb25zdCB2ZXJ0aWNlcyA9IG5ldyBGbG9hdDMyQXJyYXkoXHJcbiAgICAgIEFnZW50TWVzaC52ZXJ0aWNlc1xyXG4gICAgICAgIC5jb25jYXQoQ3lsaW5kZXJNZXNoLnZlcnRpY2VzKVxyXG4gICAgICAgIC5jb25jYXQoZmxvb3JWZXJ0cylcclxuICAgICAgICAuY29uY2F0KHdhbGxWZXJ0cylcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5WZXJ0ZXhCdWZmZXIgPSB0aGlzLmdsLmNyZWF0ZUJ1ZmZlcigpO1xyXG4gICAgdGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuQVJSQVlfQlVGRkVSLCB0aGlzLlZlcnRleEJ1ZmZlcik7XHJcbiAgICB0aGlzLmdsLmJ1ZmZlckRhdGEodGhpcy5nbC5BUlJBWV9CVUZGRVIsIHZlcnRpY2VzLCB0aGlzLmdsLlNUQVRJQ19EUkFXKTtcclxuXHJcbiAgICBjb25zdCBjeWxpbmRlck9mZnNldCA9IEFnZW50TWVzaC52ZXJ0aWNlcy5sZW5ndGggLyA2O1xyXG4gICAgY29uc3QgZmxvb3JPZmZzZXQgPSBjeWxpbmRlck9mZnNldCArIEN5bGluZGVyTWVzaC52ZXJ0aWNlcy5sZW5ndGggLyA2O1xyXG4gICAgY29uc3Qgd2FsbHNPZmZzZXQgPSBmbG9vck9mZnNldCArIGZsb29yVmVydHMubGVuZ3RoIC8gNjtcclxuXHJcbiAgICBjb25zdCB3YWxsSW5kaWNlcyA9IHdhbGxzXHJcbiAgICAgIC5tYXAoKF93YWxsLCBpKSA9PiBXYWxsTWVzaC5pbmRpY2VzLm1hcCgoeCkgPT4geCArIHdhbGxzT2Zmc2V0ICsgaSAqIDgpKVxyXG4gICAgICAucmVkdWNlKChhY2MsIHZhbCkgPT4gYWNjLmNvbmNhdCh2YWwpLCBbXSk7XHJcblxyXG4gICAgY29uc3QgaW5kaWNlcyA9IG5ldyBVaW50MTZBcnJheShcclxuICAgICAgQWdlbnRNZXNoLmluZGljZXNcclxuICAgICAgICAuY29uY2F0KEN5bGluZGVyTWVzaC5pbmRpY2VzLm1hcCgoeCkgPT4geCArIGN5bGluZGVyT2Zmc2V0KSlcclxuICAgICAgICAuY29uY2F0KEZsb29yTWVzaC5pbmRpY2VzLm1hcCgoeCkgPT4geCArIGZsb29yT2Zmc2V0KSlcclxuICAgICAgICAuY29uY2F0KHdhbGxJbmRpY2VzKVxyXG4gICAgKTtcclxuICAgIHRoaXMuSW5kZXhCdWZmZXIgPSB0aGlzLmdsLmNyZWF0ZUJ1ZmZlcigpO1xyXG4gICAgdGhpcy5nbC5iaW5kQnVmZmVyKHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsIHRoaXMuSW5kZXhCdWZmZXIpO1xyXG4gICAgdGhpcy5nbC5idWZmZXJEYXRhKFxyXG4gICAgICB0aGlzLmdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSLFxyXG4gICAgICBpbmRpY2VzLFxyXG4gICAgICB0aGlzLmdsLlNUQVRJQ19EUkFXXHJcbiAgICApO1xyXG5cclxuICAgIC8vIEdldCBhdHRyaWJ1dGUgbG9jYXRpb25zXHJcbiAgICB0aGlzLnBvc2l0aW9uQXR0cmlidXRlID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbihcclxuICAgICAgdGhpcy5wcm9ncmFtLFxyXG4gICAgICBcInZlcnRQb3NpdGlvblwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihcclxuICAgICAgdGhpcy5wb3NpdGlvbkF0dHJpYnV0ZSxcclxuICAgICAgMyxcclxuICAgICAgdGhpcy5nbC5GTE9BVCxcclxuICAgICAgZmFsc2UsXHJcbiAgICAgIDYgKiBGbG9hdDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQsXHJcbiAgICAgIDBcclxuICAgICk7XHJcbiAgICB0aGlzLmdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KHRoaXMucG9zaXRpb25BdHRyaWJ1dGUpO1xyXG5cclxuICAgIHRoaXMubm9ybWFsQXR0cmlidXRlID0gdGhpcy5nbC5nZXRBdHRyaWJMb2NhdGlvbihcclxuICAgICAgdGhpcy5wcm9ncmFtLFxyXG4gICAgICBcInZlcnROb3JtYWxcIlxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLmdsLnZlcnRleEF0dHJpYlBvaW50ZXIoXHJcbiAgICAgIHRoaXMubm9ybWFsQXR0cmlidXRlLFxyXG4gICAgICAzLFxyXG4gICAgICB0aGlzLmdsLkZMT0FULFxyXG4gICAgICBmYWxzZSxcclxuICAgICAgNiAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCxcclxuICAgICAgMyAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxyXG4gICAgKTtcclxuICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGhpcy5ub3JtYWxBdHRyaWJ1dGUpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKHNpbXVsYXRpb246IFNpbXVsYXRpb24pOiB2b2lkIHtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcbiAgICBjb25zdCBvYnN0YWNsZXMgPSBzaW11bGF0aW9uLmdldE9ic3RhY2xlcygpO1xyXG5cclxuICAgIC8vIENsZWFyIGJhY2tncm91bmRcclxuICAgIHRoaXMuZ2wuY2xlYXIodGhpcy5nbC5DT0xPUl9CVUZGRVJfQklUIHwgdGhpcy5nbC5ERVBUSF9CVUZGRVJfQklUKTtcclxuXHJcbiAgICAvLyBEcmF3IGFnZW50c1xyXG4gICAgYWdlbnRzLmZvckVhY2goKGFnZW50KSA9PiB7XHJcbiAgICAgIC8vIFBvc2l0aW9uXHJcbiAgICAgIGNvbnN0IHBvcyA9IGFnZW50LmdldFBvc2l0aW9uKCk7XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMucG9zVmVjTG9jLCBwb3MueCwgcG9zLnkpO1xyXG5cclxuICAgICAgLy8gRGlyZWN0aW9uXHJcbiAgICAgIGxldCBkaXIgPSBhZ2VudC5nZXREaXJlY3Rpb24oKS5ub3JtYWxpc2UoKTtcclxuICAgICAgaWYgKGRpci54ID09IDAgJiYgZGlyLnkgPT0gMCkge1xyXG4gICAgICAgIGRpciA9IG5ldyBWZWN0b3IyZigxLCAwKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLmRpclZlY0xvYywgZGlyLngsIGRpci55KTtcclxuXHJcbiAgICAgIC8vIFJhZGl1cyArIGhlaWdodFxyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLnJhZGl1c0xvYywgYWdlbnQuUmFkaXVzKTtcclxuICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5oZWlnaHRMb2MsIGFnZW50LlJhZGl1cyk7XHJcblxyXG4gICAgICAvLyBCYXNlIGNvbG91clxyXG4gICAgICBjb25zdCBjb2xvciA9IGFnZW50LmdldENvbG91cigpO1xyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0zZihcclxuICAgICAgICB0aGlzLmJhc2VDb2xvdXJMb2MsXHJcbiAgICAgICAgY29sb3IuciAvIDI1NSxcclxuICAgICAgICBjb2xvci5nIC8gMjU1LFxyXG4gICAgICAgIGNvbG9yLmIgLyAyNTVcclxuICAgICAgKTtcclxuXHJcbiAgICAgIC8vIERyYXcgbWVzaFxyXG4gICAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgICBBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGgsXHJcbiAgICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgICAwXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBEcmF3IG9ic3RhY2xlc1xyXG4gICAgbGV0IHdhbGxDb3VudCA9IDA7XHJcbiAgICBvYnN0YWNsZXMuZm9yRWFjaCgob2JzdGFjbGUpID0+IHtcclxuICAgICAgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICAvLyBQb3NpdGlvblxyXG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmKFxyXG4gICAgICAgICAgdGhpcy5wb3NWZWNMb2MsXHJcbiAgICAgICAgICBvYnN0YWNsZS5Qb3NpdGlvbi54LFxyXG4gICAgICAgICAgb2JzdGFjbGUuUG9zaXRpb24ueVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIC8vIERpcmVjdGlvblxyXG4gICAgICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCAxLCAwKTtcclxuXHJcbiAgICAgICAgLy8gUmFkaXVzICsgaGVpZ2h0XHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5yYWRpdXNMb2MsIG9ic3RhY2xlLlJhZGl1cyk7XHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5oZWlnaHRMb2MsIDg0KTtcclxuXHJcbiAgICAgICAgLy8gQ29sb3VyXHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtM2YodGhpcy5iYXNlQ29sb3VyTG9jLCAxLjAsIDEuMCwgMS4wKTtcclxuXHJcbiAgICAgICAgLy8gRHJhdyBtZXNoXHJcbiAgICAgICAgdGhpcy5nbC5kcmF3RWxlbWVudHMoXHJcbiAgICAgICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgICAgIEN5bGluZGVyTWVzaC5pbmRpY2VzLmxlbmd0aCxcclxuICAgICAgICAgIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsXHJcbiAgICAgICAgICBBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGggKiBVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxyXG4gICAgICAgICk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgd2FsbENvdW50Kys7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIERyYXcgZmxvb3JcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMucG9zVmVjTG9jLCAwLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCAxLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMucmFkaXVzTG9jLCAxKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMuaGVpZ2h0TG9jLCAxKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTNmKHRoaXMuYmFzZUNvbG91ckxvYywgMC4yLCAwLjIsIDAuMik7XHJcblxyXG4gICAgdGhpcy5nbC5kcmF3RWxlbWVudHMoXHJcbiAgICAgIHRoaXMuZ2wuVFJJQU5HTEVTLFxyXG4gICAgICBGbG9vck1lc2guaW5kaWNlcy5sZW5ndGgsXHJcbiAgICAgIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsXHJcbiAgICAgIChBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGggKyBDeWxpbmRlck1lc2guaW5kaWNlcy5sZW5ndGgpICpcclxuICAgICAgICBVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVFxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBEcmF3IHdhbGxzXHJcbiAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLnBvc1ZlY0xvYywgMCwgMCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0yZih0aGlzLmRpclZlY0xvYywgMSwgMCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLnJhZGl1c0xvYywgMSk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLmhlaWdodExvYywgODQpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtM2YodGhpcy5iYXNlQ29sb3VyTG9jLCAxLjAsIDEuMCwgMS4wKTtcclxuXHJcbiAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgdGhpcy5nbC5UUklBTkdMRVMsXHJcbiAgICAgIFdhbGxNZXNoLmluZGljZXMubGVuZ3RoICogd2FsbENvdW50LFxyXG4gICAgICB0aGlzLmdsLlVOU0lHTkVEX1NIT1JULFxyXG4gICAgICAoQWdlbnRNZXNoLmluZGljZXMubGVuZ3RoICtcclxuICAgICAgICBDeWxpbmRlck1lc2guaW5kaWNlcy5sZW5ndGggK1xyXG4gICAgICAgIEZsb29yTWVzaC5pbmRpY2VzLmxlbmd0aCkgKlxyXG4gICAgICAgIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBtb3VzZURvd24gPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZyA9IHRydWU7XHJcbiAgICB0aGlzLm9sZFggPSBldmVudC5wYWdlWDtcclxuICAgIHRoaXMub2xkWSA9IGV2ZW50LnBhZ2VZO1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlVXAgPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZyA9IGZhbHNlO1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlTW92ZSA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgaWYgKCF0aGlzLmRyYWcpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICB0aGlzLnhSb3QgKz0gKChldmVudC5wYWdlWCAtIHRoaXMub2xkWCkgKiAyICogTWF0aC5QSSkgLyB0aGlzLmNhbnZhcy53aWR0aDtcclxuICAgIHRoaXMueVJvdCArPSAoKGV2ZW50LnBhZ2VZIC0gdGhpcy5vbGRZKSAqIDIgKiBNYXRoLlBJKSAvIHRoaXMuY2FudmFzLmhlaWdodDtcclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcblxyXG4gICAgLy8gQ2xhbXAgWSByb3RhdGlvblxyXG4gICAgaWYgKHRoaXMueVJvdCA+IDApIHtcclxuICAgICAgdGhpcy55Um90ID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy55Um90IDwgLU1hdGguUEkpIHtcclxuICAgICAgdGhpcy55Um90ID0gLU1hdGguUEk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgeFJvdE1hdCA9IE1hdDRmLmdldFpSb3RhdGlvbk1hdHJpeCh0aGlzLnhSb3QpO1xyXG4gICAgY29uc3QgeVJvdE1hdCA9IE1hdDRmLmdldFhSb3RhdGlvbk1hdHJpeCh0aGlzLnlSb3QpO1xyXG4gICAgY29uc3Qgd29ybGRNYXRyaXggPSBNYXQ0Zi5tdWx0aXBseU1hdHJpY2VzKHhSb3RNYXQsIHlSb3RNYXQpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMud29ybGRNYXRMb2MsIGZhbHNlLCB3b3JsZE1hdHJpeCk7XHJcblxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9O1xyXG5cclxuICBwcml2YXRlIG1vdXNlU2Nyb2xsID0gKGV2ZW50OiBXaGVlbEV2ZW50KSA9PiB7XHJcbiAgICB0aGlzLmNhbWVyYURpc3QgKz0gZXZlbnQuZGVsdGFZO1xyXG4gICAgaWYgKHRoaXMuY2FtZXJhRGlzdCA8IDApIHtcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ID0gMDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB2aWV3TWF0cml4ID0gTWF0NGYuZ2V0VHJhbnNsYXRpb25NYXRyaXgoMCwgMCwgLXRoaXMuY2FtZXJhRGlzdCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy52aWV3TWF0TG9jLCBmYWxzZSwgdmlld01hdHJpeCk7XHJcblxyXG4gICAgY29uc3QgcHJvamVjdGlvbk1hdHJpeCA9IE1hdDRmLmdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgICAgNDUgKiAoTWF0aC5QSSAvIDE4MCksIC8vIDQ1ZGVnIHktYXhpcyBGT1ZcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmNhbnZhcy5oZWlnaHQsXHJcbiAgICAgIDAuMSxcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ICsgMjAwMFxyXG4gICAgKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDRmdih0aGlzLnByb2pNYXRMb2MsIGZhbHNlLCBwcm9qZWN0aW9uTWF0cml4KTtcclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcbn1cclxuIiwiaW1wb3J0IHsgSUFnZW50Q29sbGVjdGlvbiB9IGZyb20gXCIuLi9pbnRlcmZhY2VzL0lBZ2VudENvbGxlY3Rpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuXHJcbmludGVyZmFjZSBOb2RlIHtcclxuICBhZ2VudDogQWdlbnQ7XHJcbiAgbGVmdDogTm9kZTtcclxuICByaWdodDogTm9kZTtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFnZW50VHJlZSBpbXBsZW1lbnRzIElBZ2VudENvbGxlY3Rpb24ge1xyXG4gIHByaXZhdGUgX2FnZW50czogQWdlbnRbXTtcclxuICBwcml2YXRlIF9yb290OiBOb2RlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihhZ2VudHM6IEFnZW50W10pIHtcclxuICAgIHRoaXMuX2FnZW50cyA9IGFnZW50cztcclxuICAgIHRoaXMuX3Jvb3QgPSB0aGlzLmNvbnN0cnVjdFRyZWUodGhpcy5fYWdlbnRzLCB0cnVlKTtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShhZ2VudHM6IEFnZW50W10pOiB2b2lkIHtcclxuICAgIHRoaXMuX2FnZW50cyA9IGFnZW50cztcclxuICAgIHRoaXMuX3Jvb3QgPSB0aGlzLmNvbnN0cnVjdFRyZWUodGhpcy5fYWdlbnRzLCB0cnVlKTtcclxuICB9XHJcblxyXG4gIGdldEFsbCgpOiBBZ2VudFtdIHtcclxuICAgIHJldHVybiB0aGlzLl9hZ2VudHM7XHJcbiAgfVxyXG5cclxuICBnZXROZWlnaGJvdXJzSW5SYW5nZVJlY3RpbGluZWFyKGFnZW50OiBBZ2VudCwgcmFuZ2U6IG51bWJlcik6IEFnZW50W10ge1xyXG4gICAgbGV0IG1pblggPSBhZ2VudC5nZXRQb3NpdGlvbigpLnggLSByYW5nZTtcclxuICAgIGxldCBtaW5ZID0gYWdlbnQuZ2V0UG9zaXRpb24oKS55IC0gcmFuZ2U7XHJcbiAgICBsZXQgbWF4WCA9IGFnZW50LmdldFBvc2l0aW9uKCkueCArIHJhbmdlO1xyXG4gICAgbGV0IG1heFkgPSBhZ2VudC5nZXRQb3NpdGlvbigpLnkgKyByYW5nZTtcclxuXHJcbiAgICBsZXQgY2FuZGlkYXRlcyA9IHRoaXMucmFuZ2VTZWFyY2godGhpcy5fcm9vdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgdHJ1ZSk7XHJcbiAgICByZXR1cm4gY2FuZGlkYXRlcy5maWx0ZXIoKG90aGVyKSA9PiBvdGhlci5JZCAhPT0gYWdlbnQuSWQpO1xyXG4gIH1cclxuXHJcbiAgZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4oYWdlbnQ6IEFnZW50LCByYW5nZTogbnVtYmVyKTogQWdlbnRbXSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlcyA9IHRoaXMuZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhcihhZ2VudCwgcmFuZ2UpO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZXMuZmlsdGVyKFxyXG4gICAgICAob3RoZXIpID0+XHJcbiAgICAgICAgYWdlbnQuZ2V0UG9zaXRpb24oKS5zdWJ0cmFjdChvdGhlci5nZXRQb3NpdGlvbigpKS5tYWduaXR1ZGVTcXJkKCkgPD1cclxuICAgICAgICByYW5nZSAqKiAyXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgZm9yRWFjaChmdW46IChhZ2VudDogQWdlbnQpID0+IHZvaWQpOiB2b2lkIHtcclxuICAgIHRoaXMuX2FnZW50cy5mb3JFYWNoKGZ1bik7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNvbnN0cnVjdFRyZWUoYWdlbnRzOiBBZ2VudFtdLCB4QXhpczogYm9vbGVhbik6IE5vZGUge1xyXG4gICAgaWYgKGFnZW50cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IG1pZCA9IE1hdGguZmxvb3IoYWdlbnRzLmxlbmd0aCAvIDIpO1xyXG5cclxuICAgIGxldCBzb3J0ZWQgPSB4QXhpc1xyXG4gICAgICA/IGFnZW50cy5zb3J0KChhLCBiKSA9PiBhLmdldFBvc2l0aW9uKCkueCAtIGIuZ2V0UG9zaXRpb24oKS54KVxyXG4gICAgICA6IGFnZW50cy5zb3J0KChhLCBiKSA9PiBhLmdldFBvc2l0aW9uKCkueSAtIGIuZ2V0UG9zaXRpb24oKS55KTtcclxuXHJcbiAgICBsZXQgbGVmdCA9IHRoaXMuY29uc3RydWN0VHJlZShzb3J0ZWQuc2xpY2UoMCwgbWlkKSwgIXhBeGlzKTtcclxuICAgIGxldCByaWdodCA9IHRoaXMuY29uc3RydWN0VHJlZShcclxuICAgICAgc29ydGVkLnNsaWNlKG1pZCArIDEsIGFnZW50cy5sZW5ndGgpLFxyXG4gICAgICAheEF4aXNcclxuICAgICk7XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnQ6IGFnZW50c1ttaWRdLCBsZWZ0OiBsZWZ0LCByaWdodDogcmlnaHQgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgcmFuZ2VTZWFyY2goXHJcbiAgICByb290OiBOb2RlLFxyXG4gICAgbWluWDogbnVtYmVyLFxyXG4gICAgbWluWTogbnVtYmVyLFxyXG4gICAgbWF4WDogbnVtYmVyLFxyXG4gICAgbWF4WTogbnVtYmVyLFxyXG4gICAgeEF4aXM6IGJvb2xlYW5cclxuICApOiBBZ2VudFtdIHtcclxuICAgIGlmIChyb290ID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCByZXM6IEFnZW50W10gPSBbXTtcclxuICAgIGlmICh4QXhpcykge1xyXG4gICAgICAvLyBJZiB4IDw9IG1heFggbmVlZCB0byBjaGVjayByaWdodCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueCA8PSBtYXhYKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5yaWdodCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIElmIHggPj0gbWluWCBuZWVkIHRvIGNoZWNrIGxlZnQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPj0gbWluWCkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QubGVmdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIElmIHkgPD0gbWF4WSBuZWVkIHRvIGNoZWNrIHJpZ2h0IHN1YnRyZWVcclxuICAgICAgaWYgKHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS55IDw9IG1heFkpIHtcclxuICAgICAgICByZXMgPSByZXMuY29uY2F0KFxyXG4gICAgICAgICAgdGhpcy5yYW5nZVNlYXJjaChyb290LnJpZ2h0LCBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZLCAheEF4aXMpXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gSWYgeSA+PSBtaW5ZIG5lZWQgdG8gY2hlY2sgbGVmdCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA+PSBtaW5ZKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5sZWZ0LCBtaW5YLCBtaW5ZLCBtYXhYLCBtYXhZLCAheEF4aXMpXHJcbiAgICAgICAgKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIHRoZSBhZ2VudCBpcyBpbiByYW5nZSByYW5nZSBhZGQgdG8gdGhlIHJlc3VsdFxyXG4gICAgaWYgKFxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueCA+PSBtaW5YICYmXHJcbiAgICAgIHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS55ID49IG1pblkgJiZcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPD0gbWF4WCAmJlxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA8PSBtYXhZXHJcbiAgICApIHtcclxuICAgICAgcmVzLnB1c2gocm9vdC5hZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQ29sb3VyIH0gZnJvbSBcIi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuL2ludGVyZmFjZXMvSU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vbWF0aHMvVmVjdG9yMmZcIjtcclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBBZ2VudCB7XHJcbiAgcmVhZG9ubHkgUmFkaXVzOiBudW1iZXI7XHJcbiAgcmVhZG9ubHkgSWQ6IG51bWJlcjtcclxuXHJcbiAgcHJvdGVjdGVkIF9wb3NpdGlvbjogVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9kaXJlY3Rpb246IFZlY3RvcjJmO1xyXG4gIHByb3RlY3RlZCBfZ29hbFBvc2l0aW9uOiBWZWN0b3IyZjtcclxuICBwcm90ZWN0ZWQgX2dldFByZWZlcnJlZFZlbG9jaXR5OiAocG9zaXRpb246IFZlY3RvcjJmKSA9PiBWZWN0b3IyZjtcclxuICBwcm90ZWN0ZWQgX2lzRG9uZTogYm9vbGVhbjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBpZDogbnVtYmVyLFxyXG4gICAgc3RhcnRQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnb2FsUG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICB0aGlzLklkID0gaWQ7XHJcbiAgICB0aGlzLlJhZGl1cyA9IDIwO1xyXG5cclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gc3RhcnRQb3NpdGlvbjtcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGdldFByZWZlcnJlZFZlbG9jaXR5KHN0YXJ0UG9zaXRpb24pOyAvLyBTdGFydCBwb2ludGluZyBpbiBnb2FsIGRpcmVjdGlvblxyXG4gICAgdGhpcy5fZ29hbFBvc2l0aW9uID0gZ29hbFBvc2l0aW9uO1xyXG4gICAgdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkgPSBnZXRQcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgIHRoaXMuX2lzRG9uZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0UG9zaXRpb24oKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Bvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgZ2V0RGlyZWN0aW9uKCk6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXJlY3Rpb247XHJcbiAgfVxyXG5cclxuICBnZXREaXN0YW5jZVRvR29hbCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Bvc2l0aW9uLnN1YnRyYWN0KHRoaXMuX2dvYWxQb3NpdGlvbikubWFnbml0dWRlKCk7XHJcbiAgfVxyXG5cclxuICBpc0RvbmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5faXNEb25lO1xyXG4gIH1cclxuXHJcbiAgYWJzdHJhY3QgZ2V0Q29sb3VyKCk6IENvbG91cjtcclxuICBhYnN0cmFjdCB1cGRhdGUoXHJcbiAgICBkZWx0YVQ6IG51bWJlcixcclxuICAgIG5laWdoYm91cnM6IEFnZW50W10sXHJcbiAgICBvYnN0YWNsZXM6IElPYnN0YWNsZVtdXHJcbiAgKTogdm9pZDtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ29sb3VyIHtcclxuICByOiBudW1iZXI7XHJcbiAgZzogbnVtYmVyO1xyXG4gIGI6IG51bWJlcjtcclxuXHJcbiAgc3RhdGljIFdoaXRlOiBDb2xvdXIgPSB7XHJcbiAgICByOiAyNTUsXHJcbiAgICBnOiAyNTUsXHJcbiAgICBiOiAyNTUsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIFJlZDogQ29sb3VyID0ge1xyXG4gICAgcjogMjU1LFxyXG4gICAgZzogMCxcclxuICAgIGI6IDAsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIEdyZWVuOiBDb2xvdXIgPSB7XHJcbiAgICByOiAwLFxyXG4gICAgZzogMjU1LFxyXG4gICAgYjogMCxcclxuICB9O1xyXG5cclxuICBzdGF0aWMgZnJvbUhzdihoOiBudW1iZXIsIHM6IG51bWJlciwgdjogbnVtYmVyKTogQ29sb3VyIHtcclxuICAgIC8vIEFzc3VtZXMgaHN2IHZhbHVlcyBpbiByYW5nZSAwLTFcclxuICAgIGggKj0gNjtcclxuXHJcbiAgICBjb25zdCBmcmFjdCA9IGggLSBNYXRoLmZsb29yKGgpO1xyXG4gICAgY29uc3QgUCA9IHYgKiAoMSAtIHMpO1xyXG4gICAgY29uc3QgUSA9IHYgKiAoMSAtIHMgKiBmcmFjdCk7XHJcbiAgICBjb25zdCBUID0gdiAqICgxIC0gcyAqICgxIC0gZnJhY3QpKTtcclxuXHJcbiAgICBpZiAoMCA8PSBoICYmIGggPCAxKSB7XHJcbiAgICAgIHJldHVybiB7IHI6IHYgKiAyNTUsIGc6IFQgKiAyNTUsIGI6IFAgKiAyNTUgfTtcclxuICAgIH0gZWxzZSBpZiAoMSA8PSBoICYmIGggPCAyKSB7XHJcbiAgICAgIHJldHVybiB7IHI6IFEgKiAyNTUsIGc6IHYgKiAyNTUsIGI6IFAgKiAyNTUgfTtcclxuICAgIH0gZWxzZSBpZiAoMiA8PSBoICYmIGggPCAzKSB7XHJcbiAgICAgIHJldHVybiB7IHI6IFAgKiAyNTUsIGc6IHYgKiAyNTUsIGI6IFQgKiAyNTUgfTtcclxuICAgIH0gZWxzZSBpZiAoMyA8PSBoICYmIGggPCA0KSB7XHJcbiAgICAgIHJldHVybiB7IHI6IFAgKiAyNTUsIGc6IFEgKiAyNTUsIGI6IHYgKiAyNTUgfTtcclxuICAgIH0gZWxzZSBpZiAoNCA8PSBoICYmIGggPCA1KSB7XHJcbiAgICAgIHJldHVybiB7IHI6IFQgKiAyNTUsIGc6IFAgKiAyNTUsIGI6IHYgKiAyNTUgfTtcclxuICAgIH0gZWxzZSBpZiAoNSA8PSBoICYmIGggPCA2KSB7XHJcbiAgICAgIHJldHVybiB7IHI6IHYgKiAyNTUsIGc6IFAgKiAyNTUsIGI6IFEgKiAyNTUgfTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB7IHI6IDAsIGc6IDAsIGI6IDAgfTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgQ29sb3VyIH0gZnJvbSBcIi4uL0NvbG91clwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCYXNpY0FnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIGdldENvbG91cigpIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5XaGl0ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuR3JlZW47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoXHJcbiAgICBzdGVwU2l6ZTogbnVtYmVyLFxyXG4gICAgX25laWdoYm91cnM6IEFnZW50W10sXHJcbiAgICBfb2JzdGFjbGVzOiBJT2JzdGFjbGVbXVxyXG4gICk6IHZvaWQge1xyXG4gICAgaWYgKHRoaXMuX2lzRG9uZSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcHJlZmVycmVkVmVsb2NpdHkgPSB0aGlzLl9nZXRQcmVmZXJyZWRWZWxvY2l0eSh0aGlzLl9wb3NpdGlvbik7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgZG9uZVxyXG4gICAgaWYgKHByZWZlcnJlZFZlbG9jaXR5Lm1hZ25pdHVkZVNxcmQoKSA8IDAuMSkge1xyXG4gICAgICB0aGlzLl9pc0RvbmUgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU3RlcCB0b3dhcmRzIGdvYWxcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IHByZWZlcnJlZFZlbG9jaXR5O1xyXG4gICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vVmVjdG9yMmZcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBHZW9tZXRyeSB7XHJcbiAgc3RhdGljIGdldENsb3Nlc3RQb2ludE9uTGluZShcclxuICAgIGxpbmVQb2ludDogVmVjdG9yMmYsXHJcbiAgICBsaW5lRGlyZWN0aW9uOiBWZWN0b3IyZixcclxuICAgIHBvaW50OiBWZWN0b3IyZlxyXG4gICk6IFZlY3RvcjJmIHtcclxuICAgIGNvbnN0IGRpcmVjdGlvbiA9IGxpbmVEaXJlY3Rpb24ubm9ybWFsaXNlKCk7XHJcbiAgICBjb25zdCB2ZWN0b3IgPSBwb2ludC5zdWJ0cmFjdChsaW5lUG9pbnQpO1xyXG4gICAgY29uc3QgZGlzdGFuY2UgPSB2ZWN0b3IuZG90KGRpcmVjdGlvbik7XHJcblxyXG4gICAgcmV0dXJuIGxpbmVQb2ludC5hZGQoZGlyZWN0aW9uLm11bHRpcGx5KGRpc3RhbmNlKSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICBjZW50cmU6IFZlY3RvcjJmLFxyXG4gICAgcmFkaXVzOiBudW1iZXIsXHJcbiAgICBvcmlnaW46IFZlY3RvcjJmLFxyXG4gICAgZGlyZWN0aW9uOiBWZWN0b3IyZlxyXG4gICk6IG51bWJlciB7XHJcbiAgICBjb25zdCBkZWx0YSA9IG9yaWdpbi5zdWJ0cmFjdChjZW50cmUpO1xyXG5cclxuICAgIGNvbnN0IGEgPSBkaXJlY3Rpb24uZG90KGRpcmVjdGlvbik7XHJcbiAgICBjb25zdCBiID0gMiAqIGRpcmVjdGlvbi5kb3QoZGVsdGEpO1xyXG4gICAgY29uc3QgYyA9IGRlbHRhLmRvdChkZWx0YSkgLSByYWRpdXMgKiogMjtcclxuXHJcbiAgICBjb25zdCBkaXNjcmltID0gYiAqKiAyIC0gNCAqIGEgKiBjO1xyXG5cclxuICAgIGlmIChkaXNjcmltIDwgMCkge1xyXG4gICAgICAvLyBObyBpbnRlcnNlY3Rpb25cclxuICAgICAgcmV0dXJuIEluZmluaXR5O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNxcnREaXNjcmltID0gTWF0aC5zcXJ0KGRpc2NyaW0pO1xyXG5cclxuICAgIGNvbnN0IGQxID0gKC1iIC0gc3FydERpc2NyaW0pIC8gKDIgKiBhKTtcclxuXHJcbiAgICBpZiAoZDEgPiAwKSB7XHJcbiAgICAgIHJldHVybiBkMTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkMiA9ICgtYiArIHNxcnREaXNjcmltKSAvICgyICogYSk7XHJcblxyXG4gICAgaWYgKGQyID4gMCkge1xyXG4gICAgICByZXR1cm4gZDI7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIEluZmluaXR5O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldExpbmVMaW5lSW50ZXJzZWN0aW9uKFxyXG4gICAgYTE6IFZlY3RvcjJmLFxyXG4gICAgYTI6IFZlY3RvcjJmLFxyXG4gICAgYjE6IFZlY3RvcjJmLFxyXG4gICAgYjI6IFZlY3RvcjJmXHJcbiAgKTogVmVjdG9yMmYge1xyXG4gICAgY29uc3QgZCA9IChhMS54IC0gYTIueCkgKiAoYjEueSAtIGIyLnkpIC0gKGExLnkgLSBhMi55KSAqIChiMS54IC0gYjIueCk7XHJcbiAgICBjb25zdCB1ID1cclxuICAgICAgKChhMi54IC0gYTEueCkgKiAoYTEueSAtIGIxLnkpIC0gKGEyLnkgLSBhMS55KSAqIChhMS54IC0gYjEueCkpIC8gZDtcclxuXHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKGIxLnggKyB1ICogKGIyLnggLSBiMS54KSwgYjEueSArIHUgKiAoYjIueSAtIGIxLnkpKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vbWF0aHMvVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgQ29sb3VyIH0gZnJvbSBcIi4uL0NvbG91clwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IEdlb21ldHJ5IH0gZnJvbSBcIi4uL21hdGhzL0dlb21ldHJ5XCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU3RvcEFnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIHByaXZhdGUgX2lzU3R1Y2s6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ29hbFBvc2l0aW9uOiBWZWN0b3IyZixcclxuICAgIGdldFByZWZlcnJlZFZlbG9jaXR5OiAocG9zaXRpb246IFZlY3RvcjJmKSA9PiBWZWN0b3IyZlxyXG4gICkge1xyXG4gICAgc3VwZXIoaWQsIHN0YXJ0UG9zaXRpb24sIGdvYWxQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgdGhpcy5faXNTdHVjayA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29sb3VyKCk6IENvbG91ciB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuV2hpdGU7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2lzU3R1Y2spIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5SZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gQ29sb3VyLkdyZWVuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKHN0ZXBTaXplOiBudW1iZXIsIG5laWdoYm91cnM6IEFnZW50W10sIG9ic3RhY2xlczogSU9ic3RhY2xlW10pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZlcnJlZFZlbG9jaXR5ID0gdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIGRvbmVcclxuICAgIGlmIChwcmVmZXJyZWRWZWxvY2l0eS5tYWduaXR1ZGVTcXJkKCkgPCAwLjEpIHtcclxuICAgICAgdGhpcy5faXNEb25lID0gdHJ1ZTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhlYWRpbmcgPSB0aGlzLl9wb3NpdGlvbi5hZGQoXHJcbiAgICAgIHByZWZlcnJlZFZlbG9jaXR5Lm5vcm1hbGlzZSgpLm11bHRpcGx5KDI1KVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBibG9ja2VkIGJ5IGFub3RoZXIgYWdlbnRcclxuICAgIHRoaXMuX2lzU3R1Y2sgPSBmYWxzZTtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVpZ2hib3Vycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAodGhpcy5jb2xsaWRlc0FnZW50KG5laWdoYm91cnNbaV0sIGhlYWRpbmcpKSB7XHJcbiAgICAgICAgdGhpcy5faXNTdHVjayA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgYmxvY2tlZCBieSBhbiBvYnN0YWNsZVxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYnN0YWNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKHRoaXMuY29sbGlkZXNPYnN0YWNsZShvYnN0YWNsZXNbaV0sIGhlYWRpbmcpKSB7XHJcbiAgICAgICAgdGhpcy5faXNTdHVjayA9IHRydWU7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU3RlcCB0b3dhcmRzIGdvYWxcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IHByZWZlcnJlZFZlbG9jaXR5O1xyXG4gICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgfVxyXG5cclxuICBjb2xsaWRlc0FnZW50KGFnZW50OiBBZ2VudCwgcG9zaXRpb246IFZlY3RvcjJmKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBhZ2VudC5nZXRQb3NpdGlvbigpLnN1YnRyYWN0KHBvc2l0aW9uKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAoYWdlbnQuUmFkaXVzICsgdGhpcy5SYWRpdXMpICogKGFnZW50LlJhZGl1cyArIHRoaXMuUmFkaXVzKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGNvbGxpZGVzT2JzdGFjbGUob2JzdGFjbGU6IElPYnN0YWNsZSwgcG9zaXRpb246IFZlY3RvcjJmKTogYm9vbGVhbiB7XHJcbiAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICByZXR1cm4gKFxyXG4gICAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLnN1YnRyYWN0KHBvc2l0aW9uKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgIChvYnN0YWNsZS5SYWRpdXMgKyB0aGlzLlJhZGl1cykgKiAob2JzdGFjbGUuUmFkaXVzICsgdGhpcy5SYWRpdXMpXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2UgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgTGluZU9ic3RhY2xlKSB7XHJcbiAgICAgIGNvbnN0IHQgPSBHZW9tZXRyeS5nZXRGaXJzdFJheUNpcmNsZUludGVyc2VjdGlvbihcclxuICAgICAgICBwb3NpdGlvbixcclxuICAgICAgICB0aGlzLlJhZGl1cyxcclxuICAgICAgICBvYnN0YWNsZS5TdGFydCxcclxuICAgICAgICBvYnN0YWNsZS5FbmQuc3VidHJhY3Qob2JzdGFjbGUuU3RhcnQpXHJcbiAgICAgICk7XHJcblxyXG4gICAgICByZXR1cm4gdCA+IDAgJiYgdCA8IDE7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuLi9Db2xvdXJcIjtcclxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vbWF0aHMvR2VvbWV0cnlcIjtcclxuaW1wb3J0IHsgSU9ic3RhY2xlIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvSU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IENpcmNsZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9DaXJjbGVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBMaW5lT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0xpbmVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9tYXRocy9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBWZWxvY2l0eU9ic3RhY2xlIH0gZnJvbSBcIi4uL21hdGhzL1ZlbG9jaXR5T2JzdGFjbGVcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBWT0FnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIHByaXZhdGUgX2NvbG91cjogQ29sb3VyO1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGlkOiBudW1iZXIsXHJcbiAgICBzdGFydFBvc2l0aW9uOiBWZWN0b3IyZixcclxuICAgIGdvYWxQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmZcclxuICApIHtcclxuICAgIHN1cGVyKGlkLCBzdGFydFBvc2l0aW9uLCBnb2FsUG9zaXRpb24sIGdldFByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5HcmVlbjtcclxuICB9XHJcblxyXG4gIGdldENvbG91cigpOiBDb2xvdXIge1xyXG4gICAgcmV0dXJuIHRoaXMuX2NvbG91cjtcclxuICB9XHJcblxyXG4gIHVwZGF0ZShzdGVwU2l6ZTogbnVtYmVyLCBuZWlnaGJvdXJzOiBBZ2VudFtdLCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVmZXJyZWRWZWxvY2l0eSA9IHRoaXMuX2dldFByZWZlcnJlZFZlbG9jaXR5KHRoaXMuX3Bvc2l0aW9uKTtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBkb25lXHJcbiAgICBpZiAocHJlZmVycmVkVmVsb2NpdHkubWFnbml0dWRlU3FyZCgpIDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuX2lzRG9uZSA9IHRydWU7XHJcbiAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuICAgICAgdGhpcy5fY29sb3VyID0gQ29sb3VyLldoaXRlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHNhZmUgPSB0cnVlO1xyXG4gICAgbGV0IGNvbGxpc2lvbjtcclxuICAgIGxldCBhZ2VudDtcclxuXHJcbiAgICAvLyBDaGVjayBmb3IgY29sbGlzaW9uIHdpdGggbmVpZ2hib3VyaW5nIGFnZW50c1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSB0aGlzLmdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShuZWlnaGJvdXJzW2ldKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJlxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocHJlZmVycmVkVmVsb2NpdHkpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHNhZmUgPSBmYWxzZTtcclxuICAgICAgICBjb2xsaXNpb24gPSB2ZWxvY2l0eU9ic3RhY2xlO1xyXG4gICAgICAgIGFnZW50ID0gaTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIENoZWNrIGZvciBjb2xsaXNpb24gd2l0aCBvYnN0YWNsZXNcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JzdGFjbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSBvYnN0YWNsZXNbaV0uZ2V0VmVsb2NpdHlPYnN0YWNsZSh0aGlzKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJlxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocHJlZmVycmVkVmVsb2NpdHkpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHNhZmUgPSBmYWxzZTtcclxuICAgICAgICBjb2xsaXNpb24gPSB2ZWxvY2l0eU9ic3RhY2xlO1xyXG4gICAgICAgIGFnZW50ID0gLTE7IC8vIG5vdCBjb2xsaWRpbmcgd2l0aCBhbiBhZ2VudFxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgcHJlZmVycmVkIHZlbG9jaXR5IGlzIHNhZmUsIGdvIGluIHRoYXQgZGlyZWN0aW9uXHJcbiAgICBpZiAoc2FmZSkge1xyXG4gICAgICB0aGlzLl9kaXJlY3Rpb24gPSBwcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5HcmVlbjtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIG5vdCwgdHJ5IGNsb3Nlc3QgcG9pbnQgb24gbGVmdCBhbmQgcmlnaHQgZWRnZSBvZiBjb25lXHJcbiAgICBpZiAoY29sbGlzaW9uICE9IG51bGwpIHtcclxuICAgICAgY29uc3QgbGVmdCA9IEdlb21ldHJ5LmdldENsb3Nlc3RQb2ludE9uTGluZShcclxuICAgICAgICBjb2xsaXNpb24udmVydGV4LFxyXG4gICAgICAgIGNvbGxpc2lvbi50YW5nZW50MixcclxuICAgICAgICBwcmVmZXJyZWRWZWxvY2l0eVxyXG4gICAgICApO1xyXG5cclxuICAgICAgY29uc3QgcmlnaHQgPSBHZW9tZXRyeS5nZXRDbG9zZXN0UG9pbnRPbkxpbmUoXHJcbiAgICAgICAgY29sbGlzaW9uLnZlcnRleCxcclxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudDEsXHJcbiAgICAgICAgcHJlZmVycmVkVmVsb2NpdHlcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGxldCBsZWZ0U2FmZSA9IHRydWU7XHJcbiAgICAgIGxldCByaWdodFNhZmUgPSB0cnVlO1xyXG5cclxuICAgICAgLy8gQ2hlY2sgZm9yIGNvbGxpc2lvbiB3aXRoIG5laWdoYm91cmluZyBhZ2VudHNcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGkgIT0gYWdlbnQpIHtcclxuICAgICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSB0aGlzLmdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShuZWlnaGJvdXJzW2ldKTtcclxuICAgICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiYgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhsZWZ0KSkge1xyXG4gICAgICAgICAgICBsZWZ0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJiB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHJpZ2h0KSkge1xyXG4gICAgICAgICAgICByaWdodFNhZmUgPSBmYWxzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENoZWNrIGZvciBjb2xsaXNpb24gd2l0aCBvYnN0YWNsZXNcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYnN0YWNsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gb2JzdGFjbGVzW2ldLmdldFZlbG9jaXR5T2JzdGFjbGUodGhpcyk7XHJcbiAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJiB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKGxlZnQpKSB7XHJcbiAgICAgICAgICBsZWZ0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSAhPSBudWxsICYmIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocmlnaHQpKSB7XHJcbiAgICAgICAgICByaWdodFNhZmUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChsZWZ0U2FmZSAmJiByaWdodFNhZmUpIHtcclxuICAgICAgICAvLyBJZiBib3RoIGFyZSBzYWZlIHRha2UgY2xvc2VzdCB0byBwcmVmZXJyZWQgdmVsb2NpdHlcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICBsZWZ0LnN1YnRyYWN0KHByZWZlcnJlZFZlbG9jaXR5KS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgICAgcmlnaHQuc3VidHJhY3QocHJlZmVycmVkVmVsb2NpdHkpLm1hZ25pdHVkZVNxcmQoKVxyXG4gICAgICAgICkge1xyXG4gICAgICAgICAgdGhpcy5fZGlyZWN0aW9uID0gbGVmdDtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdGhpcy5fZGlyZWN0aW9uID0gcmlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGVsc2UgaWYgKGxlZnRTYWZlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlyZWN0aW9uID0gbGVmdDtcclxuICAgICAgfSBlbHNlIGlmIChyaWdodFNhZmUpIHtcclxuICAgICAgICB0aGlzLl9kaXJlY3Rpb24gPSByaWdodDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGxlZnRTYWZlIHx8IHJpZ2h0U2FmZSkge1xyXG4gICAgICAgIHRoaXMuX3Bvc2l0aW9uID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gICAgICAgIHRoaXMuc2V0Q29sb3VyKHByZWZlcnJlZFZlbG9jaXR5KTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBFbHNlLCBzYW1wbGUgcmFuZG9tIHZlbG9jaXRpZXMgYW5kIHNlbGVjdCB0aGUgb25lIHdpdGggdGhlIGxlYXN0IHBlbmFsdHlcclxuICAgIGNvbnN0IHNhbXBsZXMgPSAxMDA7IC8vIG51bWJlciBvZiB2ZWxvY2l0aWVzIHRvIHRyeVxyXG4gICAgY29uc3QgdyA9IDIwMDsgLy8gcGFyYW1ldGVyIGZvciBwZW5hbHR5XHJcbiAgICBsZXQgbWluUGVuYWx0eSA9IEluZmluaXR5O1xyXG4gICAgbGV0IGJlc3RWZWxvY2l0eSA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNhbXBsZXM7IGkrKykge1xyXG4gICAgICAvLyBTYW1wbGUgdmVsb2NpdHkgZnJvbSBlbnRpcmUgYWxsb3dlZCB2ZWxvY2l0eSBzcGFjZVxyXG4gICAgICBjb25zdCBzYW1wbGUgPSBuZXcgVmVjdG9yMmYoMCwgMCkuc2FtcGxlKDEpO1xyXG4gICAgICBsZXQgbWluVGltZVRvQ29sbGlzaW9uID0gSW5maW5pdHk7XHJcblxyXG4gICAgICAvLyBGaW5kIHRpbWUgdG8gZmlyc3QgY29sbGlzaW9uIHdpdGggYW5vdGhlciBhZ2VudFxyXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IG5laWdoYm91cnMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICBjb25zdCBiID0gbmVpZ2hib3Vyc1tqXTtcclxuICAgICAgICBjb25zdCB2ZWxvY2l0eU9ic3RhY2xlID0gdGhpcy5nZXRBZ2VudFZlbG9jaXR5T2JzdGFjbGUoYik7XHJcblxyXG4gICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlID09IG51bGwgfHwgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhzYW1wbGUpKSB7XHJcbiAgICAgICAgICBjb25zdCB0aW1lVG9Db2xsaXNpb24gPSBHZW9tZXRyeS5nZXRGaXJzdFJheUNpcmNsZUludGVyc2VjdGlvbihcclxuICAgICAgICAgICAgbmV3IFZlY3RvcjJmKDAsIDApLFxyXG4gICAgICAgICAgICB0aGlzLlJhZGl1cyArIGIuUmFkaXVzLFxyXG4gICAgICAgICAgICB0aGlzLl9wb3NpdGlvbi5zdWJ0cmFjdChiLmdldFBvc2l0aW9uKCkpLFxyXG4gICAgICAgICAgICBzYW1wbGUuc3VidHJhY3QoYi5nZXREaXJlY3Rpb24oKSlcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgaWYgKHRpbWVUb0NvbGxpc2lvbiA8IG1pblRpbWVUb0NvbGxpc2lvbikge1xyXG4gICAgICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSB0aW1lVG9Db2xsaXNpb247XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBGaW5kIHRpbWUgdG8gZmlyc3QgY29sbGlzaW9uIHdpdGggYW4gb2JzdGFjbGVcclxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBvYnN0YWNsZXMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICBjb25zdCBiID0gb2JzdGFjbGVzW2pdO1xyXG4gICAgICAgIGlmIChiIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSBiLmdldFZlbG9jaXR5T2JzdGFjbGUodGhpcyk7XHJcblxyXG4gICAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgPT0gbnVsbCB8fCB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHNhbXBsZSkpIHtcclxuICAgICAgICAgICAgY29uc3QgdGltZVRvQ29sbGlzaW9uID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgICAgbmV3IFZlY3RvcjJmKDAsIDApLFxyXG4gICAgICAgICAgICAgIHRoaXMuUmFkaXVzICsgYi5SYWRpdXMsXHJcbiAgICAgICAgICAgICAgdGhpcy5fcG9zaXRpb24uc3VidHJhY3QoYi5Qb3NpdGlvbiksXHJcbiAgICAgICAgICAgICAgc2FtcGxlXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICBpZiAodGltZVRvQ29sbGlzaW9uIDwgbWluVGltZVRvQ29sbGlzaW9uKSB7XHJcbiAgICAgICAgICAgICAgbWluVGltZVRvQ29sbGlzaW9uID0gdGltZVRvQ29sbGlzaW9uO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIGlmIChiIGluc3RhbmNlb2YgTGluZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgICBjb25zdCB0aW1lVG9Db2xsaXNpb24gPVxyXG4gICAgICAgICAgICAoR2VvbWV0cnkuZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgICAgYi5TdGFydCxcclxuICAgICAgICAgICAgICBiLkVuZCxcclxuICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbixcclxuICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbi5hZGQoc2FtcGxlLm5vcm1hbGlzZSgpLm11bHRpcGx5KHRoaXMuUmFkaXVzKSlcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgIC5zdWJ0cmFjdCh0aGlzLl9wb3NpdGlvbilcclxuICAgICAgICAgICAgICAubWFnbml0dWRlKCkgLVxyXG4gICAgICAgICAgICAgIHRoaXMuUmFkaXVzKSAvXHJcbiAgICAgICAgICAgIHNhbXBsZS5tYWduaXR1ZGUoKTtcclxuXHJcbiAgICAgICAgICBpZiAodGltZVRvQ29sbGlzaW9uIDwgbWluVGltZVRvQ29sbGlzaW9uKSB7XHJcbiAgICAgICAgICAgIG1pblRpbWVUb0NvbGxpc2lvbiA9IHRpbWVUb0NvbGxpc2lvbjtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENhbGN1bGF0ZSBwZW5hbHR5XHJcbiAgICAgIGNvbnN0IHBlbmFsdHkgPVxyXG4gICAgICAgIHcgLyBtaW5UaW1lVG9Db2xsaXNpb24gKyBwcmVmZXJyZWRWZWxvY2l0eS5zdWJ0cmFjdChzYW1wbGUpLm1hZ25pdHVkZSgpOyAvLyBUUyBjb3JyZWN0bHkgaGFuZGxlcyBkaXZpZGUgYnkgemVybyBvciBpbmZpbml0eVxyXG5cclxuICAgICAgaWYgKHBlbmFsdHkgPCBtaW5QZW5hbHR5KSB7XHJcbiAgICAgICAgbWluUGVuYWx0eSA9IHBlbmFsdHk7XHJcbiAgICAgICAgYmVzdFZlbG9jaXR5ID0gc2FtcGxlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gYmVzdFZlbG9jaXR5O1xyXG4gICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgICB0aGlzLnNldENvbG91cihwcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0QWdlbnRWZWxvY2l0eU9ic3RhY2xlKGI6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB8IG51bGwge1xyXG4gICAgY29uc3QgdmVsb2NpdHlCID0gYi5nZXREaXJlY3Rpb24oKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoaXMgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gYi5nZXRQb3NpdGlvbigpLnN1YnRyYWN0KHRoaXMuX3Bvc2l0aW9uKTtcclxuXHJcbiAgICAvLyBGaW5kIE1pbmtvd3NraSBzdW0gb2YgYWdlbnRzXHJcbiAgICBjb25zdCBjZW50cmUgPSBwb3NpdGlvbkIuYWRkKHZlbG9jaXR5Qik7XHJcbiAgICBjb25zdCByYWRpdXMgPSBiLlJhZGl1cyArIHRoaXMuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc2V0Q29sb3VyKHByZWZlcnJlZFZlbG9jaXR5OiBWZWN0b3IyZikge1xyXG4gICAgY29uc3Qgc3RyZXNzID0gcHJlZmVycmVkVmVsb2NpdHkuc3VidHJhY3QodGhpcy5fZGlyZWN0aW9uKS5tYWduaXR1ZGUoKTtcclxuICAgIGNvbnN0IGh1ZSA9IHN0cmVzcyA+IDEgPyAwIDogKDEgLSBzdHJlc3MpIC8gMztcclxuICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5mcm9tSHN2KGh1ZSwgMSwgMSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IFZPQWdlbnQgfSBmcm9tIFwiLi9WT0FnZW50XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL21hdGhzL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vbWF0aHMvVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJWT0FnZW50IGV4dGVuZHMgVk9BZ2VudCB7XHJcbiAgLy8gT3ZlcnJpZGUgZ2V0VmVsb2NpdHlPYnN0YWNsZSB0byBwcm9kdWNlIFJlY2lwcm9jYWwgVmVsb2NpdHkgT2JzdGFjbGVcclxuICBwcm90ZWN0ZWQgZ2V0QWdlbnRWZWxvY2l0eU9ic3RhY2xlKGI6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB8IG51bGwge1xyXG4gICAgY29uc3QgdmVsb2NpdHlBID0gdGhpcy5nZXREaXJlY3Rpb24oKTtcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IGIuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZXJ0ZXggPSB2ZWxvY2l0eUEuYWRkKHZlbG9jaXR5QikuZGl2aWRlKDIpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIFJldHVybiB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlcnRleCwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL1ZPQWdlbnRcIjtcclxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vbWF0aHMvR2VvbWV0cnlcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vbWF0aHMvVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9tYXRocy9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSFJWT0FnZW50IGV4dGVuZHMgVk9BZ2VudCB7XHJcbiAgLy8gT3ZlcnJpZGUgZ2V0VmVsb2NpdHlPYnN0YWNsZSB0byBwcm9kdWNlIEh5YnJpZCBSZWNpcHJvY2FsIFZlbG9jaXR5IE9ic3RhY2xlXHJcbiAgcHJvdGVjdGVkIGdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShiOiBBZ2VudCk6IFZlbG9jaXR5T2JzdGFjbGUgfCBudWxsIHtcclxuICAgIGNvbnN0IHZlbG9jaXR5QSA9IHRoaXMuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBiLmdldERpcmVjdGlvbigpO1xyXG5cclxuICAgIC8vIEdldCByZXNwZWN0aXZlIHZlcnRpY2VzXHJcbiAgICBjb25zdCB2b1ZlcnRleCA9IHZlbG9jaXR5QjtcclxuICAgIGNvbnN0IHJ2b1ZlcnRleCA9IHZlbG9jaXR5QS5hZGQodmVsb2NpdHlCKS5kaXZpZGUoMik7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGlzIGFnZW50J3MgcG9zaXRpb25cclxuICAgIGNvbnN0IHBvc2l0aW9uQiA9IGIuZ2V0UG9zaXRpb24oKS5zdWJ0cmFjdCh0aGlzLl9wb3NpdGlvbik7XHJcblxyXG4gICAgLy8gRmluZCBNaW5rb3dza2kgc3VtIG9mIGFnZW50c1xyXG4gICAgY29uc3QgY2VudHJlID0gcG9zaXRpb25CLmFkZCh2ZWxvY2l0eUIpO1xyXG4gICAgY29uc3QgcmFkaXVzID0gYi5SYWRpdXMgKyB0aGlzLlJhZGl1cztcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgYW5nbGVzXHJcbiAgICBjb25zdCBkaWZmID0gdmVsb2NpdHlCLnN1YnRyYWN0KGNlbnRyZSk7XHJcbiAgICBjb25zdCBkaXN0ID0gZGlmZi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChkaXN0IDwgcmFkaXVzKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHRoZXRhID0gTWF0aC5hY29zKHJhZGl1cyAvIGRpc3QpO1xyXG4gICAgY29uc3QgcGhpID0gTWF0aC5hdGFuMihkaWZmLnksIGRpZmYueCk7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIHRhbmdlbnQgdmVjdG9yc1xyXG4gICAgY29uc3QgYW5nbGUxID0gcGhpICsgdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MSA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTEpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYW5nbGUyID0gcGhpIC0gdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTIpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMilcclxuICAgICk7XHJcblxyXG4gICAgLy8gQ2hlY2sgd2hpY2ggc2lkZSB0byBwYXNzIG9uXHJcbiAgICBjb25zdCBzaWRlID1cclxuICAgICAgKHBvc2l0aW9uQi54IC0gdmVsb2NpdHlCLngpICogKHZlbG9jaXR5QS55IC0gdmVsb2NpdHlCLnkpIC1cclxuICAgICAgKHBvc2l0aW9uQi55IC0gdmVsb2NpdHlCLnkpICogKHZlbG9jaXR5QS54IC0gdmVsb2NpdHlCLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB2ZXJ0ZXggYXMgaW50ZXJzZWN0aW9uIG9mIFZPIGFuZCBSVk8gY29uZVxyXG4gICAgbGV0IHZlcnRleDtcclxuICAgIGlmIChzaWRlID4gMCkge1xyXG4gICAgICAvLyBcIkxlZnRcIlxyXG4gICAgICB2ZXJ0ZXggPSBHZW9tZXRyeS5nZXRMaW5lTGluZUludGVyc2VjdGlvbihcclxuICAgICAgICB2b1ZlcnRleCxcclxuICAgICAgICB2b1ZlcnRleC5hZGQodGFuZ2VudDEpLFxyXG4gICAgICAgIHJ2b1ZlcnRleCxcclxuICAgICAgICBydm9WZXJ0ZXguYWRkKHRhbmdlbnQyKVxyXG4gICAgICApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gXCJSaWdodFwiXHJcbiAgICAgIHZlcnRleCA9IEdlb21ldHJ5LmdldExpbmVMaW5lSW50ZXJzZWN0aW9uKFxyXG4gICAgICAgIHZvVmVydGV4LFxyXG4gICAgICAgIHZvVmVydGV4LmFkZCh0YW5nZW50MiksXHJcbiAgICAgICAgcnZvVmVydGV4LFxyXG4gICAgICAgIHJ2b1ZlcnRleC5hZGQodGFuZ2VudDEpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUmV0dXJuIGh5YnJpZCByZWNpcHJpY29sIHZlbG9jaXR5IG9ic3RhY2xlXHJcbiAgICByZXR1cm4gbmV3IFZlbG9jaXR5T2JzdGFjbGUodmVydGV4LCB0YW5nZW50MSwgdGFuZ2VudDIpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4vbWF0aHMvVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgQmFzaWNBZ2VudCB9IGZyb20gXCIuL2FnZW50cy9CYXNpY0FnZW50XCI7XHJcbmltcG9ydCB7IFN0b3BBZ2VudCB9IGZyb20gXCIuL2FnZW50cy9TdG9wQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL2FnZW50cy9WT0FnZW50XCI7XHJcbmltcG9ydCB7IFJWT0FnZW50IH0gZnJvbSBcIi4vYWdlbnRzL1JWT0FnZW50XCI7XHJcbmltcG9ydCB7IEhSVk9BZ2VudCB9IGZyb20gXCIuL2FnZW50cy9IUlZPQWdlbnRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBBZ2VudEZhY3Rvcnkge1xyXG4gIHN0YXRpYyBnZXRBZ2VudChcclxuICAgIHR5cGU6IHN0cmluZyxcclxuICAgIGlkOiBudW1iZXIsXHJcbiAgICBzdGFydFBvc2l0aW9uOiBWZWN0b3IyZixcclxuICAgIGdvYWxQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmZcclxuICApOiBBZ2VudCB7XHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSBcIkJhc2ljQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IEJhc2ljQWdlbnQoXHJcbiAgICAgICAgICBpZCxcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb24sXHJcbiAgICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eVxyXG4gICAgICAgICk7XHJcbiAgICAgIGNhc2UgXCJTdG9wQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IFN0b3BBZ2VudChcclxuICAgICAgICAgIGlkLFxyXG4gICAgICAgICAgc3RhcnRQb3NpdGlvbixcclxuICAgICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICAgIGdldFByZWZlcnJlZFZlbG9jaXR5XHJcbiAgICAgICAgKTtcclxuICAgICAgY2FzZSBcIlZPQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IFZPQWdlbnQoXHJcbiAgICAgICAgICBpZCxcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb24sXHJcbiAgICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eVxyXG4gICAgICAgICk7XHJcbiAgICAgIGNhc2UgXCJSVk9BZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgUlZPQWdlbnQoXHJcbiAgICAgICAgICBpZCxcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb24sXHJcbiAgICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eVxyXG4gICAgICAgICk7XHJcbiAgICAgIGNhc2UgXCJIUlZPQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IEhSVk9BZ2VudChcclxuICAgICAgICAgIGlkLFxyXG4gICAgICAgICAgc3RhcnRQb3NpdGlvbixcclxuICAgICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICAgIGdldFByZWZlcnJlZFZlbG9jaXR5XHJcbiAgICAgICAgKTtcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gYWdlbnQgdHlwZSBcXFwiJHt0eXBlfVxcXCJgKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBBZ2VudEZhY3RvcnkgfSBmcm9tIFwiLi9BZ2VudEZhY3RvcnlcIjtcclxuaW1wb3J0IHsgSU9ic3RhY2xlIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4vb2JzdGFjbGVzL0xpbmVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL21hdGhzL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb24ge1xyXG4gIGFnZW50czogQWdlbnRbXTtcclxuICBvYnN0YWNsZXM6IElPYnN0YWNsZVtdO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbkZhY3Rvcnkge1xyXG4gIHN0YXRpYyBnZXRDb25maWd1cmF0aW9uKFxyXG4gICAgdHlwZTogc3RyaW5nLFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSBcIlJhbmRvbVRvUmFuZG9tXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuUmFuZG9tVG9SYW5kb20oYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJSYW5kb21Ub1JhbmRvbTJ4XCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuUmFuZG9tVG9SYW5kb20oXHJcbiAgICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgICAyICogd2lkdGgsXHJcbiAgICAgICAgICAyICogaGVpZ2h0LFxyXG4gICAgICAgICAgbnVtYmVyT2ZBZ2VudHNcclxuICAgICAgICApO1xyXG4gICAgICBjYXNlIFwiUmFuZG9tVG9SYW5kb200eFwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLlJhbmRvbVRvUmFuZG9tKFxyXG4gICAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgICAgNCAqIHdpZHRoLFxyXG4gICAgICAgICAgNCAqIGhlaWdodCxcclxuICAgICAgICAgIG51bWJlck9mQWdlbnRzXHJcbiAgICAgICAgKTtcclxuICAgICAgY2FzZSBcIlJhbmRvbVRvTGluZVwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLlJhbmRvbVRvTGluZShhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkNpcmNsZVRvQ2lyY2xlXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQ2lyY2xlVG9DaXJjbGUoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJHcmlkVG9HcmlkXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuR3JpZFRvR3JpZChhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkJvbGxhcmRzXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm9sbGFyZHMoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJCb3R0bGVuZWNrXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm90dGxlbmVjayhhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgY2FzZSBcIkJvdHRsZW5lY2tXaXRoTmF2XCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuQm90dGxlbmVja1dpdGhOYXYoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJTbGFsb21cIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5TbGFsb20oYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJTbGFsb21XaXRoTmF2XCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuU2xhbG9tV2l0aE5hdihhZ2VudFR5cGUsIHdpZHRoLCBoZWlnaHQsIG51bWJlck9mQWdlbnRzKTtcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29uZmlndXJhdGlvbiB0eXBlIFxcXCIke3R5cGV9XFxcImApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgUmFuZG9tVG9SYW5kb20oXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIC8vIFJhbmRvbSBzdGFydCBwb3NpdGlvbiB0byByYW5kb20gZ29hbCBwb3NpdGlvblxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3Qgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgNTBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKSk7XHJcblxyXG4gICAgY29uc3QgZ29hbFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoLFxyXG4gICAgICBoZWlnaHQsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA1MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMikpKTtcclxuICAgIG51bWJlck9mQWdlbnRzID0gTWF0aC5taW4oc3RhcnRQb3NpdGlvbnMubGVuZ3RoLCBnb2FsUG9zaXRpb25zLmxlbmd0aCk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIGdvYWxQb3NpdGlvbnNbaV0sXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oZ29hbFBvc2l0aW9uc1tpXSlcclxuICAgICAgKTtcclxuICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IFtdIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBSYW5kb21Ub0xpbmUoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIC8vIFJhbmRvbSBzdGFydCBwb3NpdGlvbiB0byBmaXhlZCBwb3NpdGlvbiBvbiBsaW5lXHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBsZXQgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgNTBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKSk7XHJcbiAgICBudW1iZXJPZkFnZW50cyA9IHN0YXJ0UG9zaXRpb25zLmxlbmd0aDtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mQWdlbnRzOyBpKyspIHtcclxuICAgICAgY29uc3QgZ29hbFBvc2l0aW9uID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICAgICgoaSArIDEpIC8gKG51bWJlck9mQWdlbnRzICsgMSkgLSAxIC8gMikgKiB3aWR0aCxcclxuICAgICAgICAwXHJcbiAgICAgICk7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihnb2FsUG9zaXRpb24pXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBbXSB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgQ2lyY2xlVG9DaXJjbGUoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIF93aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBQb3NpdGlvbiBvbiByYWRpdXMgb2YgY2lyY2xlIHRvIG9wcG9zaXRlIHBvaW50XHJcbiAgICBsZXQgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCByYWRpdXMgPSBoZWlnaHQgLyAyIC0gMjU7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFuZ2xlID0gKDIgKiBNYXRoLlBJICogaSkgLyBudW1iZXJPZkFnZW50cztcclxuICAgICAgY29uc3Qgc3RhcnRQb3NpdGlvbiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgICByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSksXHJcbiAgICAgICAgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpXHJcbiAgICAgICk7XHJcbiAgICAgIGNvbnN0IGdvYWxQb3NpdGlvbiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgICByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSArIE1hdGguUEkpLFxyXG4gICAgICAgIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlICsgTWF0aC5QSSlcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgIGksXHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbixcclxuICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oZ29hbFBvc2l0aW9uKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogW10gfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIEdyaWRUb0dyaWQoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBfaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBUd28gb3Bwb3NpbmcgZ3JpZHMgb2YgYWdlbnRzIHBhc3NpbmcgdGhyb3VnaCBlYWNob3RoZXJcclxuICAgIGxldCBhZ2VudHM6IEFnZW50W10gPSBbXTtcclxuICAgIGNvbnN0IGdyaWRTaXplID0gTWF0aC5jZWlsKE1hdGguc3FydChudW1iZXJPZkFnZW50cyAvIDIpKTtcclxuICAgIGNvbnN0IG9mZnNldCA9IDkwO1xyXG4gICAgbGV0IHggPSAzMCAtIHdpZHRoIC8gMjtcclxuICAgIGxldCB5ID0gKChncmlkU2l6ZSAtIDEpIC8gMikgKiBvZmZzZXQ7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGlkeCA9IE1hdGguZmxvb3IoaSAvIDIpO1xyXG4gICAgICBjb25zdCByb3cgPSBNYXRoLmZsb29yKGlkeCAvIGdyaWRTaXplKTtcclxuICAgICAgY29uc3QgY29sID0gaWR4ICUgZ3JpZFNpemU7XHJcblxyXG4gICAgICBpZiAoaSAlIDIgPT0gMCkge1xyXG4gICAgICAgIC8vIExIU1xyXG4gICAgICAgIGNvbnN0IHN0YXJ0UG9zaXRpb24gPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgICAgICB4ICsgKGdyaWRTaXplIC0gMSAtIGNvbCkgKiBvZmZzZXQsXHJcbiAgICAgICAgICB5IC0gcm93ICogb2Zmc2V0XHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25zdCBnb2FsUG9zaXRpb24gPSBuZXcgVmVjdG9yMmYoLXggLSBjb2wgKiBvZmZzZXQsIHkgLSByb3cgKiBvZmZzZXQpO1xyXG4gICAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgICAgaSxcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb24sXHJcbiAgICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihnb2FsUG9zaXRpb24pXHJcbiAgICAgICAgKTtcclxuICAgICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gUkhTXHJcbiAgICAgICAgY29uc3Qgc3RhcnRQb3NpdGlvbiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgICAgIC14IC0gKGdyaWRTaXplIC0gMSAtIGNvbCkgKiBvZmZzZXQsXHJcbiAgICAgICAgICB5IC0gcm93ICogb2Zmc2V0XHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25zdCBnb2FsUG9zaXRpb24gPSBuZXcgVmVjdG9yMmYoeCArIGNvbCAqIG9mZnNldCwgeSAtIHJvdyAqIG9mZnNldCk7XHJcbiAgICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgICBpLFxyXG4gICAgICAgICAgc3RhcnRQb3NpdGlvbixcclxuICAgICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbilcclxuICAgICAgICApO1xyXG4gICAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IFtdIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBCb2xsYXJkcyhcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGdvYWxQb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb25zW2ldLmFkZChcclxuICAgICAgICBuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjAwLCAwKVxyXG4gICAgICApO1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oZ29hbFBvc2l0aW9uKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSA9IFtdO1xyXG5cclxuICAgIC8vIENlbnRyYWwgbGluZSBvZiBib2xsYXJkc1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcclxuICAgICAgb2JzdGFjbGVzLnB1c2gobmV3IENpcmNsZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAxMjAgKiBpIC0gMjQwKSwgMjApKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBvYnN0YWNsZXMgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIEJvdHRsZW5lY2soXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IGdhcFdpZHRoID0gMjAwO1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGdvYWxQb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb25zW2ldLmFkZChcclxuICAgICAgICBuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjAwLCAwKVxyXG4gICAgICApO1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICBnb2FsUG9zaXRpb24sXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oZ29hbFBvc2l0aW9uKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSA9IFtdO1xyXG5cclxuICAgIC8vIENlbnRyYWwgd2FsbCB3aXRoIG5hcnJvdyBvcGVuaW5nXHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgLTUwMCksIG5ldyBWZWN0b3IyZigwLCAtZ2FwV2lkdGggLyAyKSlcclxuICAgICk7XHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgNTAwKSwgbmV3IFZlY3RvcjJmKDAsIGdhcFdpZHRoIC8gMikpXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IG9ic3RhY2xlcyB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgQm90dGxlbmVja1dpdGhOYXYoXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IGdhcFdpZHRoID0gMjAwO1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG4gICAgbnVtYmVyT2ZBZ2VudHMgPSBzdGFydFBvc2l0aW9ucy5sZW5ndGg7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGdvYWxQb3NpdGlvbiA9IHN0YXJ0UG9zaXRpb25zW2ldLmFkZChcclxuICAgICAgICBuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjAwLCAwKVxyXG4gICAgICApO1xyXG4gICAgICBjb25zdCBwcmVmVmVsID0gKHBvczogVmVjdG9yMmYpID0+IHtcclxuICAgICAgICBpZiAocG9zLnggPCAwKSB7XHJcbiAgICAgICAgICBpZiAocG9zLm1hZ25pdHVkZVNxcmQoKSA+ICgoZ2FwV2lkdGggLSAyMCkgLyAyKSAqKiAyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihuZXcgVmVjdG9yMmYoMCwgMCkpKFxyXG4gICAgICAgICAgICAgIHBvc1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyZigxLCAwKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbikocG9zKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICBwcmVmVmVsXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gQ2VudHJhbCB3YWxsIHdpdGggbmFycm93IG9wZW5pbmdcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAtNTAwKSwgbmV3IFZlY3RvcjJmKDAsIC1nYXBXaWR0aCAvIDIpKVxyXG4gICAgKTtcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCA1MDApLCBuZXcgVmVjdG9yMmYoMCwgZ2FwV2lkdGggLyAyKSlcclxuICAgICk7XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogb2JzdGFjbGVzIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBTbGFsb20oXHJcbiAgICBhZ2VudFR5cGU6IHN0cmluZyxcclxuICAgIHdpZHRoOiBudW1iZXIsXHJcbiAgICBoZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIGNvbnN0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3Qgc3RhcnRQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCAvIDIgLSAyNTAsXHJcbiAgICAgIGhlaWdodCAtIDQwLFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgODBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIgLSAyMCkpKTtcclxuICAgIG51bWJlck9mQWdlbnRzID0gc3RhcnRQb3NpdGlvbnMubGVuZ3RoO1xyXG5cclxuICAgIGNvbnN0IGdhcEhlaWdodCA9IDIwMDtcclxuICAgIGNvbnN0IHdhbGxIZWlnaHQgPSBoZWlnaHQgLyAyIC0gZ2FwSGVpZ2h0O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBnb2FsUG9zaXRpb24gPSBzdGFydFBvc2l0aW9uc1tpXS5hZGQoXHJcbiAgICAgICAgbmV3IFZlY3RvcjJmKHdpZHRoIC8gMiArIDI1MCwgMClcclxuICAgICAgKTtcclxuICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgIGksXHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbnNbaV0sXHJcbiAgICAgICAgZ29hbFBvc2l0aW9uLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbilcclxuICAgICAgKTtcclxuICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG9ic3RhY2xlczogSU9ic3RhY2xlW10gPSBbXTtcclxuXHJcbiAgICAvLyBTbGFsb21cclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigtMjAwLCA1MDApLCBuZXcgVmVjdG9yMmYoLTIwMCwgLXdhbGxIZWlnaHQpKVxyXG4gICAgKTtcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAtNTAwKSwgbmV3IFZlY3RvcjJmKDAsIHdhbGxIZWlnaHQpKVxyXG4gICAgKTtcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigyMDAsIDUwMCksIG5ldyBWZWN0b3IyZigyMDAsIC13YWxsSGVpZ2h0KSlcclxuICAgICk7XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogb2JzdGFjbGVzIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBTbGFsb21XaXRoTmF2KFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICBjb25zdCBhZ2VudHM6IEFnZW50W10gPSBbXTtcclxuICAgIGNvbnN0IHN0YXJ0UG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGggLyAyIC0gMjUwLFxyXG4gICAgICBoZWlnaHQgLSA0MCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDgwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyIC0gMjApKSk7XHJcbiAgICBudW1iZXJPZkFnZW50cyA9IHN0YXJ0UG9zaXRpb25zLmxlbmd0aDtcclxuXHJcbiAgICBjb25zdCBnYXBIZWlnaHQgPSAyMDA7XHJcbiAgICBjb25zdCB3YWxsSGVpZ2h0ID0gaGVpZ2h0IC8gMiAtIGdhcEhlaWdodDtcclxuICAgIGNvbnN0IG1pZEdhcCA9IHdhbGxIZWlnaHQgKyBnYXBIZWlnaHQgLyAyO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBnb2FsUG9zaXRpb24gPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgICAgc3RhcnRQb3NpdGlvbnNbaV0ueCArIHdpZHRoIC8gMiArIDI1MCxcclxuICAgICAgICAtc3RhcnRQb3NpdGlvbnNbaV0ueVxyXG4gICAgICApO1xyXG4gICAgICBjb25zdCBwcmVmVmVsID0gKHBvczogVmVjdG9yMmYpID0+IHtcclxuICAgICAgICBpZiAocG9zLnggPD0gLTIwMCkge1xyXG4gICAgICAgICAgaWYgKFxyXG4gICAgICAgICAgICBwb3Muc3VidHJhY3QobmV3IFZlY3RvcjJmKC0yMDAsIC1taWRHYXApKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgICAgICAoZ2FwSGVpZ2h0IC8gMiAtIDIwKSAqKiAyIC8vIFN1YnRyYWN0IGFnZW50IHJhZGl1c1xyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgVmVjdG9yMmYoMSwgMCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICAgICAgbmV3IFZlY3RvcjJmKC0yMDAsIC1taWRHYXApXHJcbiAgICAgICAgICAgICkocG9zKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKHBvcy54IDw9IDApIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgcG9zLnN1YnRyYWN0KG5ldyBWZWN0b3IyZigwLCBtaWRHYXApKS5tYWduaXR1ZGVTcXJkKCkgPFxyXG4gICAgICAgICAgICAoZ2FwSGVpZ2h0IC8gMiAtIDIwKSAqKiAyIC8vIFN1YnRyYWN0IGFnZW50IHJhZGl1c1xyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgVmVjdG9yMmYoMSwgMCk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICAgICAgbmV3IFZlY3RvcjJmKDAsIG1pZEdhcClcclxuICAgICAgICAgICAgKShwb3MpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAocG9zLnggPD0gMjAwKSB7XHJcbiAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIHBvcy5zdWJ0cmFjdChuZXcgVmVjdG9yMmYoMjAwLCAtbWlkR2FwKSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKGdhcEhlaWdodCAvIDIgLSAyMCkgKiogMiAvLyBTdWJ0cmFjdCBhZ2VudCByYWRpdXNcclxuICAgICAgICAgICkge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IFZlY3RvcjJmKDEsIDApO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgICAgIG5ldyBWZWN0b3IyZigyMDAsIC1taWRHYXApXHJcbiAgICAgICAgICAgICkocG9zKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbikocG9zKTtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIGdvYWxQb3NpdGlvbixcclxuICAgICAgICBwcmVmVmVsXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gU2xhbG9tXHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoLTIwMCwgNTAwKSwgbmV3IFZlY3RvcjJmKC0yMDAsIC13YWxsSGVpZ2h0KSlcclxuICAgICk7XHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgLTUwMCksIG5ldyBWZWN0b3IyZigwLCB3YWxsSGVpZ2h0KSlcclxuICAgICk7XHJcbiAgICBvYnN0YWNsZXMucHVzaChcclxuICAgICAgbmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMjAwLCA1MDApLCBuZXcgVmVjdG9yMmYoMjAwLCAtd2FsbEhlaWdodCkpXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IG9ic3RhY2xlcyB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgcHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgZ29hbFBvc2l0aW9uOiBWZWN0b3IyZlxyXG4gICk6IChwb3M6IFZlY3RvcjJmKSA9PiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gKHBvcykgPT4ge1xyXG4gICAgICBjb25zdCBnb2FsRGlyZWN0aW9uID0gZ29hbFBvc2l0aW9uLnN1YnRyYWN0KHBvcyk7XHJcbiAgICAgIGlmIChnb2FsRGlyZWN0aW9uLm1hZ25pdHVkZVNxcmQoKSA8IDEpIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbi5ub3JtYWxpc2UoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIHBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgeFJhbmdlOiBudW1iZXIsXHJcbiAgICB5UmFuZ2U6IG51bWJlcixcclxuICAgIG46IG51bWJlcixcclxuICAgIHRocmVzaG9sZDogbnVtYmVyXHJcbiAgKTogVmVjdG9yMmZbXSB7XHJcbiAgICBsZXQgc2FtcGxlczogVmVjdG9yMmZbXSA9IFtdO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgIGxldCByZXNhbXBsZSA9IHRydWU7XHJcbiAgICAgIGxldCBwb3M6IFZlY3RvcjJmO1xyXG5cclxuICAgICAgbGV0IGF0dGVtcHRzID0gMDtcclxuICAgICAgd2hpbGUgKHJlc2FtcGxlKSB7XHJcbiAgICAgICAgYXR0ZW1wdHMrKztcclxuICAgICAgICByZXNhbXBsZSA9IGZhbHNlO1xyXG4gICAgICAgIHBvcyA9IG5ldyBWZWN0b3IyZih4UmFuZ2UgKiBNYXRoLnJhbmRvbSgpLCB5UmFuZ2UgKiBNYXRoLnJhbmRvbSgpKTtcclxuXHJcbiAgICAgICAgc2FtcGxlcy5mb3JFYWNoKChzYW1wbGUpID0+IHtcclxuICAgICAgICAgIGlmIChwb3Muc3VidHJhY3Qoc2FtcGxlKS5tYWduaXR1ZGVTcXJkKCkgPCB0aHJlc2hvbGQgKiogMikge1xyXG4gICAgICAgICAgICByZXNhbXBsZSA9IHRydWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIFByZXZlbnQgY3Jhc2ggaWYgdGhlcmUgaXMgaW5zdWZmaWNpZW50IHNwYWNlIHRvIGFkZCBhIG5ldyBhZ2VudFxyXG4gICAgICAgIGlmIChhdHRlbXB0cyA+IDEwMDApIHtcclxuICAgICAgICAgIGNvbnNvbGUud2FybihcclxuICAgICAgICAgICAgYEZhaWxlZCB0byBmaW5kIHBvaXNzb24gZGlzayBzYW1wbGUgKHBsYWNlZCAke2l9LyR7bn0pLmBcclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICByZXR1cm4gc2FtcGxlcztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHNhbXBsZXMucHVzaChwb3MpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBzYW1wbGVzO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuLi9TaW11bGF0aW9uXCI7XHJcbmltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IENpcmNsZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9DaXJjbGVPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFRyYWNlUmVuZGVyZXIgaW1wbGVtZW50cyBJUmVuZGVyZXIge1xyXG4gIHByaXZhdGUgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuICBwcml2YXRlIGNvbnRleHQ6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRDtcclxuICBwcml2YXRlIF9kb25lOiBib29sZWFuO1xyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICB9XHJcblxyXG4gIGluaXQoc2ltdWxhdGlvbjogU2ltdWxhdGlvbikge1xyXG4gICAgdGhpcy5fZG9uZSA9IGZhbHNlO1xyXG5cclxuICAgIC8vIENsZWFyIGJhY2tncm91bmRcclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoMTM1LCAxOTQsIDI1MClcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCgwLCAwLCB0aGlzLmNhbnZhcy53aWR0aCwgdGhpcy5jYW52YXMuaGVpZ2h0KTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuc2V0VHJhbnNmb3JtKFxyXG4gICAgICAxLFxyXG4gICAgICAwLFxyXG4gICAgICAwLFxyXG4gICAgICAxLFxyXG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIDIsXHJcbiAgICAgIHRoaXMuY2FudmFzLmhlaWdodCAvIDJcclxuICAgICk7XHJcblxyXG4gICAgLy8gRHJhdyBmbG9vclxyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IFwicmdiKDUxLCA1MSwgNTEpXCI7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFJlY3QoXHJcbiAgICAgIC10aGlzLmNhbnZhcy53aWR0aCAqIDAuNTUsXHJcbiAgICAgIC10aGlzLmNhbnZhcy5oZWlnaHQgKiAwLjU1LFxyXG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCAqIDEuMSxcclxuICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ICogMS4xXHJcbiAgICApO1xyXG5cclxuICAgIC8vIERyYXcgb2JzdGFjbGVzXHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSBcIndoaXRlXCI7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVdpZHRoID0gMjtcclxuICAgIHNpbXVsYXRpb24uZ2V0T2JzdGFjbGVzKCkuZm9yRWFjaCgob2JzdGFjbGUpID0+IHtcclxuICAgICAgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICB0aGlzLmRyYXdDaXJjbGVPYnN0YWNsZShvYnN0YWNsZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBMaW5lT2JzdGFjbGUpIHtcclxuICAgICAgICB0aGlzLmRyYXdMaW5lT2JzdGFjbGUob2JzdGFjbGUpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJlbmRlcihzaW11bGF0aW9uOiBTaW11bGF0aW9uKSB7XHJcbiAgICBjb25zdCBhZ2VudHMgPSBzaW11bGF0aW9uLmdldEFnZW50cygpO1xyXG5cclxuICAgIC8vIERyYXcgYWdlbnRzXHJcbiAgICBhZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgdGhpcy5kcmF3QWdlbnQoYWdlbnQpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHNpbXVsYXRpb24uaXNEb25lKCkgJiYgIXRoaXMuX2RvbmUpIHtcclxuICAgICAgdGhpcy5fZG9uZSA9IHRydWU7XHJcbiAgICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICAgIHRoaXMuZHJhd0FnZW50RmluYWwoYWdlbnQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50KGFnZW50OiBBZ2VudCk6IHZvaWQge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgY29uc3QgY29sb3VyID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IGByZ2IoJHtjb2xvdXIucn0sICR7Y29sb3VyLmd9LCAke2NvbG91ci5ifSlgO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KHBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCAxLCAxKTtcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50RmluYWwoYWdlbnQ6IEFnZW50KTogdm9pZCB7XHJcbiAgICBjb25zdCBwb3NpdGlvbiA9IGFnZW50LmdldFBvc2l0aW9uKCk7XHJcbiAgICBjb25zdCBjb2xvdXIgPSBhZ2VudC5nZXRDb2xvdXIoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gYHJnYigke2NvbG91ci5yfSwgJHtjb2xvdXIuZ30sICR7Y29sb3VyLmJ9KWA7XHJcbiAgICB0aGlzLmNvbnRleHQuYXJjKHBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCBhZ2VudC5SYWRpdXMsIDAsIDIgKiBNYXRoLlBJKTtcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlOiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5hcmMoXHJcbiAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgIC1vYnN0YWNsZS5Qb3NpdGlvbi55LCAvLyB5IHBvc2l0aW9uIGludmVydGVkIHRvIG1hdGNoIDNEIHZpZXdcclxuICAgICAgb2JzdGFjbGUuUmFkaXVzLFxyXG4gICAgICAwLFxyXG4gICAgICAyICogTWF0aC5QSVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBkID0gb2JzdGFjbGUuUmFkaXVzICogTWF0aC5TUVJUMV8yO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuUG9zaXRpb24ueCAtIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgLSBkKTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuUG9zaXRpb24ueCArIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgKyBkKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggKyBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55IC0gZCk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggLSBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55ICsgZCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3TGluZU9ic3RhY2xlKG9ic3RhY2xlOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlN0YXJ0LngsIC1vYnN0YWNsZS5TdGFydC55KTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuRW5kLngsIC1vYnN0YWNsZS5FbmQueSk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgaW50ZXJmYWNlIFF1YXJ0aWxlcyB7XHJcbiAgbWluaW11bTogbnVtYmVyO1xyXG4gIGxvd2VyUXVhcnQ6IG51bWJlcjtcclxuICBtZWRpYW46IG51bWJlcjtcclxuICB1cHBlclF1YXJ0OiBudW1iZXI7XHJcbiAgbWF4aW11bTogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgU3RhdHMge1xyXG4gIHN0YXRpYyByb3VuZDNkcChmOiBudW1iZXIpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIE1hdGgucm91bmQoKGYgKyBOdW1iZXIuRVBTSUxPTikgKiAxMDAwKSAvIDEwMDA7IC8vIGVwc2lsb24gdG8gYXZvaWQgRlAgZXJyb3JzXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgc3VtKGFycjogbnVtYmVyW10pOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIGFyci5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBxdWFydGlsZXMoYXJyOiBudW1iZXJbXSk6IFF1YXJ0aWxlcyB7XHJcbiAgICBjb25zdCBzb3J0ZWQgPSBhcnIuc2xpY2UoKS5zb3J0KChhLCBiKSA9PiBhIC0gYik7XHJcbiAgICBjb25zdCBuID0gc29ydGVkLmxlbmd0aDtcclxuXHJcbiAgICBjb25zdCBtaWQgPSBNYXRoLmNlaWwobiAvIDIpIC0gMTtcclxuICAgIGNvbnN0IG1lZGlhbiA9XHJcbiAgICAgIG4gJSAyID09IDAgPyAoc29ydGVkW21pZF0gKyBzb3J0ZWRbbWlkICsgMV0pIC8gMiA6IHNvcnRlZFttaWRdO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIG1pbmltdW06IHNvcnRlZFswXSxcclxuICAgICAgbG93ZXJRdWFydDogc29ydGVkW01hdGguY2VpbChuICogMC4yNSkgLSAxXSxcclxuICAgICAgbWVkaWFuOiBtZWRpYW4sXHJcbiAgICAgIHVwcGVyUXVhcnQ6IHNvcnRlZFtNYXRoLmNlaWwobiAqIDAuNzUpIC0gMV0sXHJcbiAgICAgIG1heGltdW06IHNvcnRlZFtuIC0gMV0sXHJcbiAgICB9O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuLi9tYXRocy9HZW9tZXRyeVwiO1xyXG5pbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBJTG9nZ2VyIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvSUxvZ2dlclwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vaW50ZXJmYWNlcy9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL21hdGhzL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFN0YXRzIH0gZnJvbSBcIi4uL21hdGhzL1N0YXRzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTG9nZ2VyIGltcGxlbWVudHMgSUxvZ2dlciB7XHJcbiAgcHJpdmF0ZSBfbG9nZ2luZzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIHByaXZhdGUgX3N0YXJ0VGltZTogbnVtYmVyO1xyXG4gIHByaXZhdGUgX3RpbWVTdGVwOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBfYWdlbnRDb2xsaXNpb25zOiBudW1iZXJbXTtcclxuICBwcml2YXRlIF9vYnN0YWNsZUNvbGxpc2lvbnM6IG51bWJlcltdO1xyXG4gIHByaXZhdGUgX2ZyYW1lVGltZXM6IG51bWJlcltdO1xyXG4gIHByaXZhdGUgX3BhdGhMZW5ndGhzOiBudW1iZXJbXTtcclxuICBwcml2YXRlIF9zdGFydFBvc2l0aW9uczogVmVjdG9yMmZbXTtcclxuXHJcbiAgc3RhcnQoYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uKTogdm9pZCB7XHJcbiAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0gU3RhcnRlZCBsb2dnaW5nIC0tLS0tLS1cIik7XHJcblxyXG4gICAgdGhpcy5fbG9nZ2luZyA9IHRydWU7XHJcbiAgICB0aGlzLl9zdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICAgIHRoaXMuX3RpbWVTdGVwID0gMDtcclxuICAgIHRoaXMuX2ZyYW1lVGltZXMgPSBbXTtcclxuICAgIHRoaXMuX2FnZW50Q29sbGlzaW9ucyA9IFtdO1xyXG4gICAgdGhpcy5fb2JzdGFjbGVDb2xsaXNpb25zID0gW107XHJcbiAgICB0aGlzLl9wYXRoTGVuZ3RocyA9IFtdO1xyXG4gICAgdGhpcy5fc3RhcnRQb3NpdGlvbnMgPSBbXTtcclxuXHJcbiAgICBhZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgdGhpcy5fcGF0aExlbmd0aHNbYWdlbnQuSWRdID0gMDtcclxuICAgICAgdGhpcy5fc3RhcnRQb3NpdGlvbnNbYWdlbnQuSWRdID0gYWdlbnQuZ2V0UG9zaXRpb24oKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgbG9nKFxyXG4gICAgYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uLFxyXG4gICAgb2JzdGFjbGVzOiBJT2JzdGFjbGVbXSxcclxuICAgIHN0ZXBTaXplOiBudW1iZXIsXHJcbiAgICBkZWx0YVQ6IG51bWJlclxyXG4gICk6IHZvaWQge1xyXG4gICAgaWYgKCF0aGlzLl9sb2dnaW5nKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9mcmFtZVRpbWVzW3RoaXMuX3RpbWVTdGVwXSA9IFN0YXRzLnJvdW5kM2RwKGRlbHRhVCk7XHJcbiAgICB0aGlzLl9hZ2VudENvbGxpc2lvbnNbdGhpcy5fdGltZVN0ZXBdID0gMDtcclxuICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0gPSAwO1xyXG5cclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICBjb25zdCBuZWlnaGJvdXJzID0gYWdlbnRzLmdldE5laWdoYm91cnNJblJhbmdlUmVjdGlsaW5lYXIoYWdlbnQsIDEwMCk7XHJcbiAgICAgIG5laWdoYm91cnMuZm9yRWFjaCgobmVpZ2hib3VyKSA9PiB7XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgbmVpZ2hib3VyLklkIDwgYWdlbnQuSWQgLyogYXZvaWRzIGRvdWJsZSBjb3VudGluZyAqLyAmJlxyXG4gICAgICAgICAgbmVpZ2hib3VyXHJcbiAgICAgICAgICAgIC5nZXRQb3NpdGlvbigpXHJcbiAgICAgICAgICAgIC5zdWJ0cmFjdChhZ2VudC5nZXRQb3NpdGlvbigpKVxyXG4gICAgICAgICAgICAubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKG5laWdoYm91ci5SYWRpdXMgKyBhZ2VudC5SYWRpdXMpICoqIDJcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuX2FnZW50Q29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgb2JzdGFjbGVzLmZvckVhY2goKG9ic3RhY2xlKSA9PiB7XHJcbiAgICAgICAgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgTGluZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgICBjb25zdCB0ID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgIGFnZW50LmdldFBvc2l0aW9uKCksXHJcbiAgICAgICAgICAgIGFnZW50LlJhZGl1cyxcclxuICAgICAgICAgICAgb2JzdGFjbGUuU3RhcnQsXHJcbiAgICAgICAgICAgIG9ic3RhY2xlLkVuZC5zdWJ0cmFjdChvYnN0YWNsZS5TdGFydClcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgaWYgKHQgPiAwICYmIHQgPCAxKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9IGVsc2UgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICAgIGlmIChcclxuICAgICAgICAgICAgb2JzdGFjbGUuUG9zaXRpb24uc3VidHJhY3QoYWdlbnQuZ2V0UG9zaXRpb24oKSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgICAgKG9ic3RhY2xlLlJhZGl1cyArIGFnZW50LlJhZGl1cykgKiogMlxyXG4gICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX29ic3RhY2xlQ29sbGlzaW9uc1t0aGlzLl90aW1lU3RlcF0rKztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKCFhZ2VudC5pc0RvbmUoKSkge1xyXG4gICAgICAgIHRoaXMuX3BhdGhMZW5ndGhzW2FnZW50LklkXSArPVxyXG4gICAgICAgICAgYWdlbnQuZ2V0RGlyZWN0aW9uKCkubWFnbml0dWRlKCkgKiBzdGVwU2l6ZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fdGltZVN0ZXArKztcclxuICB9XHJcblxyXG4gIHN0b3AoYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uKTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuX2xvZ2dpbmcpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICBgVG90YWwgdGltZSAobXMpOiAkeyhwZXJmb3JtYW5jZS5ub3coKSAtIHRoaXMuX3N0YXJ0VGltZSkudG9GaXhlZCgzKX1gXHJcbiAgICApO1xyXG4gICAgdGhpcy5fbG9nZ2luZyA9IGZhbHNlO1xyXG5cclxuICAgIGNvbnN0IHRvdGFsRnJhbWVUaW1lID0gU3RhdHMuc3VtKHRoaXMuX2ZyYW1lVGltZXMuc2xpY2UoMSkpO1xyXG4gICAgY29uc3QgYXZlcmFnZUZyYW1lVGltZSA9IHRvdGFsRnJhbWVUaW1lIC8gdGhpcy5fdGltZVN0ZXA7XHJcbiAgICBjb25zdCBmcmFtZVRpbWVRdWFydGlsZXMgPSBTdGF0cy5xdWFydGlsZXModGhpcy5fZnJhbWVUaW1lcy5zbGljZSgxKSk7XHJcbiAgICBjb25zdCB0b3RhbEFnZW50Q29sbGlzaW9ucyA9IFN0YXRzLnN1bSh0aGlzLl9hZ2VudENvbGxpc2lvbnMpO1xyXG4gICAgY29uc3QgdG90YWxPYnN0YWNsZUNvbGxpc2lvbnMgPSBTdGF0cy5zdW0odGhpcy5fb2JzdGFjbGVDb2xsaXNpb25zKTtcclxuICAgIGNvbnN0IG92ZXJoZWFkOiBudW1iZXJbXSA9IFtdO1xyXG5cclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICBvdmVyaGVhZFthZ2VudC5JZF0gPVxyXG4gICAgICAgIHRoaXMuX3BhdGhMZW5ndGhzW2FnZW50LklkXSAvXHJcbiAgICAgICAgICB0aGlzLl9zdGFydFBvc2l0aW9uc1thZ2VudC5JZF1cclxuICAgICAgICAgICAgLnN1YnRyYWN0KGFnZW50LmdldFBvc2l0aW9uKCkpXHJcbiAgICAgICAgICAgIC5tYWduaXR1ZGUoKSAtXHJcbiAgICAgICAgMTtcclxuICAgIH0pO1xyXG4gICAgY29uc3QgYXZlcmFnZU92ZXJoZWFkID0gU3RhdHMuc3VtKG92ZXJoZWFkKSAvIGFnZW50cy5nZXRBbGwoKS5sZW5ndGg7XHJcbiAgICBjb25zdCBvdmVyaGVhZFF1YXJ0aWxlcyA9IFN0YXRzLnF1YXJ0aWxlcyhvdmVyaGVhZCk7XHJcblxyXG4gICAgY29uc29sZS5sb2coYFRpbWVzdGVwczogJHt0aGlzLl90aW1lU3RlcH1gKTtcclxuICAgIGNvbnNvbGUubG9nKGBUb3RhbCBmcmFtZSB0aW1lIChtcyk6ICR7dG90YWxGcmFtZVRpbWUudG9GaXhlZCgzKX1gKTtcclxuICAgIGNvbnNvbGUubG9nKGBBdmVyYWdlIGZyYW1lIHRpbWUgKG1zKTogJHthdmVyYWdlRnJhbWVUaW1lLnRvRml4ZWQoMyl9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgTWluOiAke2ZyYW1lVGltZVF1YXJ0aWxlcy5taW5pbXVtfWApO1xyXG4gICAgY29uc29sZS5sb2coYCBMUTogJHtmcmFtZVRpbWVRdWFydGlsZXMubG93ZXJRdWFydH1gKTtcclxuICAgIGNvbnNvbGUubG9nKGBNZWQ6ICR7ZnJhbWVUaW1lUXVhcnRpbGVzLm1lZGlhbn1gKTtcclxuICAgIGNvbnNvbGUubG9nKGAgVVE6ICR7ZnJhbWVUaW1lUXVhcnRpbGVzLnVwcGVyUXVhcnR9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgTWF4OiAke2ZyYW1lVGltZVF1YXJ0aWxlcy5tYXhpbXVtfWApO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKGBUb3RhbCBhZ2VudCBjb2xsaXNpb25zOiAke3RvdGFsQWdlbnRDb2xsaXNpb25zfWApO1xyXG4gICAgaWYgKHRvdGFsQWdlbnRDb2xsaXNpb25zID4gMCkge1xyXG4gICAgICBjb25zb2xlLmxvZyhcclxuICAgICAgICBgQWdlbnQgY29sbGlzaW9ucyBwZXIgZnJhbWU6ICR7KFxyXG4gICAgICAgICAgdG90YWxBZ2VudENvbGxpc2lvbnMgLyB0aGlzLl90aW1lU3RlcFxyXG4gICAgICAgICkudG9GaXhlZCgzKX1gXHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coYFRvdGFsIG9ic3RhY2xlIGNvbGxpc2lvbnM6ICR7dG90YWxPYnN0YWNsZUNvbGxpc2lvbnN9YCk7XHJcbiAgICBpZiAodG90YWxPYnN0YWNsZUNvbGxpc2lvbnMgPiAwKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFxyXG4gICAgICAgIGBPYnN0YWNsZSBjb2xsaXNpb25zIHBlciBmcmFtZTogJHsoXHJcbiAgICAgICAgICB0b3RhbE9ic3RhY2xlQ29sbGlzaW9ucyAvIHRoaXMuX3RpbWVTdGVwXHJcbiAgICAgICAgKS50b0ZpeGVkKDMpfWBcclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zb2xlLmxvZyhgQXZlcmFnZSBvdmVyaGVhZDogJHthdmVyYWdlT3ZlcmhlYWR9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgTWluOiAke292ZXJoZWFkUXVhcnRpbGVzLm1pbmltdW19YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgIExROiAke292ZXJoZWFkUXVhcnRpbGVzLmxvd2VyUXVhcnR9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgTWVkOiAke292ZXJoZWFkUXVhcnRpbGVzLm1lZGlhbn1gKTtcclxuICAgIGNvbnNvbGUubG9nKGAgVVE6ICR7b3ZlcmhlYWRRdWFydGlsZXMudXBwZXJRdWFydH1gKTtcclxuICAgIGNvbnNvbGUubG9nKGBNYXg6ICR7b3ZlcmhlYWRRdWFydGlsZXMubWF4aW11bX1gKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4vaW50ZXJmYWNlcy9JUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgUmVuZGVyZXIyRCB9IGZyb20gXCIuL3JlbmRlcmVycy9SZW5kZXJlcjJEXCI7XHJcbmltcG9ydCB7IFJlbmRlcmVyM0QgfSBmcm9tIFwiLi9yZW5kZXJlcnMvUmVuZGVyZXIzRFwiO1xyXG5pbXBvcnQgeyBBZ2VudFRyZWUgfSBmcm9tIFwiLi9jb2xsZWN0aW9ucy9BZ2VudFRyZWVcIjtcclxuaW1wb3J0IHsgQ29uZmlndXJhdGlvbkZhY3RvcnkgfSBmcm9tIFwiLi9Db25maWd1cmF0aW9uRmFjdG9yeVwiO1xyXG5pbXBvcnQgeyBUcmFjZVJlbmRlcmVyIH0gZnJvbSBcIi4vcmVuZGVyZXJzL1RyYWNlUmVuZGVyZXJcIjtcclxuaW1wb3J0IHsgTG9nZ2VyIH0gZnJvbSBcIi4vbG9nZ2Vycy9Mb2dnZXJcIjtcclxuXHJcbmNvbnN0IGNvbmZpZ1NlbGVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29uZmlnXCIpIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xyXG5jb25zdCBhZ2VudFR5cGVTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcclxuICBcImFnZW50VHlwZVwiXHJcbikgYXMgSFRNTFNlbGVjdEVsZW1lbnQ7XHJcbmNvbnN0IHJhbmdlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJhbmdlXCIpIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xyXG5jb25zdCBudW1iZXJPZkFnZW50c0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJudW1iZXJPZkFnZW50c1wiXHJcbikgYXMgSFRNTElucHV0RWxlbWVudDtcclxuXHJcbmNvbnN0IGNhbnZhczJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXMyZFwiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuY29uc3QgY2FudmFzM2QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhczNkXCIpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xyXG5jb25zdCBjYW52YXNUcmFjZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzVHJhY2VcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbmNvbnN0IGZyYW1lcmF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZnJhbWVyYXRlXCIpIGFzIEhUTUxQYXJhZ3JhcGhFbGVtZW50O1xyXG5jb25zdCBwbGF5QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwbGF5QnV0dG9uXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xyXG5jb25zdCBzdGVwQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdGVwQnV0dG9uXCIpIGFzIEhUTUxCdXR0b25FbGVtZW50O1xyXG5cclxuY29uc3Qgc2ltdWxhdGlvbiA9IG5ldyBTaW11bGF0aW9uKG5ldyBBZ2VudFRyZWUoW10pKTtcclxuY29uc3QgcmVuZGVyZXIyZCA9IG5ldyBSZW5kZXJlcjJEKGNhbnZhczJkKTtcclxuY29uc3QgcmVuZGVyZXIzZCA9IG5ldyBSZW5kZXJlcjNEKGNhbnZhczNkKTtcclxuY29uc3QgcmVuZGVyZXJUcmFjZSA9IG5ldyBUcmFjZVJlbmRlcmVyKGNhbnZhc1RyYWNlKTtcclxudmFyIHJlbmRlcmVyOiBJUmVuZGVyZXIgPSByZW5kZXJlcjJkO1xyXG5jb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKCk7XHJcbnZhciBwbGF5ID0gZmFsc2U7XHJcbnZhciByYW5nZSA9IDIwMDtcclxuXHJcbi8vIEluaXRpYWxpc2Ugc2ltdWxhdGlvbiBhbmQgYmVnaW4gdXBkYXRlL3JlbmRlciBsb29wXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xyXG4gIHRoaXMucmVjb25maWd1cmUoKTtcclxuXHJcbiAgbGV0IGxhc3RUaW1lc3RhbXAgPSAwO1xyXG4gIGxldCBsYXN0RlBTID0gMDtcclxuICBsZXQgZnJhbWVzID0gMDtcclxuXHJcbiAgZnVuY3Rpb24gbG9vcCgpIHtcclxuICAgIGNvbnN0IHRpbWVzdGFtcCA9IHBlcmZvcm1hbmNlLm5vdygpO1xyXG4gICAgY29uc3QgZGVsdGFUID0gdGltZXN0YW1wIC0gbGFzdFRpbWVzdGFtcDtcclxuICAgIGxhc3RUaW1lc3RhbXAgPSB0aW1lc3RhbXA7XHJcblxyXG4gICAgLy8gVXBkYXRlXHJcbiAgICBpZiAocGxheSkge1xyXG4gICAgICBjb25zdCBzdGVwU2l6ZSA9IChkZWx0YVQgKiA2MCkgLyAyMDAwO1xyXG4gICAgICBzaW11bGF0aW9uLnVwZGF0ZShzdGVwU2l6ZSwgcmFuZ2UpO1xyXG4gICAgICBsb2dnZXIubG9nKFxyXG4gICAgICAgIHNpbXVsYXRpb24uZ2V0QWdlbnRzKCksXHJcbiAgICAgICAgc2ltdWxhdGlvbi5nZXRPYnN0YWNsZXMoKSxcclxuICAgICAgICBzdGVwU2l6ZSxcclxuICAgICAgICBkZWx0YVRcclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoc2ltdWxhdGlvbi5pc0RvbmUoKSkge1xyXG4gICAgICBzdG9wKCk7XHJcbiAgICAgIGxvZ2dlci5zdG9wKHNpbXVsYXRpb24uZ2V0QWdlbnRzKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFJlbmRlclxyXG4gICAgcmVuZGVyZXIucmVuZGVyKHNpbXVsYXRpb24pO1xyXG4gICAgZnJhbWVzKys7XHJcblxyXG4gICAgLy8gUmVjYWxjdWxhdGUgZnJhbWVyYXRlIGV2ZXJ5IDI1MG1zXHJcbiAgICBpZiAodGltZXN0YW1wIC0gbGFzdEZQUyA+PSAyNTApIHtcclxuICAgICAgZnJhbWVyYXRlLnRleHRDb250ZW50ID0gYEZQUzogJHsoXHJcbiAgICAgICAgKDEwMDAgKiBmcmFtZXMpIC9cclxuICAgICAgICAodGltZXN0YW1wIC0gbGFzdEZQUylcclxuICAgICAgKS50b0ZpeGVkKDEpfWA7XHJcblxyXG4gICAgICBmcmFtZXMgPSAwO1xyXG4gICAgICBsYXN0RlBTID0gdGltZXN0YW1wO1xyXG4gICAgfVxyXG5cclxuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobG9vcCk7XHJcbiAgfVxyXG5cclxuICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xyXG59XHJcblxyXG4vLyBTd2l0Y2ggdmlld1xyXG5leHBvcnQgZnVuY3Rpb24gc3dpdGNoVmlldyh2aWV3OiBzdHJpbmcpIHtcclxuICBzd2l0Y2ggKHZpZXcpIHtcclxuICAgIGNhc2UgXCIyRFwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyMmQ7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgIGNhbnZhczNkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzVHJhY2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCIzRFwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyM2Q7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzM2Quc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgY2FudmFzVHJhY2Uuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJUcmFjZVwiOlxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXcyZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlldzNkXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3VHJhY2VcIikuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG4gICAgICByZW5kZXJlciA9IHJlbmRlcmVyVHJhY2U7XHJcbiAgICAgIGNhbnZhczJkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzM2Quc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4gICAgICBjYW52YXNUcmFjZS5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICBicmVhaztcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biB2aWV3IFxcXCIke3ZpZXd9XFxcImApO1xyXG4gIH1cclxuICByZW5kZXJlci5pbml0KHNpbXVsYXRpb24pO1xyXG59XHJcblxyXG4vLyBUb2dnbGUgcGxheS9wYXVzZVxyXG5leHBvcnQgZnVuY3Rpb24gcGxheVBhdXNlKCkge1xyXG4gIHBsYXkgPSAhcGxheTtcclxuXHJcbiAgaWYgKHBsYXkpIHtcclxuICAgIGxvZ2dlci5zdGFydChzaW11bGF0aW9uLmdldEFnZW50cygpKTtcclxuICAgIGxvZ2dlci5sb2coc2ltdWxhdGlvbi5nZXRBZ2VudHMoKSwgc2ltdWxhdGlvbi5nZXRPYnN0YWNsZXMoKSwgMCwgMCk7IC8vIGxvZyBpbml0aWFsIGNvbmRpdGlvbnNcclxuICAgIHBsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlBhdXNlXCI7XHJcbiAgICBzdGVwQnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgbG9nZ2VyLnN0b3Aoc2ltdWxhdGlvbi5nZXRBZ2VudHMoKSk7XHJcbiAgICBwbGF5QnV0dG9uLnRleHRDb250ZW50ID0gXCJQbGF5XCI7XHJcbiAgICBzdGVwQnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBTdGVwIHNpbXVsYXRpb24gYnkgMSBmcmFtZVxyXG5leHBvcnQgZnVuY3Rpb24gc3RlcCgpIHtcclxuICBzaW11bGF0aW9uLnVwZGF0ZSgxLCByYW5nZSk7XHJcblxyXG4gIGlmIChzaW11bGF0aW9uLmlzRG9uZSgpKSB7XHJcbiAgICBzdG9wKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVjb25maWd1cmUoKSB7XHJcbiAgcGxheSA9IGZhbHNlO1xyXG4gIHBsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlBsYXlcIjtcclxuICBwbGF5QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgc3RlcEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuICBjb25zdCBjb25maWcgPSBjb25maWdTZWxlY3QudmFsdWU7XHJcbiAgY29uc3QgYWdlbnRUeXBlID0gYWdlbnRUeXBlU2VsZWN0LnZhbHVlO1xyXG4gIHJhbmdlID0gcGFyc2VJbnQocmFuZ2VJbnB1dC52YWx1ZSkgPz8gMDtcclxuICBjb25zdCBudW1iZXJPZkFnZW50cyA9IHBhcnNlSW50KG51bWJlck9mQWdlbnRzSW5wdXQudmFsdWUpID8/IDA7XHJcblxyXG4gIHNpbXVsYXRpb24uaW5pdChcclxuICAgIENvbmZpZ3VyYXRpb25GYWN0b3J5LmdldENvbmZpZ3VyYXRpb24oXHJcbiAgICAgIGNvbmZpZyxcclxuICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICBjYW52YXMyZC53aWR0aCxcclxuICAgICAgY2FudmFzMmQuaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50c1xyXG4gICAgKVxyXG4gICk7XHJcblxyXG4gIHJlbmRlcmVyLmluaXQoc2ltdWxhdGlvbik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN0b3AoKSB7XHJcbiAgcGxheSA9IGZhbHNlO1xyXG4gIHBsYXlCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gIHN0ZXBCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG59XHJcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gbW9kdWxlIGV4cG9ydHMgbXVzdCBiZSByZXR1cm5lZCBmcm9tIHJ1bnRpbWUgc28gZW50cnkgaW5saW5pbmcgaXMgZGlzYWJsZWRcbi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xucmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMjQ5KTtcbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==