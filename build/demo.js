var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={317:(t,e,i)=>{i.r(e),i.d(e,{init:()=>Q,playPause:()=>J,reconfigure:()=>tt,step:()=>$,switchView:()=>Z});var n,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var i=this;this._agents.forEach((function(n){n.update(t,i._agents.getNeighboursInRangeEuclidean(n,e),i._obstacles)})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t}(),r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var i=Math.sqrt(Math.random())*e,n=2*Math.PI*Math.random();return new t(this.x+i*Math.cos(n),this.y+i*Math.sin(n))},t.prototype.isLeftOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)>0},t.prototype.isRightOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)<0},t}(),s=function(){function t(t,e,i){this.vertex=t,this.tangent1=e,this.tangent2=i}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),i=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&i<0},t}(),a=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){var e=new r(0,0),i=this.Position.subtract(t.getPosition()),n=this.Radius+t.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(i.x+n*Math.cos(h),i.y+n*Math.sin(h)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,l,d)},t}(),c=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){var e=this.pointVelocityObstacle(t,this.Start),i=this.pointVelocityObstacle(t,this.End);if(null==e&&null==i)return null;if(null==e)return i;if(null==i)return e;e.tangent1.x,i.tangent2.y,e.tangent1.y,i.tangent2.x;var n=e.tangent1;e.tangent2.isLeftOf(n)&&(n=e.tangent2),i.tangent1.isLeftOf(n)&&(n=i.tangent1),i.tangent2.isLeftOf(n)&&(n=i.tangent2);var o=e.tangent1;return e.tangent2.isRightOf(o)&&(o=e.tangent2),i.tangent1.isRightOf(o)&&(o=i.tangent1),i.tangent2.isRightOf(o)&&(o=i.tangent2),new s(new r(0,0),n,o)},t.prototype.pointVelocityObstacle=function(t,e){var i=new r(0,0),n=e.subtract(t.getPosition()),o=t.Radius,a=i.subtract(n),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),h=Math.atan2(a.y,a.x),l=h+u,g=new r(n.x+o*Math.cos(l),n.y+o*Math.sin(l)),d=h-u,f=new r(n.x+o*Math.cos(d),n.y+o*Math.sin(d));return new s(i,g,f)},t}(),u=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.init=function(t){},t.prototype.render=function(t){var e=this,i=800/this.cameraDist,n=t.getAgents(),o=t.getObstacles();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(i,0,0,i,this.xPan,this.yPan),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(-1e3,-500,2e3,1e3),this.context.strokeStyle="white",this.context.lineWidth=2,o.forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)})),n.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getDirection(),n=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=i.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(i.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,t.Start.y),this.context.lineTo(t.End.x,t.End.y),this.context.stroke()},t}(),h=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,i){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1])},t.getPerspectiveProjectionMatrix=function(t,e,i,n){var o=1/Math.tan(t/2),r=1/(i-n);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(i+n)*r,-1,0,0,i*n*r*2,0])},t.multiplyMatrices=function(t,e){for(var i=new Float32Array(16),n=0;n<4;n++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*n+s]*e[4*s+o];i[4*n+o]=r}return i},t}(),l=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),g=function(){function t(){}return t.getVertices=function(t,e){var i=t/2,n=e/2;return[i,-n,0,0,0,1,i,n,0,0,0,1,-i,-n,0,0,0,1,-i,n,0,0,0,1]},t.indices=[1,2,0,1,3,2],t}(),d=function(){function t(){}return t.vertices=[-.92388,-.382683,1,-.9239,-.3827,0,-.92388,-.382683,0,-.9239,-.3827,0,-.707107,-.707107,1,-.7071,-.7071,0,-.707107,-.707107,0,-.7071,-.7071,0,-.382684,-.923879,1,-0,0,1,-.382684,-.923879,0,-.3827,-.9239,0,-0,-1,1,-0,0,1,-0,-1,0,0,-1,0,.382684,-.92388,1,-0,0,1,.382684,-.92388,0,.3827,-.9239,0,.707107,-.707107,1,-0,0,1,.707107,-.707107,0,.7071,-.7071,0,.92388,-.382683,1,-0,0,1,.92388,-.382683,0,.9239,-.3827,0,1,0,1,-0,0,1,1,0,0,1,0,0,.92388,.382683,1,-0,0,1,.92388,.382683,0,.9239,.3827,0,.707107,.707107,1,-0,0,1,.707107,.707107,0,.7071,.7071,0,.382684,.92388,1,-0,0,1,.382684,.92388,0,.3827,.9239,0,0,1,1,-0,0,1,0,1,0,0,1,0,-.382683,.92388,1,-0,0,1,-.382683,.92388,0,-.3827,.9239,0,-.707107,.707107,1,-0,0,1,-.707107,.707107,0,-.7071,.7071,0,-.92388,.382683,1,-0,0,1,-.92388,.382683,0,-.9239,.3827,0,-1,0,1,-0,0,1,-1,0,0,-1,0,0,.707107,.707107,1,.7071,.7071,0,.382684,.92388,1,.3827,.9239,0,-.92388,-.382683,1,-0,0,1,-.707107,-.707107,1,-0,0,1,0,1,1,0,1,0,-.382684,-.923879,1,-.3827,-.9239,0,-0,-1,1,0,-1,0,-.382683,.92388,1,-.3827,.9239,0,-.707107,.707107,1,-.7071,.7071,0,.707107,-.707107,1,.7071,-.7071,0,.92388,-.382683,1,.9239,-.3827,0,-.92388,.382683,1,-.9239,.3827,0,-1,0,1,-1,0,0,.92388,.382683,1,.9239,.3827,0,.382684,-.92388,1,.3827,-.9239,0,1,0,1,1,0,0],t.indices=[26,35,10,18,20,22,22,24,18,24,26,18,26,28,30,30,34,35,35,4,6,6,8,10,10,12,18,12,14,18,14,16,18,26,30,35,35,6,10,18,26,10,39,23,25,40,25,27,43,27,29,44,29,31,36,21,23,33,19,21,32,17,19,45,15,17,47,13,15,42,11,13,41,9,11,46,7,9,38,5,7,37,3,5,2,1,3,0,31,1,39,36,23,40,39,25,43,40,27,44,43,29,36,33,21,33,32,19,32,45,17,45,47,15,47,42,13,42,41,11,41,46,9,46,38,7,38,37,5,37,2,3,2,0,1,0,44,31],t}(),f=function(){function t(){}return t.getVertices=function(t){var e=t.Start.subtract(t.End),i=new r(-e.y,e.x).normalise();return[t.Start.x,t.Start.y,0,i.x,i.y,0,t.End.x,t.End.y,0,i.x,i.y,0,t.Start.x,t.Start.y,1,i.x,i.y,0,t.End.x,t.End.y,1,i.x,i.y,0,t.Start.x,t.Start.y,0,-i.x,-i.y,0,t.End.x,t.End.y,0,-i.x,-i.y,0,t.Start.x,t.Start.y,1,-i.x,-i.y,0,t.End.x,t.End.y,1,-i.x,-i.y,0]},t.indices=[1,2,0,1,3,2,5,4,6,5,6,7],t}(),p=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var i=h.getZRotationMatrix(e.xRot),n=h.getXRotationMatrix(e.yRot),o=h.multiplyMatrices(i,n);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var i=h.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,i);var n=h.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var i=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(i,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform float height;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * height,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,i),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.clearColor(.53,.76,.98,1),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1}),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.heightLoc=this.gl.getUniformLocation(this.program,"height"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var o=h.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),r=h.getTranslationMatrix(0,0,-this.cameraDist),s=h.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,o),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,r),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,s)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(i))}else console.error("WebGL not supported")}return t.prototype.init=function(t){var e=g.getVertices(2e3,1e3),i=t.getObstacles().filter((function(t){return t instanceof c})).map((function(t){return t})),n=i.map((function(t){return f.getVertices(t)})).reduce((function(t,e){return t.concat(e)}),[]),o=new Float32Array(l.vertices.concat(d.vertices).concat(e).concat(n));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=l.vertices.length/6,s=r+d.vertices.length/6,a=s+e.length/6,u=i.map((function(t,e){return f.indices.map((function(t){return t+a+8*e}))})).reduce((function(t,e){return t.concat(e)}),[]),h=new Uint16Array(l.indices.concat(d.indices.map((function(t){return t+r}))).concat(g.indices.map((function(t){return t+s}))).concat(u));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,h,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute)},t.prototype.render=function(t){var e=this,i=t.getAgents(),n=t.getObstacles();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),i.forEach((function(t){var i=t.getPosition();e.gl.uniform2f(e.posVecLoc,i.x,i.y);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new r(1,0)),e.gl.uniform2f(e.dirVecLoc,n.x,n.y),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,l.indices.length,e.gl.UNSIGNED_SHORT,0)}));var o=0;n.forEach((function(t){t instanceof a?(e.gl.uniform2f(e.posVecLoc,t.Position.x,t.Position.y),e.gl.uniform2f(e.dirVecLoc,1,0),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,84),e.gl.uniform3f(e.baseColourLoc,1,1,1),e.gl.drawElements(e.gl.TRIANGLES,d.indices.length,e.gl.UNSIGNED_SHORT,l.indices.length*Uint16Array.BYTES_PER_ELEMENT)):o++})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,g.indices.length,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length)*Uint16Array.BYTES_PER_ELEMENT),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,84),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,f.indices.length*o,this.gl.UNSIGNED_SHORT,(l.indices.length+d.indices.length+g.indices.length)*Uint16Array.BYTES_PER_ELEMENT)},t}(),y=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var i=t.getPosition().x-e,n=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,i,n,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(i){return t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var i=Math.floor(t.length/2),n=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(n.slice(0,i),!e),r=this.constructTree(n.slice(i+1,t.length),!e);return{agent:t[i],left:o,right:r}},t.prototype.rangeSearch=function(t,e,i,n,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().y>=i&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=i&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),m=function(){function t(t,e,i){this.Id=t,this.Radius=20,this._position=e,this._direction=i(e),this._getPreferredVelocity=i,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),v=function(){function t(){}return t.FromHsv=function(t,e,i){var n=(t*=6)-Math.floor(t),o=i*(1-e),r=i*(1-e*n),s=i*(1-e*(1-n));return 0<=t&&t<1?{r:255*i,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*i,b:255*o}:2<=t&&t<3?{r:255*o,g:255*i,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*i}:4<=t&&t<5?{r:255*s,g:255*o,b:255*i}:5<=t&&t<6?{r:255*i,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),x=(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.getColour=function(){return this._isDone?v.White:v.Green},e.prototype.update=function(t){if(!this._isDone){var e=this._getPreferredVelocity(this._position),i=60*t/3e3;e.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=e,this._position=this._position.add(e.multiply(i)))}},e}(m),b=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),_=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._isStuck=!1,o}return b(e,t),e.prototype.getColour=function(){return this._isDone?v.White:this._isStuck?v.Red:v.Green},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/3e3;if(n.magnitudeSqrd()<.1)this._isDone=!0;else{this._direction=n.normalise();var r=this._position.add(this._direction.multiply(25));this._isStuck=!1;for(var s=0;s<e.length;s++)if(this.collidesAgent(e[s],r))return void(this._isStuck=!0);for(s=0;s<i.length;s++)if(this.collidesObstacle(i[s],r))return void(this._isStuck=!0);this._direction=n,this._position=this._position.add(this._direction.multiply(o))}}},e.prototype.collidesAgent=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e.prototype.collidesObstacle=function(t,e){return t instanceof a&&t.Position.subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e}(m),P=function(){function t(){}return t.getClosestPointOnLine=function(t,e,i){var n=e.normalise(),o=i.subtract(t).dot(n);return t.add(n.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,i,n){var o=i.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;return c<0?1/0:(-s-Math.sqrt(c))/2*r},t.getLineLineIntersection=function(t,e,i,n){var o=i.subtract(t).normalise(),r=n.x*e.y-n.y*e.x,s=(o.y*n.x-o.y*n.y)/r;return t.add(e.multiply(s))},t}(),M=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),E=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._colour=v.Green,o}return M(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/4e3;if(n.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new r(0,0),void(this._colour=v.White);for(var s,u,h=!0,l=0;l<e.length;l++)if(null!=(M=this.getAgentVelocityObstacle(e[l]))&&M.contains(n)){h=!1,s=M,u=l;break}for(l=0;l<i.length;l++)if(null!=(M=i[l].getVelocityObstacle(this))&&M.contains(n)){h=!1,s=M,u=-1;break}if(h)return this._direction=n,this._position=this._position.add(this._direction.multiply(o)),void(this._colour=v.Green);if(null!=s){var g=P.getClosestPointOnLine(s.vertex,s.tangent1,n),d=P.getClosestPointOnLine(s.vertex,s.tangent2,n),f=!0,p=!0;for(l=0;l<e.length;l++)l!=u&&(null!=(M=this.getAgentVelocityObstacle(e[l]))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1));for(l=0;l<i.length;l++)null!=(M=i[l].getVelocityObstacle(this))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1);if(f&&p?g.subtract(n).magnitudeSqrd()<d.subtract(n).magnitudeSqrd()?this._direction=g:this._direction=d:f?this._direction=g:p&&(this._direction=d),f||p)return this._position=this._position.add(this._direction.multiply(o)),void this.setColour(n)}var y=1/0,m=new r(0,0);for(l=0;l<100;l++){for(var x=new r(0,0).sample(1),w=1/0,b=0;b<e.length;b++){var _=e[b];(null==(M=this.getAgentVelocityObstacle(_))||M.contains(x))&&(E=P.getFirstRayCircleIntersection(_.getPosition().add(_.getDirection()),this.Radius+_.Radius,this._position,x.subtract(_.getDirection())))<w&&(w=E)}for(b=0;b<i.length;b++){var M;if((_=i[b])instanceof a)(null==(M=_.getVelocityObstacle(this))||M.contains(x))&&(E=P.getFirstRayCircleIntersection(_.Position,this.Radius+_.Radius,this._position,x))<w&&(w=E);else if(_ instanceof c){var E;(E=P.getLineLineIntersection(_.Start,_.End.subtract(_.Start).normalise(),this._position,x.normalise()).subtract(this._position).magnitude()/x.magnitude())<w&&(w=E)}}w<10&&(w=0);var R=200/w+n.subtract(x).magnitude();R<y&&(y=R,m=x)}this._direction=m,this._position=this._position.add(this._direction.multiply(o)),this.setColour(n)}},e.prototype.getAgentVelocityObstacle=function(t){var e=t.getDirection(),i=t.getPosition().subtract(this._position).add(e),n=t.Radius+this.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),h=u+c,l=new r(i.x+n*Math.cos(h),i.y+n*Math.sin(h)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,l,d)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),i=e>1?0:(1-e)/3;this._colour=v.FromHsv(i,1,1)},e}(m),R=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),S=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return R(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=e.add(i).divide(2),o=t.getPosition().subtract(this._position).add(i),a=t.Radius+this.Radius,c=i.subtract(o),u=c.magnitude();if(u<a)return null;var h=Math.acos(a/u),l=Math.atan2(c.y,c.x),g=l+h,d=new r(o.x+a*Math.cos(g),o.y+a*Math.sin(g)),f=l-h,p=new r(o.x+a*Math.cos(f),o.y+a*Math.sin(f));return new s(n,d,p)},e}(E),L=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return L(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=i,o=e.add(i).divide(2),a=t.getPosition().subtract(this._position),c=a.add(i),u=t.Radius+this.Radius,h=i.subtract(c),l=h.magnitude();if(l<u)return null;var g,d=Math.acos(u/l),f=Math.atan2(h.y,h.x),p=f+d,y=new r(c.x+u*Math.cos(p),c.y+u*Math.sin(p)),m=f-d,v=new r(c.x+u*Math.cos(m),c.y+u*Math.sin(m));return g=(a.x-i.x)*(e.y-i.y)-(a.y-i.y)*(e.x-i.x)>0?P.getLineLineIntersection(n,y,o,v):P.getLineLineIntersection(n,v,o,y),new s(g,y,v)},e}(E),T=function(){function t(){}return t.getAgent=function(t,e,i,n){switch(t){case"BasicAgent":return new w(e,i,n);case"StopAgent":return new _(e,i,n);case"VOAgent":return new E(e,i,n);case"RVOAgent":return new S(e,i,n);case"HRVOAgent":return new A(e,i,n);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),O=function(){function t(){}return t.getConfiguration=function(t,e,i,n,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,i,n,o);case"RandomToLine":return this.RandomToLine(e,i,n,o);case"CircleToCircle":return this.CircleToCircle(e,i,n,o);case"GridToGrid":return this.GridToGrid(e,i,n,o);case"Bollards":return this.Bollards(e,i,n,o);case"Bottleneck":return this.Bottleneck(e,i,n,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,i,n){for(var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))})),a=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))})),c=0;c<n;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,i,n){for(var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))})),a=0;a<n;a++){var c=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(new r(((a+1)/(n+1)-.5)*e,0)));o.push(c)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,i,n){for(var o=[],s=i/2-25,a=0;a<n;a++){var c=2*Math.PI*a/n,u=T.getAgent(t,a,new r(s*Math.cos(c),s*Math.sin(c)),this.preferredVelocityFromGoalPosition(new r(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI))));o.push(u)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,i,n){for(var o=[],s=Math.ceil(Math.sqrt(n/2)),a=90,c=30-e/2,u=(s-1)/2*a,h=0;h<n;h++){var l=Math.floor(h/2),g=Math.floor(l/s),d=l%s;if(h%2==0){var f=T.getAgent(t,h,new r(c+(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(-c-d*a,u-g*a)));o.push(f)}else f=T.getAgent(t,h,new r(-c-(s-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new r(c+d*a,u-g*a))),o.push(f)}return{agents:o,obstacles:[]}},t.Bollards=function(t,e,i,n){for(var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))})),c=0;c<n;c++){var u=T.getAgent(t,c,s[c],this.preferredVelocityFromGoalPosition(s[c].add(new r(e/2+200,0))));o.push(u)}var h=[];for(c=0;c<5;c++)h.push(new a(new r(0,120*c-240),20));return{agents:o,obstacles:h}},t.Bottleneck=function(t,e,i,n){for(var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))})),a=0;a<n;a++){var u=T.getAgent(t,a,s[a],this.preferredVelocityFromGoalPosition(s[a].add(new r(e/2+200,0))));o.push(u)}var h=[];return h.push(new c(new r(0,-500),new r(0,-80))),h.push(new c(new r(0,500),new r(0,80))),{agents:o,obstacles:h}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var i=t.subtract(e);return i.magnitudeSqrd()<1?i:i.normalise()}},t.poissonDiskSample=function(t,e,i,n){for(var o=[],s=function(){for(var i,s=!0;s;)s=!1,i=new r(t*Math.random(),e*Math.random()),o.forEach((function(t){i.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(s=!0)}));o.push(i)},a=0;a<i;a++)s();return o},t}(),I=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d")}return t.prototype.init=function(t){var e=this;this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height),this.context.strokeStyle="white",this.context.lineWidth=2,t.getObstacles().forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)}))},t.prototype.render=function(t){var e=this;t.getAgents().forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.fillRect(e.x,-e.y,1,1)},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,t.Start.y),this.context.lineTo(t.End.x,t.End.y),this.context.stroke()},t}(),D=document.getElementById("config"),C=document.getElementById("agentType"),V=document.getElementById("range"),B=document.getElementById("numberOfAgents"),F=document.getElementById("canvas2d"),U=document.getElementById("canvas3d"),k=document.getElementById("canvasTrace"),N=document.getElementById("framerate"),G=document.getElementById("playButton"),j=document.getElementById("stepButton"),Y=new o(new y([])),q=new u(F),X=new p(U),H=new I(k),W=q,z=!1,K=200;function Q(){this.reconfigure();var t=0,e=0,i=0;window.requestAnimationFrame((function n(o){var r=o-t;t=o,z&&Y.update(r,K),W.render(Y),i++,o-e>=250&&(N.textContent="FPS: "+(1e3*i/(o-e)).toFixed(1),i=0,e=o),window.requestAnimationFrame(n)}))}function Z(t){switch(t){case"2D":document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),W=q,F.style.display="block",U.style.display="none",k.style.display="none";break;case"3D":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),W=X,F.style.display="none",U.style.display="block",k.style.display="none";break;case"Trace":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),W=H,F.style.display="none",U.style.display="none",k.style.display="block";break;default:throw new Error('Unknown view "'+t+'"')}W.init(Y)}function J(){(z=!z)?(G.textContent="Pause",j.disabled=!0):(G.textContent="Play",j.disabled=!1)}function $(){Y.update(1e3/60,K)}function tt(){var t,e;z&&this.playPause();var i=D.value,n=C.value;K=null!==(t=parseInt(V.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(B.value))&&void 0!==e?e:0;Y.init(O.getConfiguration(i,n,F.width,F.height,o)),W.init(Y)}}},e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}return i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(317)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9TaW11bGF0aW9uLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL1ZlY3RvcjJmLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL1ZlbG9jaXR5T2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL29ic3RhY2xlcy9MaW5lT2JzdGFjbGUudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1JlbmRlcmVyMkQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvTWF0NGYudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL0FnZW50TWVzaC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9tZXNoZXMvRmxvb3JNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL21lc2hlcy9DeWxpbmRlck1lc2gudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvbWVzaGVzL1dhbGxNZXNoLnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL3JlbmRlcmVycy9SZW5kZXJlcjNELnRzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yLy4vc3JjL0FnZW50VHJlZS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9Db2xvdXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0Jhc2ljQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL1N0b3BBZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9HZW9tZXRyeS50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9hZ2VudHMvUlZPQWdlbnQudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvYWdlbnRzL0hSVk9BZ2VudC50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci8uL3NyYy9BZ2VudEZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvQ29uZmlndXJhdGlvbkZhY3RvcnkudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvcmVuZGVyZXJzL1RyYWNlUmVuZGVyZXIudHMiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3IvLi9zcmMvZGVtby50cyIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9Dcm93ZFNpbXVsYXRvci93ZWJwYWNrL3N0YXJ0dXAiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL0Nyb3dkU2ltdWxhdG9yL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQ3Jvd2RTaW11bGF0b3Ivd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCJdLCJuYW1lcyI6WyJhZ2VudHMiLCJ0aGlzIiwiX2FnZW50cyIsImluaXQiLCJjb25maWd1cmF0aW9uIiwidXBkYXRlIiwiX29ic3RhY2xlcyIsIm9ic3RhY2xlcyIsImRlbHRhVCIsInJhbmdlIiwiZm9yRWFjaCIsImFnZW50IiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4iLCJnZXRBbGwiLCJnZXRBZ2VudHMiLCJnZXRPYnN0YWNsZXMiLCJ4IiwieSIsImNvcHkiLCJ2IiwiVmVjdG9yMmYiLCJhZGQiLCJzdWJ0cmFjdCIsIm11bHRpcGx5IiwicyIsImRpdmlkZSIsImRvdCIsIm1hZ25pdHVkZVNxcmQiLCJtYWduaXR1ZGUiLCJNYXRoIiwic3FydCIsIm5vcm1hbGlzZSIsIm0iLCJzYW1wbGUiLCJtYXhSYWRpdXMiLCJyYWRpdXMiLCJyYW5kb20iLCJhbmdsZSIsIlBJIiwiY29zIiwic2luIiwiaXNMZWZ0T2YiLCJwb2ludCIsImlzUmlnaHRPZiIsInZlcnRleCIsInRhbmdlbnQxIiwidGFuZ2VudDIiLCJjb250YWlucyIsInZlbG9jaXR5IiwiZGV0ZXJtaW5hbnQxIiwiZGV0ZXJtaW5hbnQyIiwicG9zaXRpb24iLCJQb3NpdGlvbiIsIlJhZGl1cyIsImdldFZlbG9jaXR5T2JzdGFjbGUiLCJ2ZWxvY2l0eUIiLCJjZW50cmUiLCJnZXRQb3NpdGlvbiIsImRpZmYiLCJkaXN0IiwidGhldGEiLCJhY29zIiwicGhpIiwiYXRhbjIiLCJhbmdsZTEiLCJhbmdsZTIiLCJWZWxvY2l0eU9ic3RhY2xlIiwic3RhcnQiLCJlbmQiLCJTdGFydCIsIkVuZCIsInZvU3RhcnQiLCJwb2ludFZlbG9jaXR5T2JzdGFjbGUiLCJ2b0VuZCIsImxlZnQiLCJyaWdodCIsImNhbnZhcyIsImNhbWVyYURpc3QiLCJtb3VzZURvd24iLCJldmVudCIsImRyYWciLCJvbGRYIiwicGFnZVgiLCJvbGRZIiwicGFnZVkiLCJtb3VzZVVwIiwicHJldmVudERlZmF1bHQiLCJtb3VzZU1vdmUiLCJ4UGFuIiwieVBhbiIsIm1vdXNlU2Nyb2xsIiwiZGVsdGFZIiwiY29udGV4dCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwiX3NpbXVsYXRpb24iLCJyZW5kZXIiLCJzaW11bGF0aW9uIiwic2NhbGVGYWN0b3IiLCJzZXRUcmFuc2Zvcm0iLCJmaWxsU3R5bGUiLCJmaWxsUmVjdCIsInN0cm9rZVN0eWxlIiwibGluZVdpZHRoIiwib2JzdGFjbGUiLCJDaXJjbGVPYnN0YWNsZSIsImRyYXdDaXJjbGVPYnN0YWNsZSIsIkxpbmVPYnN0YWNsZSIsImRyYXdMaW5lT2JzdGFjbGUiLCJkcmF3QWdlbnQiLCJkaXJlY3Rpb24iLCJnZXREaXJlY3Rpb24iLCJjb2xvdXIiLCJnZXRDb2xvdXIiLCJiZWdpblBhdGgiLCJyIiwiZyIsImIiLCJhcmMiLCJtb3ZlVG8iLCJuZXdQb3MiLCJsaW5lVG8iLCJzdHJva2UiLCJkIiwiU1FSVDFfMiIsImdldElkZW50aXR5TWF0cml4IiwiRmxvYXQzMkFycmF5IiwiZ2V0WFJvdGF0aW9uTWF0cml4IiwiYyIsImdldFlSb3RhdGlvbk1hdHJpeCIsImdldFpSb3RhdGlvbk1hdHJpeCIsImdldFRyYW5zbGF0aW9uTWF0cml4IiwieiIsImdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeCIsImZvdiIsImFzcGVjdFJhdGlvIiwibmVhciIsImZhciIsImYiLCJ0YW4iLCJpIiwibXVsdGlwbHlNYXRyaWNlcyIsImEiLCJyZXN1bHQiLCJqIiwibnVtIiwiayIsInZlcnRpY2VzIiwiaW5kaWNlcyIsImdldFZlcnRpY2VzIiwidyIsImgiLCJ3YWxsIiwibm9ybWFsIiwieFJvdCIsInlSb3QiLCJ4Um90TWF0IiwiTWF0NGYiLCJ5Um90TWF0Iiwid29ybGRNYXRyaXgiLCJnbCIsInVuaWZvcm1NYXRyaXg0ZnYiLCJ3b3JsZE1hdExvYyIsInZpZXdNYXRyaXgiLCJ2aWV3TWF0TG9jIiwicHJvamVjdGlvbk1hdHJpeCIsInByb2pNYXRMb2MiLCJ2ZXJ0ZXhTaGFkZXIiLCJjcmVhdGVTaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiZnJhZ21lbnRTaGFkZXIiLCJGUkFHTUVOVF9TSEFERVIiLCJzaGFkZXJTb3VyY2UiLCJjb21waWxlU2hhZGVyIiwiZ2V0U2hhZGVyUGFyYW1ldGVyIiwiQ09NUElMRV9TVEFUVVMiLCJwcm9ncmFtIiwiY3JlYXRlUHJvZ3JhbSIsImF0dGFjaFNoYWRlciIsImxpbmtQcm9ncmFtIiwiZ2V0UHJvZ3JhbVBhcmFtZXRlciIsIkxJTktfU1RBVFVTIiwidmFsaWRhdGVQcm9ncmFtIiwiVkFMSURBVEVfU1RBVFVTIiwidXNlUHJvZ3JhbSIsImVuYWJsZSIsIkRFUFRIX1RFU1QiLCJjbGVhckNvbG9yIiwiQ1VMTF9GQUNFIiwiZnJvbnRGYWNlIiwiQ0NXIiwiY3VsbEZhY2UiLCJCQUNLIiwiZ2V0VW5pZm9ybUxvY2F0aW9uIiwicG9zVmVjTG9jIiwiZGlyVmVjTG9jIiwicmFkaXVzTG9jIiwiaGVpZ2h0TG9jIiwiYmFzZUNvbG91ckxvYyIsImNvbnNvbGUiLCJlcnJvciIsImdldFByb2dyYW1JbmZvTG9nIiwiZ2V0U2hhZGVySW5mb0xvZyIsImZsb29yVmVydHMiLCJGbG9vck1lc2giLCJ3YWxscyIsImZpbHRlciIsIm1hcCIsIndhbGxWZXJ0cyIsIldhbGxNZXNoIiwicmVkdWNlIiwiYWNjIiwidmFsIiwiY29uY2F0IiwiQWdlbnRNZXNoIiwiQ3lsaW5kZXJNZXNoIiwiVmVydGV4QnVmZmVyIiwiY3JlYXRlQnVmZmVyIiwiYmluZEJ1ZmZlciIsIkFSUkFZX0JVRkZFUiIsImJ1ZmZlckRhdGEiLCJTVEFUSUNfRFJBVyIsImN5bGluZGVyT2Zmc2V0IiwibGVuZ3RoIiwiZmxvb3JPZmZzZXQiLCJ3YWxsc09mZnNldCIsIndhbGxJbmRpY2VzIiwiX3dhbGwiLCJVaW50MTZBcnJheSIsIkluZGV4QnVmZmVyIiwiRUxFTUVOVF9BUlJBWV9CVUZGRVIiLCJwb3NpdGlvbkF0dHJpYnV0ZSIsImdldEF0dHJpYkxvY2F0aW9uIiwidmVydGV4QXR0cmliUG9pbnRlciIsIkZMT0FUIiwiQllURVNfUEVSX0VMRU1FTlQiLCJlbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSIsIm5vcm1hbEF0dHJpYnV0ZSIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsIkRFUFRIX0JVRkZFUl9CSVQiLCJwb3MiLCJ1bmlmb3JtMmYiLCJkaXIiLCJ1bmlmb3JtMWYiLCJjb2xvciIsInVuaWZvcm0zZiIsImRyYXdFbGVtZW50cyIsIlRSSUFOR0xFUyIsIlVOU0lHTkVEX1NIT1JUIiwid2FsbENvdW50IiwiX3Jvb3QiLCJjb25zdHJ1Y3RUcmVlIiwiZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhciIsIm1pblgiLCJtaW5ZIiwibWF4WCIsIm1heFkiLCJyYW5nZVNlYXJjaCIsIm90aGVyIiwiSWQiLCJmdW4iLCJ4QXhpcyIsIm1pZCIsImZsb29yIiwic29ydGVkIiwic29ydCIsInNsaWNlIiwicm9vdCIsInJlcyIsInB1c2giLCJpZCIsInN0YXJ0UG9zaXRpb24iLCJnZXRQcmVmZXJyZWRWZWxvY2l0eSIsIl9wb3NpdGlvbiIsIl9kaXJlY3Rpb24iLCJfZ2V0UHJlZmVycmVkVmVsb2NpdHkiLCJfaXNEb25lIiwiaXNEb25lIiwiRnJvbUhzdiIsImZyYWN0IiwiUCIsIlEiLCJUIiwiV2hpdGUiLCJSZWQiLCJHcmVlbiIsIkNvbG91ciIsInByZWZlcnJlZFZlbG9jaXR5Iiwic3RlcFNpemUiLCJBZ2VudCIsIl9pc1N0dWNrIiwibmVpZ2hib3VycyIsImhlYWRpbmciLCJjb2xsaWRlc0FnZW50IiwiY29sbGlkZXNPYnN0YWNsZSIsImdldENsb3Nlc3RQb2ludE9uTGluZSIsImxpbmVQb2ludCIsImxpbmVEaXJlY3Rpb24iLCJkaXN0YW5jZSIsImdldEZpcnN0UmF5Q2lyY2xlSW50ZXJzZWN0aW9uIiwib3JpZ2luIiwiZGVsdGEiLCJkaXNjcmltIiwiSW5maW5pdHkiLCJnZXRMaW5lTGluZUludGVyc2VjdGlvbiIsInBvaW50MSIsImRpcmVjdGlvbjEiLCJwb2ludDIiLCJkaXJlY3Rpb24yIiwiZGV0IiwidCIsIl9jb2xvdXIiLCJjb2xsaXNpb24iLCJzYWZlIiwidmVsb2NpdHlPYnN0YWNsZSIsImdldEFnZW50VmVsb2NpdHlPYnN0YWNsZSIsIkdlb21ldHJ5IiwibGVmdFNhZmUiLCJyaWdodFNhZmUiLCJzZXRDb2xvdXIiLCJtaW5QZW5hbHR5IiwiYmVzdFZlbG9jaXR5IiwibWluVGltZVRvQ29sbGlzaW9uIiwidGltZVRvQ29sbGlzaW9uIiwicGVuYWx0eSIsInN0cmVzcyIsImh1ZSIsInZlbG9jaXR5QSIsIlZPQWdlbnQiLCJ2b1ZlcnRleCIsInJ2b1ZlcnRleCIsInBvc2l0aW9uQiIsImdldEFnZW50IiwidHlwZSIsIkJhc2ljQWdlbnQiLCJTdG9wQWdlbnQiLCJSVk9BZ2VudCIsIkhSVk9BZ2VudCIsIkVycm9yIiwiZ2V0Q29uZmlndXJhdGlvbiIsImFnZW50VHlwZSIsIm51bWJlck9mQWdlbnRzIiwiUmFuZG9tVG9SYW5kb20iLCJSYW5kb21Ub0xpbmUiLCJDaXJjbGVUb0NpcmNsZSIsIkdyaWRUb0dyaWQiLCJCb2xsYXJkcyIsIkJvdHRsZW5lY2siLCJzdGFydFBvc2l0aW9ucyIsInBvaXNzb25EaXNrU2FtcGxlIiwiZ29hbFBvc2l0aW9ucyIsIkFnZW50RmFjdG9yeSIsInByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbiIsIl93aWR0aCIsIl9oZWlnaHQiLCJncmlkU2l6ZSIsImNlaWwiLCJvZmZzZXQiLCJpZHgiLCJyb3ciLCJjb2wiLCJnb2FsUG9zaXRpb24iLCJnb2FsRGlyZWN0aW9uIiwieFJhbmdlIiwieVJhbmdlIiwibiIsInRocmVzaG9sZCIsInNhbXBsZXMiLCJyZXNhbXBsZSIsImNvbmZpZ1NlbGVjdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZ2VudFR5cGVTZWxlY3QiLCJyYW5nZUlucHV0IiwibnVtYmVyT2ZBZ2VudHNJbnB1dCIsImNhbnZhczJkIiwiY2FudmFzM2QiLCJjYW52YXNUcmFjZSIsImZyYW1lcmF0ZSIsInBsYXlCdXR0b24iLCJzdGVwQnV0dG9uIiwiU2ltdWxhdGlvbiIsIkFnZW50VHJlZSIsInJlbmRlcmVyMmQiLCJSZW5kZXJlcjJEIiwicmVuZGVyZXIzZCIsIlJlbmRlcmVyM0QiLCJyZW5kZXJlclRyYWNlIiwiVHJhY2VSZW5kZXJlciIsInJlbmRlcmVyIiwicGxheSIsInJlY29uZmlndXJlIiwibGFzdFJlbmRlciIsImxhc3RGUFMiLCJmcmFtZXMiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJsb29wIiwidGltZXN0YW1wIiwidGV4dENvbnRlbnQiLCJ0b0ZpeGVkIiwic3dpdGNoVmlldyIsInZpZXciLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJzdHlsZSIsImRpc3BsYXkiLCJwbGF5UGF1c2UiLCJkaXNhYmxlZCIsInN0ZXAiLCJjb25maWciLCJ2YWx1ZSIsInBhcnNlSW50IiwiQ29uZmlndXJhdGlvbkZhY3RvcnkiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIl0sIm1hcHBpbmdzIjoib0tBSUEsSSxFQUFBLGFBSUUsV0FBWUEsR0FDVkMsS0FBS0MsUUFBVUYsRUE0Qm5CLE9BekJFLFlBQUFHLEtBQUEsU0FBS0MsR0FDSEgsS0FBS0MsUUFBUUcsT0FBT0QsRUFBY0osUUFDbENDLEtBQUtLLFdBQWFGLEVBQWNHLFdBR2xDLFlBQUFGLE9BQUEsU0FBT0csRUFBZ0JDLEdBQXZCLFdBQ0VSLEtBQUtDLFFBQVFRLFNBQVEsU0FBQ0MsR0FDcEJBLEVBQU1OLE9BQ0pHLEVBQ0EsRUFBS04sUUFBUVUsOEJBQThCRCxFQUFPRixHQUNsRCxFQUFLSCxlQUtUTCxLQUFLQyxRQUFRRyxPQUFPSixLQUFLQyxRQUFRVyxXQUduQyxZQUFBQyxVQUFBLFdBQ0UsT0FBT2IsS0FBS0MsU0FHZCxZQUFBYSxhQUFBLFdBQ0UsT0FBT2QsS0FBS0ssWUFFaEIsRUFqQ0EsR0NKQSxhQUlFLFdBQVlVLEVBQVdDLEdBQ3JCaEIsS0FBS2UsRUFBSUEsRUFDVGYsS0FBS2dCLEVBQUlBLEVBNkRiLE9BMURFLFlBQUFD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VyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLE9BQVMsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxHQUFNLEdBQ3hDLE9BQVMsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxPQUFTLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFDeEMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3RDLE9BQVMsUUFBVSxRQUFVLEVBQUssR0FBTSxHQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ2xDLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUNyQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbEMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUFLLEVBQ3BDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxHQUFNLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxRQUFVLEVBQUssR0FBTSxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLEVBQUssRUFBSyxFQUFLLEdBQ25DLFNBQVcsUUFBVSxHQUFNLEVBQUssRUFBSyxFQUN0QyxTQUFXLFFBQVUsRUFBSyxHQUFNLEVBQUssR0FDcEMsU0FBVyxRQUFVLEVBQUssR0FBTSxFQUFLLEVBQ3RDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDM0MsU0FBVyxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEdBQU0sR0FDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxHQUN2QyxTQUFXLEtBQU8sVUFBVyxFQUFLLEVBQUssRUFDeEMsU0FBVyxLQUFPLFNBQVUsR0FBTSxFQUFLLEVBQ3ZDLFNBQVcsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUN0QyxTQUFXLEtBQU8sU0FBVSxHQUFNLEVBQUssRUFDdkMsU0FBVyxLQUFPLFNBQVUsRUFBSyxFQUFLLEdBQ3JDLFNBQVcsS0FBTyxTQUFVLEdBQU0sRUFBSyxHQUN2QyxTQUFXLEtBQU8sVUFBVyxFQUFLLEVBQUssR0FDdkMsUUFBVSxLQUFPLFVBQVcsRUFBSyxFQUFLLEdBQ3RDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxHQUNyQyxRQUFVLEtBQU8sVUFBVyxFQUFLLEVBQUssR0FDdEMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3RDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLEtBQU8sU0FBVSxFQUFLLEVBQUssRUFDckMsUUFBVSxLQUFPLFNBQVUsRUFBSyxFQUFLLEVBQ3JDLFFBQVUsS0FBTyxTQUFVLEVBQUssRUFBSyxFQUNyQyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxHQUFNLEVBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxRQUFVLFFBQVUsU0FBVSxFQUFLLEdBQU0sRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUN6QyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsU0FBVyxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEVBQUssR0FBTSxHQUMxQyxTQUFXLFFBQVUsVUFBVyxFQUFLLEVBQUssR0FDMUMsT0FBUyxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUN6QyxPQUFTLFFBQVUsUUFBVSxHQUFNLEVBQUssRUFDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdEMsT0FBUyxRQUFVLFNBQVUsR0FBTSxFQUFLLEdBQ3hDLE9BQVMsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN4QyxPQUFTLFFBQVUsU0FBVyxFQUFLLEVBQUssR0FDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3ZDLE9BQVMsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN4QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsT0FBUyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3ZDLE9BQVMsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN2QyxPQUFTLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDdkMsT0FBUyxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3RDLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNwQyxRQUFVLFFBQVUsRUFBSyxHQUFNLEVBQUssRUFDckMsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3BDLFFBQVUsUUFBVSxFQUFLLEdBQU0sRUFBSyxHQUNuQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDcEMsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3JDLFFBQVUsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNwQyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxRQUFVLEdBQU0sRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEVBQzFDLFFBQVUsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN2QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDekMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDeEMsUUFBVSxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxTQUFXLEVBQUssRUFBSyxFQUMxQyxRQUFVLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDeEMsUUFBVSxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3hDLFFBQVUsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDdkMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3hDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVyxFQUFLLEVBQUssR0FDekMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEdBQ3pDLFFBQVUsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUN6QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsUUFBVSxRQUFVLFFBQVUsR0FBTSxFQUFLLEVBQ3pDLFFBQVUsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUN4QyxRQUFVLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDekMsUUFBVSxRQUFVLFNBQVUsRUFBSyxFQUFLLEdBQ3ZDLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxHQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssRUFDckMsU0FBVyxRQUFVLEVBQUssRUFBSyxHQUFNLEVBQ3JDLFNBQVcsUUFBVSxFQUFLLEVBQUssRUFBSyxHQUNuQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEdBQU0sR0FDckMsU0FBVyxRQUFVLEdBQU0sRUFBSyxFQUFLLEVBQ3RDLFNBQVcsUUFBVSxFQUFLLEVBQUssR0FBTSxFQUNyQyxTQUFXLFFBQVUsRUFBSyxFQUFLLEVBQUssR0FDbkMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3pDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxFQUMxQyxTQUFXLFFBQVUsUUFBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEdBQ3hDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN6QyxTQUFXLFFBQVUsU0FBVyxFQUFLLEVBQUssRUFDM0MsU0FBVyxRQUFVLFFBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxRQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEVBQzNDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxFQUN6QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssRUFDekMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEVBQUssRUFBSyxHQUN4QyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FDekMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxVQUFXLEVBQUssRUFBSyxHQUMxQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssR0FDMUMsU0FBVyxRQUFVLFVBQVcsRUFBSyxFQUFLLEdBQzFDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMzQyxTQUFXLFFBQVUsU0FBVSxHQUFNLEVBQUssRUFDMUMsU0FBVyxRQUFVLFNBQVUsRUFBSyxFQUFLLEVBQ3pDLFNBQVcsUUFBVSxTQUFVLEdBQU0sRUFBSyxFQUMxQyxTQUFXLFFBQVUsU0FBVSxFQUFLLEVBQUssR0FJcEMsRUFBQUMsUUFBVSxDQUNmLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsRUFBRyxFQUNOLEVBQUcsRUFBRyxFQUNOLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsR0FBSSxFQUNQLElBQUssR0FBSSxHQUNULElBQUssSUFBSyxHQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxJQUNULEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxJQUNULEdBQUksSUFBSyxHQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksSUFBSyxJQUNULElBQUssR0FBSSxHQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsRUFBRyxFQUNOLEVBQUcsRUFBRyxFQUNOLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLEVBQUcsR0FBSSxHQUNQLElBQUssSUFBSyxHQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxHQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssR0FBSSxHQUNULEdBQUksSUFBSyxJQUNULEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxJQUNSLElBQUssSUFBSyxHQUNWLEdBQUksR0FBSSxHQUNSLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLElBQUssSUFBSyxJQUNWLEdBQUksR0FBSSxHQUNSLEdBQUksR0FBSSxJQUVaLEVBelNBLEdDQUEsMkJBb0JBLE9BbkJTLEVBQUFDLFlBQVAsU0FBbUIxRCxFQUFlQyxHQUNoQyxJQUFNMEQsRUFBSTNELEVBQVEsRUFDWjRELEVBQUkzRCxFQUFTLEVBR25CLE1BQU8sQ0FFSjBELEdBQUlDLEVBQUcsRUFBSyxFQUFLLEVBQUssRUFDdEJELEVBQUlDLEVBQUcsRUFBSyxFQUFLLEVB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QUNYTCxFQUFvQk8sRUFBRUYsRUFBWUMsS0FBU04sRUFBb0JPLEVBQUVMLEVBQVNJLElBQzVFRSxPQUFPQyxlQUFlUCxFQUFTSSxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsTUNKM0VOLEVBQW9CTyxFQUFJLENBQUNLLEVBQUtDLElBQVNMLE9BQU9NLFVBQVVDLGVBQWVDLEtBQUtKLEVBQUtDLEdDQ2pGYixFQUFvQjdTLEVBQUsrUyxJQUNILG9CQUFYZSxRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVQLEVBQVNlLE9BQU9DLFlBQWEsQ0FBRXRCLE1BQU8sV0FFN0RZLE9BQU9DLGVBQWVQLEVBQVMsYUFBYyxDQUFFTixPQUFPLEtIRmhESSxFQUFvQixNIiwiZmlsZSI6ImRlbW8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4vSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ29uZmlndXJhdGlvbiB9IGZyb20gXCIuL0NvbmZpZ3VyYXRpb25GYWN0b3J5XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU2ltdWxhdGlvbiB7XHJcbiAgcHJpdmF0ZSBfYWdlbnRzOiBJQWdlbnRDb2xsZWN0aW9uO1xyXG4gIHByaXZhdGUgX29ic3RhY2xlczogSU9ic3RhY2xlW107XHJcblxyXG4gIGNvbnN0cnVjdG9yKGFnZW50czogSUFnZW50Q29sbGVjdGlvbikge1xyXG4gICAgdGhpcy5fYWdlbnRzID0gYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgaW5pdChjb25maWd1cmF0aW9uOiBDb25maWd1cmF0aW9uKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMudXBkYXRlKGNvbmZpZ3VyYXRpb24uYWdlbnRzKTtcclxuICAgIHRoaXMuX29ic3RhY2xlcyA9IGNvbmZpZ3VyYXRpb24ub2JzdGFjbGVzO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCByYW5nZTogbnVtYmVyKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgYWdlbnQudXBkYXRlKFxyXG4gICAgICAgIGRlbHRhVCxcclxuICAgICAgICB0aGlzLl9hZ2VudHMuZ2V0TmVpZ2hib3Vyc0luUmFuZ2VFdWNsaWRlYW4oYWdlbnQsIHJhbmdlKSxcclxuICAgICAgICB0aGlzLl9vYnN0YWNsZXNcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFJlcXVpcmVkIHRvIHJlLWNvbnN0cnVjdCBhZ2VudCB0cmVlXHJcbiAgICB0aGlzLl9hZ2VudHMudXBkYXRlKHRoaXMuX2FnZW50cy5nZXRBbGwoKSk7XHJcbiAgfVxyXG5cclxuICBnZXRBZ2VudHMoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgZ2V0T2JzdGFjbGVzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX29ic3RhY2xlcztcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIFZlY3RvcjJmIHtcclxuICB4OiBudW1iZXI7XHJcbiAgeTogbnVtYmVyO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xyXG4gICAgdGhpcy54ID0geDtcclxuICAgIHRoaXMueSA9IHk7XHJcbiAgfVxyXG5cclxuICBjb3B5KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih2LngsIHYueSk7XHJcbiAgfVxyXG5cclxuICBhZGQodjogVmVjdG9yMmYpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCArIHYueCwgdGhpcy55ICsgdi55KTtcclxuICB9XHJcblxyXG4gIHN1YnRyYWN0KHY6IFZlY3RvcjJmKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyZih0aGlzLnggLSB2LngsIHRoaXMueSAtIHYueSk7XHJcbiAgfVxyXG5cclxuICBtdWx0aXBseShzOiBudW1iZXIpOiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gbmV3IFZlY3RvcjJmKHRoaXMueCAqIHMsIHRoaXMueSAqIHMpO1xyXG4gIH1cclxuXHJcbiAgZGl2aWRlKHM6IG51bWJlcik6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYodGhpcy54IC8gcywgdGhpcy55IC8gcyk7XHJcbiAgfVxyXG5cclxuICBkb3QodjogVmVjdG9yMmYpIHtcclxuICAgIHJldHVybiB0aGlzLnggKiB2LnggKyB0aGlzLnkgKiB2Lnk7XHJcbiAgfVxyXG5cclxuICBtYWduaXR1ZGVTcXJkKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy54ICoqIDIgKyB0aGlzLnkgKiogMjtcclxuICB9XHJcblxyXG4gIG1hZ25pdHVkZSgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLm1hZ25pdHVkZVNxcmQoKSk7XHJcbiAgfVxyXG5cclxuICBub3JtYWxpc2UoKTogVmVjdG9yMmYge1xyXG4gICAgbGV0IG0gPSB0aGlzLm1hZ25pdHVkZSgpO1xyXG4gICAgcmV0dXJuIG0gPT0gMCA/IG5ldyBWZWN0b3IyZigwLCAwKSA6IHRoaXMuZGl2aWRlKG0pO1xyXG4gIH1cclxuXHJcbiAgc2FtcGxlKG1heFJhZGl1czogbnVtYmVyKSB7XHJcbiAgICAvLyBVbmlmb3JtbHkgc2FtcGxlIHRoZSBjaXJjbGUgY2VudHJlZCBhdCB0aGlzIHBvaW50IHdpdGggcmFkaXVzIG1heFJhZGl1c1xyXG4gICAgbGV0IHJhZGl1cyA9IE1hdGguc3FydChNYXRoLnJhbmRvbSgpKSAqIG1heFJhZGl1cztcclxuICAgIGxldCBhbmdsZSA9IDIgKiBNYXRoLlBJICogTWF0aC5yYW5kb20oKTtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIHRoaXMueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlKSxcclxuICAgICAgdGhpcy55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBwb2ludCBsaWVzIHRvIHRoZSBsZWZ0IG9mIHRoZSBsaW5lIGZyb20gdGhlXHJcbiAgLy8gb3JpZ2luIHRvIHRoaXMgdmVjdG9yLCBvdGhlcndpc2UgcmV0dXJucyBmYWxzZVxyXG4gIGlzTGVmdE9mKHBvaW50OiBWZWN0b3IyZik6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIChwb2ludC55IC0gdGhpcy55KSAtIHRoaXMueSAqIChwb2ludC54IC0gdGhpcy54KSA+IDA7XHJcbiAgfVxyXG5cclxuICAvLyBSZXR1cm5zIHRydWUgaWYgdGhlIGdpdmVuIHBvaW50IGxpZXMgdG8gdGhlIHJpZ2h0IG9mIHRoZSBsaW5lIGZyb20gdGhlXHJcbiAgLy8gb3JpZ2luIHRvIHRoaXMgdmVjdG9yLCBvdGhlcndpc2UgcmV0dXJucyBmYWxzZVxyXG4gIGlzUmlnaHRPZihwb2ludDogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnggKiAocG9pbnQueSAtIHRoaXMueSkgLSB0aGlzLnkgKiAocG9pbnQueCAtIHRoaXMueCkgPCAwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVmVsb2NpdHlPYnN0YWNsZSB7XHJcbiAgdmVydGV4OiBWZWN0b3IyZjtcclxuICB0YW5nZW50MTogVmVjdG9yMmY7XHJcbiAgdGFuZ2VudDI6IFZlY3RvcjJmO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih2ZXJ0ZXg6IFZlY3RvcjJmLCB0YW5nZW50MTogVmVjdG9yMmYsIHRhbmdlbnQyOiBWZWN0b3IyZikge1xyXG4gICAgdGhpcy52ZXJ0ZXggPSB2ZXJ0ZXg7XHJcbiAgICB0aGlzLnRhbmdlbnQxID0gdGFuZ2VudDE7XHJcbiAgICB0aGlzLnRhbmdlbnQyID0gdGFuZ2VudDI7XHJcbiAgfVxyXG5cclxuICBjb250YWlucyh2ZWxvY2l0eTogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIC8vIEZpcnN0IGhhbGYtcGxhbmVcclxuICAgIGNvbnN0IGRldGVybWluYW50MSA9XHJcbiAgICAgICh0aGlzLnRhbmdlbnQxLnggLSB0aGlzLnZlcnRleC54KSAqICh2ZWxvY2l0eS55IC0gdGhpcy52ZXJ0ZXgueSkgLVxyXG4gICAgICAodGhpcy50YW5nZW50MS55IC0gdGhpcy52ZXJ0ZXgueSkgKiAodmVsb2NpdHkueCAtIHRoaXMudmVydGV4LngpO1xyXG5cclxuICAgIC8vIFNlY29uZCBoYWxmLXBsYW5lXHJcbiAgICBjb25zdCBkZXRlcm1pbmFudDIgPVxyXG4gICAgICAodGhpcy50YW5nZW50Mi54IC0gdGhpcy52ZXJ0ZXgueCkgKiAodmVsb2NpdHkueSAtIHRoaXMudmVydGV4LnkpIC1cclxuICAgICAgKHRoaXMudGFuZ2VudDIueSAtIHRoaXMudmVydGV4LnkpICogKHZlbG9jaXR5LnggLSB0aGlzLnZlcnRleC54KTtcclxuXHJcbiAgICByZXR1cm4gZGV0ZXJtaW5hbnQxID4gMCAmJiBkZXRlcm1pbmFudDIgPCAwO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi4vSU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIENpcmNsZU9ic3RhY2xlIGltcGxlbWVudHMgSU9ic3RhY2xlIHtcclxuICByZWFkb25seSBQb3NpdGlvbjogVmVjdG9yMmY7XHJcbiAgcmVhZG9ubHkgUmFkaXVzOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHBvc2l0aW9uOiBWZWN0b3IyZiwgcmFkaXVzOiBudW1iZXIpIHtcclxuICAgIHRoaXMuUG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgIHRoaXMuUmFkaXVzID0gcmFkaXVzO1xyXG4gIH1cclxuXHJcbiAgZ2V0VmVsb2NpdHlPYnN0YWNsZShhZ2VudDogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHtcclxuICAgIC8vIFJlcHJlc2VudCBjaXJjdWxhciBvYnN0YWNsZSBhcyBhbiBhZ2VudCB3aXRoIHplcm8gdmVsb2NpdHlcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoZSBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSB0aGlzLlBvc2l0aW9uLnN1YnRyYWN0KGFnZW50LmdldFBvc2l0aW9uKCkpO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQjtcclxuICAgIGNvbnN0IHJhZGl1cyA9IHRoaXMuUmFkaXVzICsgYWdlbnQuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgTGluZU9ic3RhY2xlIGltcGxlbWVudHMgSU9ic3RhY2xlIHtcclxuICByZWFkb25seSBTdGFydDogVmVjdG9yMmY7XHJcbiAgcmVhZG9ubHkgRW5kOiBWZWN0b3IyZjtcclxuXHJcbiAgY29uc3RydWN0b3Ioc3RhcnQ6IFZlY3RvcjJmLCBlbmQ6IFZlY3RvcjJmKSB7XHJcbiAgICB0aGlzLlN0YXJ0ID0gc3RhcnQ7XHJcbiAgICB0aGlzLkVuZCA9IGVuZDtcclxuICB9XHJcbiAgZ2V0VmVsb2NpdHlPYnN0YWNsZShhZ2VudDogQWdlbnQpOiBWZWxvY2l0eU9ic3RhY2xlIHtcclxuICAgIGNvbnN0IHZvU3RhcnQgPSB0aGlzLnBvaW50VmVsb2NpdHlPYnN0YWNsZShhZ2VudCwgdGhpcy5TdGFydCk7XHJcbiAgICBjb25zdCB2b0VuZCA9IHRoaXMucG9pbnRWZWxvY2l0eU9ic3RhY2xlKGFnZW50LCB0aGlzLkVuZCk7XHJcblxyXG4gICAgaWYgKHZvU3RhcnQgPT0gbnVsbCAmJiB2b0VuZCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfSBlbHNlIGlmICh2b1N0YXJ0ID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuIHZvRW5kO1xyXG4gICAgfSBlbHNlIGlmICh2b0VuZCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiB2b1N0YXJ0O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGRldGVybWluYW50MSA9XHJcbiAgICAgIHZvU3RhcnQudGFuZ2VudDEueCAqIHZvRW5kLnRhbmdlbnQyLnkgLVxyXG4gICAgICB2b1N0YXJ0LnRhbmdlbnQxLnkgKiB2b0VuZC50YW5nZW50Mi54O1xyXG5cclxuICAgIGxldCBsZWZ0ID0gdm9TdGFydC50YW5nZW50MTtcclxuICAgIGlmICh2b1N0YXJ0LnRhbmdlbnQyLmlzTGVmdE9mKGxlZnQpKSB7XHJcbiAgICAgIGxlZnQgPSB2b1N0YXJ0LnRhbmdlbnQyO1xyXG4gICAgfVxyXG4gICAgaWYgKHZvRW5kLnRhbmdlbnQxLmlzTGVmdE9mKGxlZnQpKSB7XHJcbiAgICAgIGxlZnQgPSB2b0VuZC50YW5nZW50MTtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50Mi5pc0xlZnRPZihsZWZ0KSkge1xyXG4gICAgICBsZWZ0ID0gdm9FbmQudGFuZ2VudDI7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHJpZ2h0ID0gdm9TdGFydC50YW5nZW50MTtcclxuICAgIGlmICh2b1N0YXJ0LnRhbmdlbnQyLmlzUmlnaHRPZihyaWdodCkpIHtcclxuICAgICAgcmlnaHQgPSB2b1N0YXJ0LnRhbmdlbnQyO1xyXG4gICAgfVxyXG4gICAgaWYgKHZvRW5kLnRhbmdlbnQxLmlzUmlnaHRPZihyaWdodCkpIHtcclxuICAgICAgcmlnaHQgPSB2b0VuZC50YW5nZW50MTtcclxuICAgIH1cclxuICAgIGlmICh2b0VuZC50YW5nZW50Mi5pc1JpZ2h0T2YocmlnaHQpKSB7XHJcbiAgICAgIHJpZ2h0ID0gdm9FbmQudGFuZ2VudDI7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAwKSwgbGVmdCwgcmlnaHQpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBwb2ludFZlbG9jaXR5T2JzdGFjbGUoXHJcbiAgICBhZ2VudDogQWdlbnQsXHJcbiAgICBwb3NpdGlvbjogVmVjdG9yMmZcclxuICApOiBWZWxvY2l0eU9ic3RhY2xlIHtcclxuICAgIC8vIFJlcHJlc2VudCBjaXJjdWxhciBvYnN0YWNsZSBhcyBhbiBhZ2VudCB3aXRoIHplcm8gdmVsb2NpdHlcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoZSBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBwb3NpdGlvbi5zdWJ0cmFjdChhZ2VudC5nZXRQb3NpdGlvbigpKTtcclxuXHJcbiAgICAvLyBGaW5kIE1pbmtvd3NraSBzdW0gb2YgYWdlbnRzXHJcbiAgICBjb25zdCBjZW50cmUgPSBwb3NpdGlvbkI7XHJcbiAgICBjb25zdCByYWRpdXMgPSBhZ2VudC5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIFJldHVybiB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlbG9jaXR5QiwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4uL0lSZW5kZXJlclwiO1xyXG5pbXBvcnQgeyBTaW11bGF0aW9uIH0gZnJvbSBcIi4uL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUmVuZGVyZXIyRCBpbXBsZW1lbnRzIElSZW5kZXJlciB7XHJcbiAgcHJpdmF0ZSBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG4gIHByaXZhdGUgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xyXG5cclxuICAvLyBDYW1lcmEgY29udHJvbHNcclxuICBwcml2YXRlIGRyYWc6IGJvb2xlYW47XHJcbiAgcHJpdmF0ZSBvbGRYOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBvbGRZOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSB4UGFuOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSB5UGFuOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBjYW1lcmFEaXN0ID0gODAwOyAvLyBTdGFydCBjYW1lcmEgODAwICdweCcgYXdheVxyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgIHRoaXMueFBhbiA9IHRoaXMuY2FudmFzLndpZHRoIC8gMjtcclxuICAgIHRoaXMueVBhbiA9IHRoaXMuY2FudmFzLmhlaWdodCAvIDI7XHJcblxyXG4gICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVyc1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLm1vdXNlRG93biwgZmFsc2UpO1xyXG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwgdGhpcy5tb3VzZVVwLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdXRcIiwgdGhpcy5tb3VzZVVwLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIHRoaXMubW91c2VNb3ZlLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwid2hlZWxcIiwgdGhpcy5tb3VzZVNjcm9sbCwgeyBwYXNzaXZlOiBmYWxzZSB9KTtcclxuICB9XHJcblxyXG4gIGluaXQoX3NpbXVsYXRpb246IFNpbXVsYXRpb24pIHt9XHJcblxyXG4gIHJlbmRlcihzaW11bGF0aW9uOiBTaW11bGF0aW9uKSB7XHJcbiAgICBjb25zdCBzY2FsZUZhY3RvciA9IDgwMCAvIHRoaXMuY2FtZXJhRGlzdDtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcbiAgICBjb25zdCBvYnN0YWNsZXMgPSBzaW11bGF0aW9uLmdldE9ic3RhY2xlcygpO1xyXG5cclxuICAgIC8vIENsZWFyIGJhY2tncm91bmRcclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoMTM1LCAxOTQsIDI1MClcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdChcclxuICAgICAgMCxcclxuICAgICAgMCxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy53aWR0aCxcclxuICAgICAgdGhpcy5jb250ZXh0LmNhbnZhcy5oZWlnaHRcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShcclxuICAgICAgc2NhbGVGYWN0b3IsXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIHNjYWxlRmFjdG9yLFxyXG4gICAgICB0aGlzLnhQYW4sXHJcbiAgICAgIHRoaXMueVBhblxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBEcmF3IGZsb29yXHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoNTEsIDUxLCA1MSlcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCgtMTAwMCwgLTUwMCwgMjAwMCwgMTAwMCk7XHJcblxyXG4gICAgLy8gRHJhdyBvYnN0YWNsZXNcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgIHRoaXMuY29udGV4dC5saW5lV2lkdGggPSAyO1xyXG4gICAgb2JzdGFjbGVzLmZvckVhY2goKG9ic3RhY2xlKSA9PiB7XHJcbiAgICAgIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIENpcmNsZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgdGhpcy5kcmF3Q2lyY2xlT2JzdGFjbGUob2JzdGFjbGUpO1xyXG4gICAgICB9IGVsc2UgaWYgKG9ic3RhY2xlIGluc3RhbmNlb2YgTGluZU9ic3RhY2xlKSB7XHJcbiAgICAgICAgdGhpcy5kcmF3TGluZU9ic3RhY2xlKG9ic3RhY2xlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gRHJhdyBhZ2VudHNcclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICB0aGlzLmRyYXdBZ2VudChhZ2VudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50KGFnZW50OiBBZ2VudCk6IHZvaWQge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgY29uc3QgZGlyZWN0aW9uID0gYWdlbnQuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCBjb2xvdXIgPSBhZ2VudC5nZXRDb2xvdXIoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSBgcmdiKCR7Y29sb3VyLnJ9LCAke2NvbG91ci5nfSwgJHtjb2xvdXIuYn0pYDtcclxuXHJcbiAgICAvLyB5IHBvc2l0aW9uIGludmVydGVkIHRvIG1hdGNoIDNEIHZpZXdcclxuICAgIHRoaXMuY29udGV4dC5hcmMocG9zaXRpb24ueCwgLXBvc2l0aW9uLnksIGFnZW50LlJhZGl1cywgMCwgMiAqIE1hdGguUEkpO1xyXG5cclxuICAgIGxldCBtYWduaXR1ZGUgPSBkaXJlY3Rpb24ubWFnbml0dWRlKCk7XHJcbiAgICBpZiAobWFnbml0dWRlICE9PSAwKSB7XHJcbiAgICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ocG9zaXRpb24ueCwgLXBvc2l0aW9uLnkpO1xyXG4gICAgICBsZXQgbmV3UG9zID0gcG9zaXRpb24uYWRkKFxyXG4gICAgICAgIGRpcmVjdGlvbi5kaXZpZGUobWFnbml0dWRlKS5tdWx0aXBseShhZ2VudC5SYWRpdXMpXHJcbiAgICAgICk7XHJcbiAgICAgIHRoaXMuY29udGV4dC5saW5lVG8obmV3UG9zLngsIC1uZXdQb3MueSk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3Q2lyY2xlT2JzdGFjbGUob2JzdGFjbGU6IENpcmNsZU9ic3RhY2xlKSB7XHJcbiAgICB0aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LmFyYyhcclxuICAgICAgb2JzdGFjbGUuUG9zaXRpb24ueCxcclxuICAgICAgLW9ic3RhY2xlLlBvc2l0aW9uLnksIC8vIHkgcG9zaXRpb24gaW52ZXJ0ZWQgdG8gbWF0Y2ggM0Qgdmlld1xyXG4gICAgICBvYnN0YWNsZS5SYWRpdXMsXHJcbiAgICAgIDAsXHJcbiAgICAgIDIgKiBNYXRoLlBJXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGQgPSBvYnN0YWNsZS5SYWRpdXMgKiBNYXRoLlNRUlQxXzI7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0Lm1vdmVUbyhvYnN0YWNsZS5Qb3NpdGlvbi54IC0gZCwgb2JzdGFjbGUuUG9zaXRpb24ueSAtIGQpO1xyXG4gICAgdGhpcy5jb250ZXh0LmxpbmVUbyhvYnN0YWNsZS5Qb3NpdGlvbi54ICsgZCwgb2JzdGFjbGUuUG9zaXRpb24ueSArIGQpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuUG9zaXRpb24ueCArIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgLSBkKTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuUG9zaXRpb24ueCAtIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgKyBkKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQuc3Ryb2tlKCk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRyYXdMaW5lT2JzdGFjbGUob2JzdGFjbGU6IExpbmVPYnN0YWNsZSkge1xyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuU3RhcnQueCwgb2JzdGFjbGUuU3RhcnQueSk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLkVuZC54LCBvYnN0YWNsZS5FbmQueSk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBtb3VzZURvd24gPSAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZyA9IHRydWU7XHJcbiAgICB0aGlzLm9sZFggPSBldmVudC5wYWdlWDtcclxuICAgIHRoaXMub2xkWSA9IGV2ZW50LnBhZ2VZO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VVcCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gZmFsc2U7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHRoaXMueFBhbiArPSBldmVudC5wYWdlWCAtIHRoaXMub2xkWDtcclxuICAgIHRoaXMueVBhbiArPSBldmVudC5wYWdlWSAtIHRoaXMub2xkWTtcclxuXHJcbiAgICB0aGlzLm9sZFggPSBldmVudC5wYWdlWDtcclxuICAgIHRoaXMub2xkWSA9IGV2ZW50LnBhZ2VZO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VTY3JvbGwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcclxuICAgIHRoaXMuY2FtZXJhRGlzdCArPSBldmVudC5kZWx0YVk7XHJcbiAgICBpZiAodGhpcy5jYW1lcmFEaXN0IDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuY2FtZXJhRGlzdCA9IDAuMTtcclxuICAgIH1cclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIE1hdDRmIHtcclxuICBzdGF0aWMgZ2V0SWRlbnRpdHlNYXRyaXgoKTogRmxvYXQzMkFycmF5IHtcclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRYUm90YXRpb25NYXRyaXgoYW5nbGU6IG51bWJlcik6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBzID0gTWF0aC5zaW4oYW5nbGUpO1xyXG4gICAgY29uc3QgYyA9IE1hdGguY29zKGFuZ2xlKTtcclxuXHJcbiAgICAvLyBwcmV0dGllci1pZ25vcmVcclxuICAgIHJldHVybiBuZXcgRmxvYXQzMkFycmF5KFtcclxuICAgICAgMSwgMCwgMCwgMCxcclxuICAgICAgMCwgYywgcywgMCxcclxuICAgICAgMCwtcywgYywgMCxcclxuICAgICAgMCwgMCwgMCwgMVxyXG4gICAgXSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0WVJvdGF0aW9uTWF0cml4KGFuZ2xlOiBudW1iZXIpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcyA9IE1hdGguc2luKGFuZ2xlKTtcclxuICAgIGNvbnN0IGMgPSBNYXRoLmNvcyhhbmdsZSk7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShbXHJcbiAgICAgIGMsIDAsLXMsIDAsXHJcbiAgICAgIDAsIDEsIDAsIDAsXHJcbiAgICAgIHMsIDAsIGMsIDAsXHJcbiAgICAgIDAsIDAsIDAsIDFcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldFpSb3RhdGlvbk1hdHJpeChhbmdsZTogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIGNvbnN0IHMgPSBNYXRoLnNpbihhbmdsZSk7XHJcbiAgICBjb25zdCBjID0gTWF0aC5jb3MoYW5nbGUpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICBjLCBzLCAwLCAwLFxyXG4gICAgIC1zLCBjLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICAwLCAwLCAwLCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRUcmFuc2xhdGlvbk1hdHJpeCh4OiBudW1iZXIsIHk6IG51bWJlciwgejogbnVtYmVyKTogRmxvYXQzMkFycmF5IHtcclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICAxLCAwLCAwLCAwLFxyXG4gICAgICAwLCAxLCAwLCAwLFxyXG4gICAgICAwLCAwLCAxLCAwLFxyXG4gICAgICB4LCB5LCB6LCAxXHJcbiAgICBdKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRQZXJzcGVjdGl2ZVByb2plY3Rpb25NYXRyaXgoXHJcbiAgICBmb3Y6IG51bWJlcixcclxuICAgIGFzcGVjdFJhdGlvOiBudW1iZXIsXHJcbiAgICBuZWFyOiBudW1iZXIsXHJcbiAgICBmYXI6IG51bWJlclxyXG4gICk6IEZsb2F0MzJBcnJheSB7XHJcbiAgICBjb25zdCBmID0gMS4wIC8gTWF0aC50YW4oZm92IC8gMik7XHJcbiAgICBjb25zdCBpID0gMS4wIC8gKG5lYXIgLSBmYXIpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIG5ldyBGbG9hdDMyQXJyYXkoW1xyXG4gICAgICBmIC8gYXNwZWN0UmF0aW8sIDAsICAgICAgICAgICAgICAgICAgMCwgIDAsXHJcbiAgICAgICAgICAgICAgICAgICAgMCwgZiwgICAgICAgICAgICAgICAgICAwLCAgMCxcclxuICAgICAgICAgICAgICAgICAgICAwLCAwLCAgIChuZWFyICsgZmFyKSAqIGksIC0xLFxyXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsIG5lYXIgKiBmYXIgKiBpICogMiwgIDBcclxuICAgIF0pO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIG11bHRpcGx5TWF0cmljZXMoYTogRmxvYXQzMkFycmF5LCBiOiBGbG9hdDMyQXJyYXkpOiBGbG9hdDMyQXJyYXkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IEZsb2F0MzJBcnJheSgxNik7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCA0OyBqKyspIHtcclxuICAgICAgICBsZXQgbnVtID0gMDtcclxuICAgICAgICBmb3IgKGxldCBrID0gMDsgayA8IDQ7IGsrKykge1xyXG4gICAgICAgICAgbnVtICs9IGFbaSAqIDQgKyBrXSAqIGJbayAqIDQgKyBqXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVzdWx0W2kgKiA0ICsgal0gPSBudW07XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQWdlbnRNZXNoIHtcclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgdmVydGljZXMgPSBbXHJcbiAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMS43MzYxMjMsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xODkxNDEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIC0wLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCAzLjQ5MzQ2NSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIDAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuMTA0MzY3LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMS43OTc4MzksIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTU1NzYyLCAwLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDEuNzk3ODM5LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4wLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjQwNzU0NiwgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjM3NjUyNiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMy4yNDc0MDcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMS43MzYxMjMsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAtMC4zMTQsIDEuNzM2MTIzLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yODg0NjMsIC0wLjMxNCwgMy4zOTY0MjQsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAtMC4zMTQsIDMuMzk2NDI0LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDEuNzM2MTIzLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4yODg0NjMsIDAuMzE0LCAxLjczNjEyMywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjg4NDYzLCAwLjMxNCwgMy4zOTY0MjQsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjI4ODQ2MywgMC4zMTQsIDMuMzk2NDI0LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCA0LjAyNTA4NywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgNC4wMjUwODcsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjI1NDc3MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuMjU0NzcxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMjU0NzcxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC4yNTQ3NzEsIDAuMTg0NzI3LCAzLjQ5MzQ2NSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgMC4xODQ3MjcsIDQuMDI1MDg3LCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgNC4wMjUwODcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgMy40OTM0NjUsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTg5MTQxLCAwLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDQuMDI1MDg3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE4OTE0MSwgLTAuMTg0NzI3LCA0LjAyNTA4NywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xODkxNDEsIC0wLjE4NDcyNywgMy40OTM0NjUsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMTg5MTQxLCAtMC4xODQ3MjcsIDMuNDkzNDY1LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAwLjMyMjM2MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjEwNDM2NywgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjEwNDM2NywgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIDAuMTA0MzY3LCAxLjY1MDYwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDAuMzIyMzYxLCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAtMC4xNTE1OSwgMC40MDc1NDYsIDEuNjUwNjA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAwLjQwNzU0NiwgMS42NTA2MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjEwNDM2NywgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuNDA3NTQ2LCAwLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4yMzM0NTMsIDAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuNDExODM4LCAwLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgMC40MDc1NDYsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAwLjQwNzU0NiwgMC4yMjc4ODEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIDAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAwLjQwNzU0NiwgMC4yMjc4ODEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjM3NjUyNiwgMy4yNDc0MDcsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuMzc2NTI2LCAzLjI0NzQwNywgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAwLjU4ODM5NiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIDAuNTg4Mzk2LCAzLjI0NzQwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDAuMzIyMzYxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAwLjMyMjM2MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMTUxNTksIC0wLjEwNDM2NywgMC4zMjIzNjEsIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuMTA0MzY3LCAxLjY1MDYwNywgMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1MTU5LCAtMC4xMDQzNjcsIDEuNjUwNjA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjEwNDM2NywgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMC4zMjIzNjEsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTUxNTksIC0wLjQwNzU0NiwgMS42NTA2MDcsIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAwLjMyMjM2MSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDAuMzIyMzYxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgMC4xNTE1OSwgLTAuNDA3NTQ2LCAxLjY1MDYwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjE1MTU5LCAtMC40MDc1NDYsIDEuNjUwNjA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAwLjAsIC0xLjAsXHJcbiAgICAtMC4yMzM0NTMsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4wLCAwLjAsIDAuMCwgLTEuMCxcclxuICAgIDAuNDExODM4LCAtMC4xMDQzNjcsIDAuMCwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC40MDc1NDYsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjAsIDAuMCwgMC4wLCAtMS4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjQwNzU0NiwgMC4wLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMjMzNDUzLCAtMC4xMDQzNjcsIDAuMjI3ODgxLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC40MTE4MzgsIC0wLjEwNDM2NywgMC4yMjc4ODEsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuMTA0MzY3LCAwLjIyNzg4MSwgMC4wLCAxLjAsIDAuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjIzMzQ1MywgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjQxMTgzOCwgLTAuNDA3NTQ2LCAwLjIyNzg4MSwgMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNDExODM4LCAtMC40MDc1NDYsIDAuMjI3ODgxLCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDEuNzk3ODM5LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgMC4wNDU1MDUsIC0wLjM3NjUyNiwgMS43OTc4MzksIDEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuMzc2NTI2LCAzLjI0NzQwNywgMC4wLCAxLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC4zNzY1MjYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAtMC4xNTU3NjIsIC0wLjU4ODM5NiwgMS43OTc4MzksIDAuMCwgLTEuMCwgMC4wLFxyXG4gICAgLTAuMTU1NzYyLCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAtMS4wLCAwLjAsIDAuMCxcclxuICAgIC0wLjE1NTc2MiwgLTAuNTg4Mzk2LCAzLjI0NzQwNywgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjA0NTUwNSwgLTAuNTg4Mzk2LCAxLjc5NzgzOSwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIDAuMDQ1NTA1LCAtMC41ODgzOTYsIDMuMjQ3NDA3LCAxLjAsIDAuMCwgMC4wLFxyXG4gIF07XHJcblxyXG4gIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gIHN0YXRpYyBpbmRpY2VzID0gW1xyXG4gICAgNjgsIDY0LCA2NixcclxuICAgIDY1LCA3NCwgNzIsXHJcbiAgICA3NSwgNzYsIDczLFxyXG4gICAgNzksIDY3LCA3NyxcclxuICAgIDYsIDAsIDIsXHJcbiAgICAzLCA1LCA3LFxyXG4gICAgOTEsIDg0LCA5NCxcclxuICAgIDkyLCA5MCwgOTUsXHJcbiAgICA4MywgMTMsIDg1LFxyXG4gICAgODAsIDE1LCA4NyxcclxuICAgIDEyLCA4MSwgODgsXHJcbiAgICA4LCAxMSwgOSxcclxuICAgIDEwMCwgOTYsIDk4LFxyXG4gICAgMTAzLCAxMDQsIDk3LFxyXG4gICAgMTA3LCAxMDgsIDEwNSxcclxuICAgIDExMSwgOTksIDEwOSxcclxuICAgIDIyLCAxNiwgMTgsXHJcbiAgICAxOSwgMjEsIDIzLFxyXG4gICAgMTE2LCAxMTQsIDExMixcclxuICAgIDEyMiwgMTI0LCAxMjAsXHJcbiAgICAxMjMsIDExMywgMTE1LFxyXG4gICAgMTI3LCAyNCwgMTE5LFxyXG4gICAgMjksIDExNywgMjUsXHJcbiAgICAzMSwgMjYsIDI3LFxyXG4gICAgMTMyLCAxMjgsIDEzMCxcclxuICAgIDEzNSwgMTM2LCAxMjksXHJcbiAgICAxMzksIDE0MCwgMTM3LFxyXG4gICAgMTQzLCAxMzEsIDE0MSxcclxuICAgIDM4LCAzMiwgMzQsXHJcbiAgICAzNSwgMzcsIDM5LFxyXG4gICAgMTQ0LCAxNDgsIDE0NixcclxuICAgIDE1MiwgMTUxLCAxNDUsXHJcbiAgICAxNTYsIDE1NSwgMTUzLFxyXG4gICAgMTQ3LCAxNTksIDE1NyxcclxuICAgIDQwLCA0NiwgNDIsXHJcbiAgICA0NSwgNDMsIDQ3LFxyXG4gICAgMTYyLCAxNjQsIDE2MCxcclxuICAgIDE3MiwgMTcwLCAxNjgsXHJcbiAgICAxNjEsIDE3MSwgMTYzLFxyXG4gICAgNDgsIDE3NSwgMTY3LFxyXG4gICAgMTY1LCA1MywgNDksXHJcbiAgICA1MCwgNTUsIDUxLFxyXG4gICAgMTc2LCAxODAsIDE3OCxcclxuICAgIDE4NCwgMTgzLCAxNzcsXHJcbiAgICAxODgsIDE4NywgMTg1LFxyXG4gICAgMTc5LCAxOTEsIDE4OSxcclxuICAgIDU2LCA2MiwgNTgsXHJcbiAgICA2MSwgNTksIDYzLFxyXG4gICAgNjgsIDcwLCA2NCxcclxuICAgIDY1LCA3MSwgNzQsXHJcbiAgICA3NSwgNzgsIDc2LFxyXG4gICAgNzksIDY5LCA2NyxcclxuICAgIDYsIDQsIDAsXHJcbiAgICAzLCAxLCA1LFxyXG4gICAgOTEsIDg2LCA4NCxcclxuICAgIDkyLCA4OSwgOTAsXHJcbiAgICA4MywgOTMsIDEzLFxyXG4gICAgODAsIDgyLCAxNSxcclxuICAgIDEyLCAxNCwgODEsXHJcbiAgICA4LCAxMCwgMTEsXHJcbiAgICAxMDAsIDEwMiwgOTYsXHJcbiAgICAxMDMsIDEwNiwgMTA0LFxyXG4gICAgMTA3LCAxMTAsIDEwOCxcclxuICAgIDExMSwgMTAxLCA5OSxcclxuICAgIDIyLCAyMCwgMTYsXHJcbiAgICAxOSwgMTcsIDIxLFxyXG4gICAgMTE2LCAxMTgsIDExNCxcclxuICAgIDEyMiwgMTI2LCAxMjQsXHJcbiAgICAxMjMsIDEyMSwgMTEzLFxyXG4gICAgMTI3LCAyOCwgMjQsXHJcbiAgICAyOSwgMTI1LCAxMTcsXHJcbiAgICAzMSwgMzAsIDI2LFxyXG4gICAgMTMyLCAxMzQsIDEyOCxcclxuICAgIDEzNSwgMTM4LCAxMzYsXHJcbiAgICAxMzksIDE0MiwgMTQwLFxyXG4gICAgMTQzLCAxMzMsIDEzMSxcclxuICAgIDM4LCAzNiwgMzIsXHJcbiAgICAzNSwgMzMsIDM3LFxyXG4gICAgMTQ0LCAxNTAsIDE0OCxcclxuICAgIDE1MiwgMTU0LCAxNTEsXHJcbiAgICAxNTYsIDE1OCwgMTU1LFxyXG4gICAgMTQ3LCAxNDksIDE1OSxcclxuICAgIDQwLCA0NCwgNDYsXHJcbiAgICA0NSwgNDEsIDQzLFxyXG4gICAgMTYyLCAxNjYsIDE2NCxcclxuICAgIDE3MiwgMTc0LCAxNzAsXHJcbiAgICAxNjEsIDE2OSwgMTcxLFxyXG4gICAgNDgsIDUyLCAxNzUsXHJcbiAgICAxNjUsIDE3MywgNTMsXHJcbiAgICA1MCwgNTQsIDU1LFxyXG4gICAgMTc2LCAxODIsIDE4MCxcclxuICAgIDE4NCwgMTg2LCAxODMsXHJcbiAgICAxODgsIDE5MCwgMTg3LFxyXG4gICAgMTc5LCAxODEsIDE5MSxcclxuICAgIDU2LCA2MCwgNjIsXHJcbiAgICA2MSwgNTcsIDU5LFxyXG4gIF07XHJcbn1cclxuIiwiZXhwb3J0IGNsYXNzIEZsb29yTWVzaCB7XHJcbiAgc3RhdGljIGdldFZlcnRpY2VzKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XHJcbiAgICBjb25zdCB3ID0gd2lkdGggLyAyO1xyXG4gICAgY29uc3QgaCA9IGhlaWdodCAvIDI7XHJcblxyXG4gICAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgICByZXR1cm4gW1xyXG4gICAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgICAgdywgLWgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgICAgIHcsICBoLCAwLjAsIDAuMCwgMC4wLCAxLjAsXHJcbiAgICAgIC13LCAtaCwgMC4wLCAwLjAsIDAuMCwgMS4wLFxyXG4gICAgICAtdywgIGgsIDAuMCwgMC4wLCAwLjAsIDEuMCxcclxuICAgIF07XHJcbiAgfVxyXG5cclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgaW5kaWNlcyA9IFtcclxuICAgIDEsIDIsIDAsXHJcbiAgICAxLCAzLCAyLFxyXG4gIF1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ3lsaW5kZXJNZXNoIHtcclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgdmVydGljZXMgPSBbXHJcbiAgICAvLyBwb3NpdGlvbiArIG5vcm1hbFxyXG4gICAgLTAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAtMC45MjM5LCAtMC4zODI3LCAwLjAsXHJcbiAgICAtMC45MjM4OCwgLTAuMzgyNjgzLCAwLjAsIC0wLjkyMzksIC0wLjM4MjcsIDAuMCxcclxuICAgIC0wLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIC0wLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIC0wLjcwNzEwNywgLTAuNzA3MTA3LCAwLjAsIC0wLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIC0wLjM4MjY4NCwgLTAuOTIzODc5LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMzgyNjg0LCAtMC45MjM4NzksIDAuMCwgLTAuMzgyNywgLTAuOTIzOSwgMC4wLFxyXG4gICAgLTAuMCwgLTEuMCwgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjAsIC0xLjAsIDAuMCwgMC4wLCAtMS4wLCAwLjAsXHJcbiAgICAwLjM4MjY4NCwgLTAuOTIzODgsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjM4MjY4NCwgLTAuOTIzODgsIDAuMCwgMC4zODI3LCAtMC45MjM5LCAwLjAsXHJcbiAgICAwLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC43MDcxMDcsIC0wLjcwNzEwNywgMC4wLCAwLjcwNzEsIC0wLjcwNzEsIDAuMCxcclxuICAgIDAuOTIzODgsIC0wLjM4MjY4MywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuOTIzODgsIC0wLjM4MjY4MywgMC4wLCAwLjkyMzksIC0wLjM4MjcsIDAuMCxcclxuICAgIDEuMCwgMC4wLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMS4wLCAwLjAsIDAuMCwgMS4wLCAwLjAsIDAuMCxcclxuICAgIDAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgMC45MjM4OCwgMC4zODI2ODMsIDAuMCwgMC45MjM5LCAwLjM4MjcsIDAuMCxcclxuICAgIDAuNzA3MTA3LCAwLjcwNzEwNywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIDAuNzA3MTA3LCAwLjcwNzEwNywgMC4wLCAwLjcwNzEsIDAuNzA3MSwgMC4wLFxyXG4gICAgMC4zODI2ODQsIDAuOTIzODgsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjM4MjY4NCwgMC45MjM4OCwgMC4wLCAwLjM4MjcsIDAuOTIzOSwgMC4wLFxyXG4gICAgMC4wLCAxLjAsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjAsIDEuMCwgMC4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMzgyNjgzLCAwLjkyMzg4LCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuMzgyNjgzLCAwLjkyMzg4LCAwLjAsIC0wLjM4MjcsIDAuOTIzOSwgMC4wLFxyXG4gICAgLTAuNzA3MTA3LCAwLjcwNzEwNywgMS4wLCAtMC4wLCAwLjAsIDEuMCxcclxuICAgIC0wLjcwNzEwNywgMC43MDcxMDcsIDAuMCwgLTAuNzA3MSwgMC43MDcxLCAwLjAsXHJcbiAgICAtMC45MjM4OCwgMC4zODI2ODMsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMC45MjM4OCwgMC4zODI2ODMsIDAuMCwgLTAuOTIzOSwgMC4zODI3LCAwLjAsXHJcbiAgICAtMS4wLCAwLjAsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAtMS4wLCAwLjAsIDAuMCwgLTEuMCwgMC4wLCAwLjAsXHJcbiAgICAwLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgMC43MDcxLCAwLjcwNzEsIDAuMCxcclxuICAgIDAuMzgyNjg0LCAwLjkyMzg4LCAxLjAsIDAuMzgyNywgMC45MjM5LCAwLjAsXHJcbiAgICAtMC45MjM4OCwgLTAuMzgyNjgzLCAxLjAsIC0wLjAsIDAuMCwgMS4wLFxyXG4gICAgLTAuNzA3MTA3LCAtMC43MDcxMDcsIDEuMCwgLTAuMCwgMC4wLCAxLjAsXHJcbiAgICAwLjAsIDEuMCwgMS4wLCAwLjAsIDEuMCwgMC4wLFxyXG4gICAgLTAuMzgyNjg0LCAtMC45MjM4NzksIDEuMCwgLTAuMzgyNywgLTAuOTIzOSwgMC4wLFxyXG4gICAgLTAuMCwgLTEuMCwgMS4wLCAwLjAsIC0xLjAsIDAuMCxcclxuICAgIC0wLjM4MjY4MywgMC45MjM4OCwgMS4wLCAtMC4zODI3LCAwLjkyMzksIDAuMCxcclxuICAgIC0wLjcwNzEwNywgMC43MDcxMDcsIDEuMCwgLTAuNzA3MSwgMC43MDcxLCAwLjAsXHJcbiAgICAwLjcwNzEwNywgLTAuNzA3MTA3LCAxLjAsIDAuNzA3MSwgLTAuNzA3MSwgMC4wLFxyXG4gICAgMC45MjM4OCwgLTAuMzgyNjgzLCAxLjAsIDAuOTIzOSwgLTAuMzgyNywgMC4wLFxyXG4gICAgLTAuOTIzODgsIDAuMzgyNjgzLCAxLjAsIC0wLjkyMzksIDAuMzgyNywgMC4wLFxyXG4gICAgLTEuMCwgMC4wLCAxLjAsIC0xLjAsIDAuMCwgMC4wLFxyXG4gICAgMC45MjM4OCwgMC4zODI2ODMsIDEuMCwgMC45MjM5LCAwLjM4MjcsIDAuMCxcclxuICAgIDAuMzgyNjg0LCAtMC45MjM4OCwgMS4wLCAwLjM4MjcsIC0wLjkyMzksIDAuMCxcclxuICAgIDEuMCwgMC4wLCAxLjAsIDEuMCwgMC4wLCAwLjAsXHJcbiAgXTtcclxuXHJcbiAgLy8gcHJldHRpZXItaWdub3JlXHJcbiAgc3RhdGljIGluZGljZXMgPSBbXHJcbiAgICAyNiwgMzUsIDEwLFxyXG4gICAgMTgsIDIwLCAyMixcclxuICAgIDIyLCAyNCwgMTgsXHJcbiAgICAyNCwgMjYsIDE4LFxyXG4gICAgMjYsIDI4LCAzMCxcclxuICAgIDMwLCAzNCwgMzUsXHJcbiAgICAzNSwgNCwgNixcclxuICAgIDYsIDgsIDEwLFxyXG4gICAgMTAsIDEyLCAxOCxcclxuICAgIDEyLCAxNCwgMTgsXHJcbiAgICAxNCwgMTYsIDE4LFxyXG4gICAgMjYsIDMwLCAzNSxcclxuICAgIDM1LCA2LCAxMCxcclxuICAgIDE4LCAyNiwgMTAsXHJcbiAgICAzOSwgMjMsIDI1LFxyXG4gICAgNDAsIDI1LCAyNyxcclxuICAgIDQzLCAyNywgMjksXHJcbiAgICA0NCwgMjksIDMxLFxyXG4gICAgMzYsIDIxLCAyMyxcclxuICAgIDMzLCAxOSwgMjEsXHJcbiAgICAzMiwgMTcsIDE5LFxyXG4gICAgNDUsIDE1LCAxNyxcclxuICAgIDQ3LCAxMywgMTUsXHJcbiAgICA0MiwgMTEsIDEzLFxyXG4gICAgNDEsIDksIDExLFxyXG4gICAgNDYsIDcsIDksXHJcbiAgICAzOCwgNSwgNyxcclxuICAgIDM3LCAzLCA1LFxyXG4gICAgMiwgMSwgMyxcclxuICAgIDAsIDMxLCAxLFxyXG4gICAgMzksIDM2LCAyMyxcclxuICAgIDQwLCAzOSwgMjUsXHJcbiAgICA0MywgNDAsIDI3LFxyXG4gICAgNDQsIDQzLCAyOSxcclxuICAgIDM2LCAzMywgMjEsXHJcbiAgICAzMywgMzIsIDE5LFxyXG4gICAgMzIsIDQ1LCAxNyxcclxuICAgIDQ1LCA0NywgMTUsXHJcbiAgICA0NywgNDIsIDEzLFxyXG4gICAgNDIsIDQxLCAxMSxcclxuICAgIDQxLCA0NiwgOSxcclxuICAgIDQ2LCAzOCwgNyxcclxuICAgIDM4LCAzNywgNSxcclxuICAgIDM3LCAyLCAzLFxyXG4gICAgMiwgMCwgMSxcclxuICAgIDAsIDQ0LCAzMSxcclxuICBdO1xyXG59XHJcbiIsImltcG9ydCB7IExpbmVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvTGluZU9ic3RhY2xlXCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV2FsbE1lc2gge1xyXG4gIHN0YXRpYyBnZXRWZXJ0aWNlcyh3YWxsOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIGNvbnN0IGRpcmVjdGlvbiA9IHdhbGwuU3RhcnQuc3VidHJhY3Qod2FsbC5FbmQpO1xyXG4gICAgY29uc3Qgbm9ybWFsID0gbmV3IFZlY3RvcjJmKC1kaXJlY3Rpb24ueSwgZGlyZWN0aW9uLngpLm5vcm1hbGlzZSgpO1xyXG5cclxuICAgIC8vIHByZXR0aWVyLWlnbm9yZVxyXG4gICAgcmV0dXJuIFtcclxuICAgICAgLy8gUG9zaXRpb24gKyBub3JtYWxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDAuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDAuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDEuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDEuMCwgIG5vcm1hbC54LCAgbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDAuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDAuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5TdGFydC54LCB3YWxsLlN0YXJ0LnksIDEuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgICAgd2FsbC5FbmQueCwgICB3YWxsLkVuZC55LCAgIDEuMCwgLW5vcm1hbC54LCAtbm9ybWFsLnksIDAuMCxcclxuICAgIF07XHJcbiAgfVxyXG5cclxuICAvLyBwcmV0dGllci1pZ25vcmVcclxuICBzdGF0aWMgaW5kaWNlcyA9IFtcclxuICAgICAgMSwgMiwgMCxcclxuICAgICAgMSwgMywgMixcclxuICAgICAgNSwgNCwgNixcclxuICAgICAgNSwgNiwgNyxcclxuICAgIF1cclxufVxyXG4iLCJpbXBvcnQgeyBJUmVuZGVyZXIgfSBmcm9tIFwiLi4vSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFNpbXVsYXRpb24gfSBmcm9tIFwiLi4vU2ltdWxhdGlvblwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBNYXQ0ZiB9IGZyb20gXCIuLi9NYXQ0ZlwiO1xyXG5pbXBvcnQgeyBBZ2VudE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0FnZW50TWVzaFwiO1xyXG5pbXBvcnQgeyBGbG9vck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0Zsb29yTWVzaFwiO1xyXG5pbXBvcnQgeyBDeWxpbmRlck1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL0N5bGluZGVyTWVzaFwiO1xyXG5pbXBvcnQgeyBDaXJjbGVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgV2FsbE1lc2ggfSBmcm9tIFwiLi4vbWVzaGVzL1dhbGxNZXNoXCI7XHJcblxyXG5jb25zdCB2ZXJ0ZXhTaGFkZXJUZXh0ID0gYFxyXG4gIHByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1xyXG4gIGF0dHJpYnV0ZSB2ZWMzIHZlcnRQb3NpdGlvbjtcclxuICBhdHRyaWJ1dGUgdmVjMyB2ZXJ0Tm9ybWFsO1xyXG4gIHZhcnlpbmcgdmVjMyBmcmFnQ29sb3VyO1xyXG5cclxuICB1bmlmb3JtIG1hdDQgcHJvak1hdDtcclxuICB1bmlmb3JtIG1hdDQgdmlld01hdDtcclxuICB1bmlmb3JtIG1hdDQgd29ybGRNYXQ7XHJcblxyXG4gIHVuaWZvcm0gdmVjMiBwb3NpdGlvbjtcclxuICB1bmlmb3JtIHZlYzIgZGlyZWN0aW9uO1xyXG4gIHVuaWZvcm0gZmxvYXQgcmFkaXVzO1xyXG4gIHVuaWZvcm0gZmxvYXQgaGVpZ2h0O1xyXG4gIHVuaWZvcm0gdmVjMyBiYXNlQ29sb3VyO1xyXG5cclxuICB2b2lkIG1haW4oKVxyXG4gIHtcclxuICAgIG1lZGl1bXAgdmVjMyBhbWJpZW50ID0gdmVjMygwLjI2LCAwLjM4LCAwLjQ5KTtcclxuICAgIG1lZGl1bXAgdmVjMyBsaWdodENvbG91ciA9IHZlYzMoMS4wLCAxLjAsIDAuOCk7XHJcbiAgICBtZWRpdW1wIHZlYzMgbGlnaHREaXJlY3Rpb24gPSBub3JtYWxpemUodmVjMygtMC4yLCAtMC4zLCAxLjApKTtcclxuXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZFZlcnQgPSB2ZWMzKHZlcnRQb3NpdGlvbi54ICogZGlyZWN0aW9uLnggLSB2ZXJ0UG9zaXRpb24ueSAqIGRpcmVjdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0UG9zaXRpb24ueCAqIGRpcmVjdGlvbi55ICsgdmVydFBvc2l0aW9uLnkgKiBkaXJlY3Rpb24ueCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydFBvc2l0aW9uLnopO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgIGdsX1Bvc2l0aW9uID0gcHJvak1hdCAqIHZpZXdNYXQgKiB3b3JsZE1hdCAqIHZlYzQocm90YXRlZFZlcnQueCAqIHJhZGl1cyArIHBvc2l0aW9uLngsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0ZWRWZXJ0LnkgKiByYWRpdXMgKyBwb3NpdGlvbi55LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3RhdGVkVmVydC56ICogaGVpZ2h0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLjApO1xyXG4gICAgXHJcbiAgICBtZWRpdW1wIHZlYzMgcm90YXRlZE5vcm1hbCA9IHZlYzModmVydE5vcm1hbC54ICogZGlyZWN0aW9uLnggLSB2ZXJ0Tm9ybWFsLnkgKiBkaXJlY3Rpb24ueSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZXJ0Tm9ybWFsLnggKiBkaXJlY3Rpb24ueSArIHZlcnROb3JtYWwueSAqIGRpcmVjdGlvbi54LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlcnROb3JtYWwueik7XHJcbiAgICBcclxuICAgIG1lZGl1bXAgdmVjMyBkaXJlY3Rpb25hbCA9IGxpZ2h0Q29sb3VyICogbWF4KGRvdChyb3RhdGVkTm9ybWFsLCBsaWdodERpcmVjdGlvbiksIDAuMCk7XHJcbiAgICBmcmFnQ29sb3VyID0gKGFtYmllbnQgKyBkaXJlY3Rpb25hbCkgKiBiYXNlQ29sb3VyO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IGZyYWdtZW50U2hhZGVyVGV4dCA9IGBcclxuICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcclxuICB2YXJ5aW5nIHZlYzMgZnJhZ0NvbG91cjtcclxuXHJcbiAgdm9pZCBtYWluKClcclxuICB7XHJcbiAgICBnbF9GcmFnQ29sb3IgPSB2ZWM0KGZyYWdDb2xvdXIsIDEpO1xyXG4gIH1cclxuYDtcclxuXHJcbmV4cG9ydCBjbGFzcyBSZW5kZXJlcjNEIGltcGxlbWVudHMgSVJlbmRlcmVyIHtcclxuICAvLyBSZW5kZXJpbmdcclxuICBwcml2YXRlIGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQ7XHJcbiAgcHJpdmF0ZSBnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0O1xyXG4gIHByaXZhdGUgcHJvZ3JhbTogV2ViR0xQcm9ncmFtO1xyXG4gIHByaXZhdGUgVmVydGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIEluZGV4QnVmZmVyOiBXZWJHTEJ1ZmZlcjtcclxuICBwcml2YXRlIHBvc2l0aW9uQXR0cmlidXRlOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBub3JtYWxBdHRyaWJ1dGU6IG51bWJlcjtcclxuICBwcml2YXRlIHByb2pNYXRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgdmlld01hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSB3b3JsZE1hdExvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBwb3NWZWNMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgZGlyVmVjTG9jOiBXZWJHTFVuaWZvcm1Mb2NhdGlvbjtcclxuICBwcml2YXRlIHJhZGl1c0xvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcbiAgcHJpdmF0ZSBoZWlnaHRMb2M6IFdlYkdMVW5pZm9ybUxvY2F0aW9uO1xyXG4gIHByaXZhdGUgYmFzZUNvbG91ckxvYzogV2ViR0xVbmlmb3JtTG9jYXRpb247XHJcblxyXG4gIC8vIENhbWVyYSBjb250cm9sc1xyXG4gIHByaXZhdGUgZHJhZzogYm9vbGVhbjtcclxuICBwcml2YXRlIG9sZFg6IG51bWJlcjtcclxuICBwcml2YXRlIG9sZFk6IG51bWJlcjtcclxuICBwcml2YXRlIHhSb3QgPSAwO1xyXG4gIHByaXZhdGUgeVJvdCA9IDA7XHJcbiAgcHJpdmF0ZSBjYW1lcmFEaXN0ID0gODAwOyAvLyBTdGFydCBjYW1lcmEgODAwICdweCcgYXdheVxyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuXHJcbiAgICAvLyBHZXQgV2ViR0wgY29udGV4dFxyXG4gICAgdGhpcy5nbCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIldlYkdMIG5vdCBzdXBwb3J0ZWRcIik7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBDb21waWxlIHNoYWRlcnNcclxuICAgIGNvbnN0IHZlcnRleFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuVkVSVEVYX1NIQURFUik7XHJcbiAgICBjb25zdCBmcmFnbWVudFNoYWRlciA9IHRoaXMuZ2wuY3JlYXRlU2hhZGVyKHRoaXMuZ2wuRlJBR01FTlRfU0hBREVSKTtcclxuXHJcbiAgICB0aGlzLmdsLnNoYWRlclNvdXJjZSh2ZXJ0ZXhTaGFkZXIsIHZlcnRleFNoYWRlclRleHQpO1xyXG4gICAgdGhpcy5nbC5zaGFkZXJTb3VyY2UoZnJhZ21lbnRTaGFkZXIsIGZyYWdtZW50U2hhZGVyVGV4dCk7XHJcblxyXG4gICAgdGhpcy5nbC5jb21waWxlU2hhZGVyKHZlcnRleFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKHZlcnRleFNoYWRlciwgdGhpcy5nbC5DT01QSUxFX1NUQVRVUykpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBcIkVSUk9SIGNvbXBpbGluZyB2ZXJ0ZXggc2hhZGVyXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRTaGFkZXJJbmZvTG9nKHZlcnRleFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wuY29tcGlsZVNoYWRlcihmcmFnbWVudFNoYWRlcik7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0U2hhZGVyUGFyYW1ldGVyKGZyYWdtZW50U2hhZGVyLCB0aGlzLmdsLkNPTVBJTEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgY29tcGlsaW5nIGZyYWdtZW50IHNoYWRlclwiLFxyXG4gICAgICAgIHRoaXMuZ2wuZ2V0U2hhZGVySW5mb0xvZyhmcmFnbWVudFNoYWRlcilcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENyZWF0ZSBhbmQgdmFsaWRhdGUgcHJvZ3JhbVxyXG4gICAgdGhpcy5wcm9ncmFtID0gdGhpcy5nbC5jcmVhdGVQcm9ncmFtKCk7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIHZlcnRleFNoYWRlcik7XHJcbiAgICB0aGlzLmdsLmF0dGFjaFNoYWRlcih0aGlzLnByb2dyYW0sIGZyYWdtZW50U2hhZGVyKTtcclxuICAgIHRoaXMuZ2wubGlua1Byb2dyYW0odGhpcy5wcm9ncmFtKTtcclxuXHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuTElOS19TVEFUVVMpKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgXCJFUlJPUiBsaW5raW5nIHByb2dyYW1cIixcclxuICAgICAgICB0aGlzLmdsLmdldFByb2dyYW1JbmZvTG9nKHRoaXMucHJvZ3JhbSlcclxuICAgICAgKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuZ2wudmFsaWRhdGVQcm9ncmFtKHRoaXMucHJvZ3JhbSk7XHJcbiAgICBpZiAoIXRoaXMuZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcih0aGlzLnByb2dyYW0sIHRoaXMuZ2wuVkFMSURBVEVfU1RBVFVTKSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIFwiRVJST1IgdmFsaWRhdGluZyBwcm9ncmFtXCIsXHJcbiAgICAgICAgdGhpcy5nbC5nZXRQcm9ncmFtSW5mb0xvZyh0aGlzLnByb2dyYW0pXHJcbiAgICAgICk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTZXQgV2ViR0wgc2V0dGluZ3NcclxuICAgIHRoaXMuZ2wudXNlUHJvZ3JhbSh0aGlzLnByb2dyYW0pO1xyXG4gICAgdGhpcy5nbC5lbmFibGUodGhpcy5nbC5ERVBUSF9URVNUKTtcclxuICAgIHRoaXMuZ2wuY2xlYXJDb2xvcigwLjUzLCAwLjc2LCAwLjk4LCAxLjApO1xyXG5cclxuICAgIHRoaXMuZ2wuZW5hYmxlKHRoaXMuZ2wuQ1VMTF9GQUNFKTtcclxuICAgIHRoaXMuZ2wuZnJvbnRGYWNlKHRoaXMuZ2wuQ0NXKTtcclxuICAgIHRoaXMuZ2wuY3VsbEZhY2UodGhpcy5nbC5CQUNLKTtcclxuXHJcbiAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzXHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIHRoaXMubW91c2VEb3duLCBmYWxzZSk7XHJcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCB0aGlzLm1vdXNlVXAsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgdGhpcy5tb3VzZU1vdmUsIGZhbHNlKTtcclxuICAgIHRoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJ3aGVlbFwiLCB0aGlzLm1vdXNlU2Nyb2xsLCB7IHBhc3NpdmU6IGZhbHNlIH0pO1xyXG5cclxuICAgIC8vIEdldCB1bmlmb3JtIGxvY2F0aW9uc1xyXG4gICAgdGhpcy5wcm9qTWF0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInByb2pNYXRcIik7XHJcbiAgICB0aGlzLnZpZXdNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwidmlld01hdFwiKTtcclxuICAgIHRoaXMud29ybGRNYXRMb2MgPSB0aGlzLmdsLmdldFVuaWZvcm1Mb2NhdGlvbih0aGlzLnByb2dyYW0sIFwid29ybGRNYXRcIik7XHJcbiAgICB0aGlzLnBvc1ZlY0xvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJwb3NpdGlvblwiKTtcclxuICAgIHRoaXMuZGlyVmVjTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImRpcmVjdGlvblwiKTtcclxuICAgIHRoaXMucmFkaXVzTG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcInJhZGl1c1wiKTtcclxuICAgIHRoaXMuaGVpZ2h0TG9jID0gdGhpcy5nbC5nZXRVbmlmb3JtTG9jYXRpb24odGhpcy5wcm9ncmFtLCBcImhlaWdodFwiKTtcclxuICAgIHRoaXMuYmFzZUNvbG91ckxvYyA9IHRoaXMuZ2wuZ2V0VW5pZm9ybUxvY2F0aW9uKHRoaXMucHJvZ3JhbSwgXCJiYXNlQ29sb3VyXCIpO1xyXG5cclxuICAgIC8vIFNldCB1cCBtYXRyaWNlc1xyXG4gICAgY29uc3QgcHJvamVjdGlvbk1hdHJpeCA9IE1hdDRmLmdldFBlcnNwZWN0aXZlUHJvamVjdGlvbk1hdHJpeChcclxuICAgICAgNDUgKiAoTWF0aC5QSSAvIDE4MCksIC8vIDQ1ZGVnIHktYXhpcyBGT1ZcclxuICAgICAgdGhpcy5jYW52YXMud2lkdGggLyB0aGlzLmNhbnZhcy5oZWlnaHQsXHJcbiAgICAgIDAuMSxcclxuICAgICAgdGhpcy5jYW1lcmFEaXN0ICsgMjAwMFxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCB2aWV3TWF0cml4ID0gTWF0NGYuZ2V0VHJhbnNsYXRpb25NYXRyaXgoMCwgMCwgLXRoaXMuY2FtZXJhRGlzdCk7IC8vIE1vdmUgY2FtZXJhIGJhY2sgb24geiBheGlzXHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLmdldElkZW50aXR5TWF0cml4KCk7XHJcblxyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMudmlld01hdExvYywgZmFsc2UsIHZpZXdNYXRyaXgpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMud29ybGRNYXRMb2MsIGZhbHNlLCB3b3JsZE1hdHJpeCk7XHJcbiAgfVxyXG5cclxuICBpbml0KHNpbXVsYXRpb246IFNpbXVsYXRpb24pOiB2b2lkIHtcclxuICAgIGNvbnN0IGZsb29yVmVydHMgPSBGbG9vck1lc2guZ2V0VmVydGljZXMoMjAwMCwgMTAwMCk7XHJcblxyXG4gICAgY29uc3Qgd2FsbHM6IExpbmVPYnN0YWNsZVtdID0gc2ltdWxhdGlvblxyXG4gICAgICAuZ2V0T2JzdGFjbGVzKClcclxuICAgICAgLmZpbHRlcigoeCkgPT4geCBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSlcclxuICAgICAgLm1hcCgoeCkgPT4geCBhcyBMaW5lT2JzdGFjbGUpOyAvLyBrbHVkZ2UgZHVlIHRvIGtub3duIGlzc3VlIHdpdGggVFMgdHlwZSBpbmZlcmVuY2VcclxuXHJcbiAgICBjb25zdCB3YWxsVmVydHMgPSB3YWxsc1xyXG4gICAgICAubWFwKCh3YWxsKSA9PiBXYWxsTWVzaC5nZXRWZXJ0aWNlcyh3YWxsKSlcclxuICAgICAgLnJlZHVjZSgoYWNjLCB2YWwpID0+IGFjYy5jb25jYXQodmFsKSwgW10pO1xyXG5cclxuICAgIC8vIEluaXRpYWxpc2UgdmVydGV4IGFuZCBpbmRleCBidWZmZXJcclxuICAgIGNvbnN0IHZlcnRpY2VzID0gbmV3IEZsb2F0MzJBcnJheShcclxuICAgICAgQWdlbnRNZXNoLnZlcnRpY2VzXHJcbiAgICAgICAgLmNvbmNhdChDeWxpbmRlck1lc2gudmVydGljZXMpXHJcbiAgICAgICAgLmNvbmNhdChmbG9vclZlcnRzKVxyXG4gICAgICAgIC5jb25jYXQod2FsbFZlcnRzKVxyXG4gICAgKTtcclxuXHJcbiAgICB0aGlzLlZlcnRleEJ1ZmZlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XHJcbiAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5BUlJBWV9CVUZGRVIsIHRoaXMuVmVydGV4QnVmZmVyKTtcclxuICAgIHRoaXMuZ2wuYnVmZmVyRGF0YSh0aGlzLmdsLkFSUkFZX0JVRkZFUiwgdmVydGljZXMsIHRoaXMuZ2wuU1RBVElDX0RSQVcpO1xyXG5cclxuICAgIGNvbnN0IGN5bGluZGVyT2Zmc2V0ID0gQWdlbnRNZXNoLnZlcnRpY2VzLmxlbmd0aCAvIDY7XHJcbiAgICBjb25zdCBmbG9vck9mZnNldCA9IGN5bGluZGVyT2Zmc2V0ICsgQ3lsaW5kZXJNZXNoLnZlcnRpY2VzLmxlbmd0aCAvIDY7XHJcbiAgICBjb25zdCB3YWxsc09mZnNldCA9IGZsb29yT2Zmc2V0ICsgZmxvb3JWZXJ0cy5sZW5ndGggLyA2O1xyXG5cclxuICAgIGNvbnN0IHdhbGxJbmRpY2VzID0gd2FsbHNcclxuICAgICAgLm1hcCgoX3dhbGwsIGkpID0+IFdhbGxNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgd2FsbHNPZmZzZXQgKyBpICogOCkpXHJcbiAgICAgIC5yZWR1Y2UoKGFjYywgdmFsKSA9PiBhY2MuY29uY2F0KHZhbCksIFtdKTtcclxuXHJcbiAgICBjb25zdCBpbmRpY2VzID0gbmV3IFVpbnQxNkFycmF5KFxyXG4gICAgICBBZ2VudE1lc2guaW5kaWNlc1xyXG4gICAgICAgIC5jb25jYXQoQ3lsaW5kZXJNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgY3lsaW5kZXJPZmZzZXQpKVxyXG4gICAgICAgIC5jb25jYXQoRmxvb3JNZXNoLmluZGljZXMubWFwKCh4KSA9PiB4ICsgZmxvb3JPZmZzZXQpKVxyXG4gICAgICAgIC5jb25jYXQod2FsbEluZGljZXMpXHJcbiAgICApO1xyXG4gICAgdGhpcy5JbmRleEJ1ZmZlciA9IHRoaXMuZ2wuY3JlYXRlQnVmZmVyKCk7XHJcbiAgICB0aGlzLmdsLmJpbmRCdWZmZXIodGhpcy5nbC5FTEVNRU5UX0FSUkFZX0JVRkZFUiwgdGhpcy5JbmRleEJ1ZmZlcik7XHJcbiAgICB0aGlzLmdsLmJ1ZmZlckRhdGEoXHJcbiAgICAgIHRoaXMuZ2wuRUxFTUVOVF9BUlJBWV9CVUZGRVIsXHJcbiAgICAgIGluZGljZXMsXHJcbiAgICAgIHRoaXMuZ2wuU1RBVElDX0RSQVdcclxuICAgICk7XHJcblxyXG4gICAgLy8gR2V0IGF0dHJpYnV0ZSBsb2NhdGlvbnNcclxuICAgIHRoaXMucG9zaXRpb25BdHRyaWJ1dGUgPSB0aGlzLmdsLmdldEF0dHJpYkxvY2F0aW9uKFxyXG4gICAgICB0aGlzLnByb2dyYW0sXHJcbiAgICAgIFwidmVydFBvc2l0aW9uXCJcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5nbC52ZXJ0ZXhBdHRyaWJQb2ludGVyKFxyXG4gICAgICB0aGlzLnBvc2l0aW9uQXR0cmlidXRlLFxyXG4gICAgICAzLFxyXG4gICAgICB0aGlzLmdsLkZMT0FULFxyXG4gICAgICBmYWxzZSxcclxuICAgICAgNiAqIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCxcclxuICAgICAgMFxyXG4gICAgKTtcclxuICAgIHRoaXMuZ2wuZW5hYmxlVmVydGV4QXR0cmliQXJyYXkodGhpcy5wb3NpdGlvbkF0dHJpYnV0ZSk7XHJcblxyXG4gICAgdGhpcy5ub3JtYWxBdHRyaWJ1dGUgPSB0aGlzLmdsLmdldEF0dHJpYkxvY2F0aW9uKFxyXG4gICAgICB0aGlzLnByb2dyYW0sXHJcbiAgICAgIFwidmVydE5vcm1hbFwiXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuZ2wudmVydGV4QXR0cmliUG9pbnRlcihcclxuICAgICAgdGhpcy5ub3JtYWxBdHRyaWJ1dGUsXHJcbiAgICAgIDMsXHJcbiAgICAgIHRoaXMuZ2wuRkxPQVQsXHJcbiAgICAgIGZhbHNlLFxyXG4gICAgICA2ICogRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5ULFxyXG4gICAgICAzICogRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICApO1xyXG4gICAgdGhpcy5nbC5lbmFibGVWZXJ0ZXhBdHRyaWJBcnJheSh0aGlzLm5vcm1hbEF0dHJpYnV0ZSk7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoc2ltdWxhdGlvbjogU2ltdWxhdGlvbik6IHZvaWQge1xyXG4gICAgY29uc3QgYWdlbnRzID0gc2ltdWxhdGlvbi5nZXRBZ2VudHMoKTtcclxuICAgIGNvbnN0IG9ic3RhY2xlcyA9IHNpbXVsYXRpb24uZ2V0T2JzdGFjbGVzKCk7XHJcblxyXG4gICAgLy8gQ2xlYXIgYmFja2dyb3VuZFxyXG4gICAgdGhpcy5nbC5jbGVhcih0aGlzLmdsLkNPTE9SX0JVRkZFUl9CSVQgfCB0aGlzLmdsLkRFUFRIX0JVRkZFUl9CSVQpO1xyXG5cclxuICAgIC8vIERyYXcgYWdlbnRzXHJcbiAgICBhZ2VudHMuZm9yRWFjaCgoYWdlbnQpID0+IHtcclxuICAgICAgLy8gUG9zaXRpb25cclxuICAgICAgY29uc3QgcG9zID0gYWdlbnQuZ2V0UG9zaXRpb24oKTtcclxuICAgICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5wb3NWZWNMb2MsIHBvcy54LCBwb3MueSk7XHJcblxyXG4gICAgICAvLyBEaXJlY3Rpb25cclxuICAgICAgbGV0IGRpciA9IGFnZW50LmdldERpcmVjdGlvbigpLm5vcm1hbGlzZSgpO1xyXG4gICAgICBpZiAoZGlyLnggPT0gMCAmJiBkaXIueSA9PSAwKSB7XHJcbiAgICAgICAgZGlyID0gbmV3IFZlY3RvcjJmKDEsIDApO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCBkaXIueCwgZGlyLnkpO1xyXG5cclxuICAgICAgLy8gUmFkaXVzICsgaGVpZ2h0XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMucmFkaXVzTG9jLCBhZ2VudC5SYWRpdXMpO1xyXG4gICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLmhlaWdodExvYywgYWdlbnQuUmFkaXVzKTtcclxuXHJcbiAgICAgIC8vIEJhc2UgY29sb3VyXHJcbiAgICAgIGNvbnN0IGNvbG9yID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcbiAgICAgIHRoaXMuZ2wudW5pZm9ybTNmKFxyXG4gICAgICAgIHRoaXMuYmFzZUNvbG91ckxvYyxcclxuICAgICAgICBjb2xvci5yIC8gMjU1LFxyXG4gICAgICAgIGNvbG9yLmcgLyAyNTUsXHJcbiAgICAgICAgY29sb3IuYiAvIDI1NVxyXG4gICAgICApO1xyXG5cclxuICAgICAgLy8gRHJhdyBtZXNoXHJcbiAgICAgIHRoaXMuZ2wuZHJhd0VsZW1lbnRzKFxyXG4gICAgICAgIHRoaXMuZ2wuVFJJQU5HTEVTLFxyXG4gICAgICAgIEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCxcclxuICAgICAgICB0aGlzLmdsLlVOU0lHTkVEX1NIT1JULFxyXG4gICAgICAgIDBcclxuICAgICAgKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIERyYXcgb2JzdGFjbGVzXHJcbiAgICBsZXQgd2FsbENvdW50ID0gMDtcclxuICAgIG9ic3RhY2xlcy5mb3JFYWNoKChvYnN0YWNsZSkgPT4ge1xyXG4gICAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICAgIC8vIFBvc2l0aW9uXHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmYoXHJcbiAgICAgICAgICB0aGlzLnBvc1ZlY0xvYyxcclxuICAgICAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgICAgICBvYnN0YWNsZS5Qb3NpdGlvbi55XHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgLy8gRGlyZWN0aW9uXHJcbiAgICAgICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5kaXJWZWNMb2MsIDEsIDApO1xyXG5cclxuICAgICAgICAvLyBSYWRpdXMgKyBoZWlnaHRcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLnJhZGl1c0xvYywgb2JzdGFjbGUuUmFkaXVzKTtcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0xZih0aGlzLmhlaWdodExvYywgODQpO1xyXG5cclxuICAgICAgICAvLyBDb2xvdXJcclxuICAgICAgICB0aGlzLmdsLnVuaWZvcm0zZih0aGlzLmJhc2VDb2xvdXJMb2MsIDEuMCwgMS4wLCAxLjApO1xyXG5cclxuICAgICAgICAvLyBEcmF3IG1lc2hcclxuICAgICAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgICAgIHRoaXMuZ2wuVFJJQU5HTEVTLFxyXG4gICAgICAgICAgQ3lsaW5kZXJNZXNoLmluZGljZXMubGVuZ3RoLFxyXG4gICAgICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgICAgIEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCAqIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICAgICAgKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB3YWxsQ291bnQrKztcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gRHJhdyBmbG9vclxyXG4gICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5wb3NWZWNMb2MsIDAsIDApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMmYodGhpcy5kaXJWZWNMb2MsIDEsIDApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5yYWRpdXNMb2MsIDEpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtMWYodGhpcy5oZWlnaHRMb2MsIDEpO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtM2YodGhpcy5iYXNlQ29sb3VyTG9jLCAwLjIsIDAuMiwgMC4yKTtcclxuXHJcbiAgICB0aGlzLmdsLmRyYXdFbGVtZW50cyhcclxuICAgICAgdGhpcy5nbC5UUklBTkdMRVMsXHJcbiAgICAgIEZsb29yTWVzaC5pbmRpY2VzLmxlbmd0aCxcclxuICAgICAgdGhpcy5nbC5VTlNJR05FRF9TSE9SVCxcclxuICAgICAgKEFnZW50TWVzaC5pbmRpY2VzLmxlbmd0aCArIEN5bGluZGVyTWVzaC5pbmRpY2VzLmxlbmd0aCkgKlxyXG4gICAgICAgIFVpbnQxNkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UXHJcbiAgICApO1xyXG5cclxuICAgIC8vIERyYXcgd2FsbHNcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMucG9zVmVjTG9jLCAwLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTJmKHRoaXMuZGlyVmVjTG9jLCAxLCAwKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMucmFkaXVzTG9jLCAxKTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybTFmKHRoaXMuaGVpZ2h0TG9jLCA4NCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm0zZih0aGlzLmJhc2VDb2xvdXJMb2MsIDEuMCwgMS4wLCAxLjApO1xyXG5cclxuICAgIHRoaXMuZ2wuZHJhd0VsZW1lbnRzKFxyXG4gICAgICB0aGlzLmdsLlRSSUFOR0xFUyxcclxuICAgICAgV2FsbE1lc2guaW5kaWNlcy5sZW5ndGggKiB3YWxsQ291bnQsXHJcbiAgICAgIHRoaXMuZ2wuVU5TSUdORURfU0hPUlQsXHJcbiAgICAgIChBZ2VudE1lc2guaW5kaWNlcy5sZW5ndGggK1xyXG4gICAgICAgIEN5bGluZGVyTWVzaC5pbmRpY2VzLmxlbmd0aCArXHJcbiAgICAgICAgRmxvb3JNZXNoLmluZGljZXMubGVuZ3RoKSAqXHJcbiAgICAgICAgVWludDE2QXJyYXkuQllURVNfUEVSX0VMRU1FTlRcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG1vdXNlRG93biA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gdHJ1ZTtcclxuICAgIHRoaXMub2xkWCA9IGV2ZW50LnBhZ2VYO1xyXG4gICAgdGhpcy5vbGRZID0gZXZlbnQucGFnZVk7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VVcCA9IChldmVudDogTW91c2VFdmVudCkgPT4ge1xyXG4gICAgdGhpcy5kcmFnID0gZmFsc2U7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICBpZiAoIXRoaXMuZHJhZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgIHRoaXMueFJvdCArPSAoKGV2ZW50LnBhZ2VYIC0gdGhpcy5vbGRYKSAqIDIgKiBNYXRoLlBJKSAvIHRoaXMuY2FudmFzLndpZHRoO1xyXG4gICAgdGhpcy55Um90ICs9ICgoZXZlbnQucGFnZVkgLSB0aGlzLm9sZFkpICogMiAqIE1hdGguUEkpIC8gdGhpcy5jYW52YXMuaGVpZ2h0O1xyXG4gICAgdGhpcy5vbGRYID0gZXZlbnQucGFnZVg7XHJcbiAgICB0aGlzLm9sZFkgPSBldmVudC5wYWdlWTtcclxuXHJcbiAgICAvLyBDbGFtcCBZIHJvdGF0aW9uXHJcbiAgICBpZiAodGhpcy55Um90ID4gMCkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0aGlzLnlSb3QgPCAtTWF0aC5QSSkge1xyXG4gICAgICB0aGlzLnlSb3QgPSAtTWF0aC5QSTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB4Um90TWF0ID0gTWF0NGYuZ2V0WlJvdGF0aW9uTWF0cml4KHRoaXMueFJvdCk7XHJcbiAgICBjb25zdCB5Um90TWF0ID0gTWF0NGYuZ2V0WFJvdGF0aW9uTWF0cml4KHRoaXMueVJvdCk7XHJcbiAgICBjb25zdCB3b3JsZE1hdHJpeCA9IE1hdDRmLm11bHRpcGx5TWF0cmljZXMoeFJvdE1hdCwgeVJvdE1hdCk7XHJcbiAgICB0aGlzLmdsLnVuaWZvcm1NYXRyaXg0ZnYodGhpcy53b3JsZE1hdExvYywgZmFsc2UsIHdvcmxkTWF0cml4KTtcclxuXHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHByaXZhdGUgbW91c2VTY3JvbGwgPSAoZXZlbnQ6IFdoZWVsRXZlbnQpID0+IHtcclxuICAgIHRoaXMuY2FtZXJhRGlzdCArPSBldmVudC5kZWx0YVk7XHJcbiAgICBpZiAodGhpcy5jYW1lcmFEaXN0IDwgMCkge1xyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgPSAwO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHZpZXdNYXRyaXggPSBNYXQ0Zi5nZXRUcmFuc2xhdGlvbk1hdHJpeCgwLCAwLCAtdGhpcy5jYW1lcmFEaXN0KTtcclxuICAgIHRoaXMuZ2wudW5pZm9ybU1hdHJpeDRmdih0aGlzLnZpZXdNYXRMb2MsIGZhbHNlLCB2aWV3TWF0cml4KTtcclxuXHJcbiAgICBjb25zdCBwcm9qZWN0aW9uTWF0cml4ID0gTWF0NGYuZ2V0UGVyc3BlY3RpdmVQcm9qZWN0aW9uTWF0cml4KFxyXG4gICAgICA0NSAqIChNYXRoLlBJIC8gMTgwKSwgLy8gNDVkZWcgeS1heGlzIEZPVlxyXG4gICAgICB0aGlzLmNhbnZhcy53aWR0aCAvIHRoaXMuY2FudmFzLmhlaWdodCxcclxuICAgICAgMC4xLFxyXG4gICAgICB0aGlzLmNhbWVyYURpc3QgKyAyMDAwXHJcbiAgICApO1xyXG4gICAgdGhpcy5nbC51bmlmb3JtTWF0cml4NGZ2KHRoaXMucHJvak1hdExvYywgZmFsc2UsIHByb2plY3Rpb25NYXRyaXgpO1xyXG5cclxuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfTtcclxufVxyXG4iLCJpbXBvcnQgeyBJQWdlbnRDb2xsZWN0aW9uIH0gZnJvbSBcIi4vSUFnZW50Q29sbGVjdGlvblwiO1xyXG5pbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcblxyXG5pbnRlcmZhY2UgTm9kZSB7XHJcbiAgYWdlbnQ6IEFnZW50O1xyXG4gIGxlZnQ6IE5vZGU7XHJcbiAgcmlnaHQ6IE5vZGU7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBBZ2VudFRyZWUgaW1wbGVtZW50cyBJQWdlbnRDb2xsZWN0aW9uIHtcclxuICBwcml2YXRlIF9hZ2VudHM6IEFnZW50W107XHJcbiAgcHJpdmF0ZSBfcm9vdDogTm9kZTtcclxuXHJcbiAgY29uc3RydWN0b3IoYWdlbnRzOiBBZ2VudFtdKSB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgICB0aGlzLl9yb290ID0gdGhpcy5jb25zdHJ1Y3RUcmVlKHRoaXMuX2FnZW50cywgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoYWdlbnRzOiBBZ2VudFtdKTogdm9pZCB7XHJcbiAgICB0aGlzLl9hZ2VudHMgPSBhZ2VudHM7XHJcbiAgICB0aGlzLl9yb290ID0gdGhpcy5jb25zdHJ1Y3RUcmVlKHRoaXMuX2FnZW50cywgdHJ1ZSk7XHJcbiAgfVxyXG5cclxuICBnZXRBbGwoKTogQWdlbnRbXSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWdlbnRzO1xyXG4gIH1cclxuXHJcbiAgZ2V0TmVpZ2hib3Vyc0luUmFuZ2VSZWN0aWxpbmVhcihhZ2VudDogQWdlbnQsIHJhbmdlOiBudW1iZXIpOiBBZ2VudFtdIHtcclxuICAgIGxldCBtaW5YID0gYWdlbnQuZ2V0UG9zaXRpb24oKS54IC0gcmFuZ2U7XHJcbiAgICBsZXQgbWluWSA9IGFnZW50LmdldFBvc2l0aW9uKCkueSAtIHJhbmdlO1xyXG4gICAgbGV0IG1heFggPSBhZ2VudC5nZXRQb3NpdGlvbigpLnggKyByYW5nZTtcclxuICAgIGxldCBtYXhZID0gYWdlbnQuZ2V0UG9zaXRpb24oKS55ICsgcmFuZ2U7XHJcblxyXG4gICAgbGV0IGNhbmRpZGF0ZXMgPSB0aGlzLnJhbmdlU2VhcmNoKHRoaXMuX3Jvb3QsIG1pblgsIG1pblksIG1heFgsIG1heFksIHRydWUpO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZXMuZmlsdGVyKChvdGhlcikgPT4gb3RoZXIuSWQgIT09IGFnZW50LklkKTtcclxuICB9XHJcblxyXG4gIGdldE5laWdoYm91cnNJblJhbmdlRXVjbGlkZWFuKGFnZW50OiBBZ2VudCwgcmFuZ2U6IG51bWJlcik6IEFnZW50W10ge1xyXG4gICAgbGV0IGNhbmRpZGF0ZXMgPSB0aGlzLmdldE5laWdoYm91cnNJblJhbmdlUmVjdGlsaW5lYXIoYWdlbnQsIHJhbmdlKTtcclxuICAgIHJldHVybiBjYW5kaWRhdGVzLmZpbHRlcihcclxuICAgICAgKG90aGVyKSA9PlxyXG4gICAgICAgIGFnZW50LmdldFBvc2l0aW9uKCkuc3VidHJhY3Qob3RoZXIuZ2V0UG9zaXRpb24oKSkubWFnbml0dWRlU3FyZCgpIDw9XHJcbiAgICAgICAgcmFuZ2UgKiogMlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGZvckVhY2goZnVuOiAoYWdlbnQ6IEFnZW50KSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICB0aGlzLl9hZ2VudHMuZm9yRWFjaChmdW4pO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBjb25zdHJ1Y3RUcmVlKGFnZW50czogQWdlbnRbXSwgeEF4aXM6IGJvb2xlYW4pOiBOb2RlIHtcclxuICAgIGlmIChhZ2VudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBtaWQgPSBNYXRoLmZsb29yKGFnZW50cy5sZW5ndGggLyAyKTtcclxuXHJcbiAgICBsZXQgc29ydGVkID0geEF4aXNcclxuICAgICAgPyBhZ2VudHMuc29ydCgoYSwgYikgPT4gYS5nZXRQb3NpdGlvbigpLnggLSBiLmdldFBvc2l0aW9uKCkueClcclxuICAgICAgOiBhZ2VudHMuc29ydCgoYSwgYikgPT4gYS5nZXRQb3NpdGlvbigpLnkgLSBiLmdldFBvc2l0aW9uKCkueSk7XHJcblxyXG4gICAgbGV0IGxlZnQgPSB0aGlzLmNvbnN0cnVjdFRyZWUoc29ydGVkLnNsaWNlKDAsIG1pZCksICF4QXhpcyk7XHJcbiAgICBsZXQgcmlnaHQgPSB0aGlzLmNvbnN0cnVjdFRyZWUoXHJcbiAgICAgIHNvcnRlZC5zbGljZShtaWQgKyAxLCBhZ2VudHMubGVuZ3RoKSxcclxuICAgICAgIXhBeGlzXHJcbiAgICApO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50OiBhZ2VudHNbbWlkXSwgbGVmdDogbGVmdCwgcmlnaHQ6IHJpZ2h0IH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHJhbmdlU2VhcmNoKFxyXG4gICAgcm9vdDogTm9kZSxcclxuICAgIG1pblg6IG51bWJlcixcclxuICAgIG1pblk6IG51bWJlcixcclxuICAgIG1heFg6IG51bWJlcixcclxuICAgIG1heFk6IG51bWJlcixcclxuICAgIHhBeGlzOiBib29sZWFuXHJcbiAgKTogQWdlbnRbXSB7XHJcbiAgICBpZiAocm9vdCA9PSBudWxsKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgcmVzOiBBZ2VudFtdID0gW107XHJcbiAgICBpZiAoeEF4aXMpIHtcclxuICAgICAgLy8gSWYgeCA8PSBtYXhYIG5lZWQgdG8gY2hlY2sgcmlnaHQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPD0gbWF4WCkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QucmlnaHQsIG1pblgsIG1pblksIG1heFgsIG1heFksICF4QXhpcylcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBJZiB4ID49IG1pblggbmVlZCB0byBjaGVjayBsZWZ0IHN1YnRyZWVcclxuICAgICAgaWYgKHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS54ID49IG1pblgpIHtcclxuICAgICAgICByZXMgPSByZXMuY29uY2F0KFxyXG4gICAgICAgICAgdGhpcy5yYW5nZVNlYXJjaChyb290LmxlZnQsIG1pblgsIG1pblksIG1heFgsIG1heFksICF4QXhpcylcclxuICAgICAgICApO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBJZiB5IDw9IG1heFkgbmVlZCB0byBjaGVjayByaWdodCBzdWJ0cmVlXHJcbiAgICAgIGlmIChyb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA8PSBtYXhZKSB7XHJcbiAgICAgICAgcmVzID0gcmVzLmNvbmNhdChcclxuICAgICAgICAgIHRoaXMucmFuZ2VTZWFyY2gocm9vdC5yaWdodCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIElmIHkgPj0gbWluWSBuZWVkIHRvIGNoZWNrIGxlZnQgc3VidHJlZVxyXG4gICAgICBpZiAocm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnkgPj0gbWluWSkge1xyXG4gICAgICAgIHJlcyA9IHJlcy5jb25jYXQoXHJcbiAgICAgICAgICB0aGlzLnJhbmdlU2VhcmNoKHJvb3QubGVmdCwgbWluWCwgbWluWSwgbWF4WCwgbWF4WSwgIXhBeGlzKVxyXG4gICAgICAgICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB0aGUgYWdlbnQgaXMgaW4gcmFuZ2UgcmFuZ2UgYWRkIHRvIHRoZSByZXN1bHRcclxuICAgIGlmIChcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnggPj0gbWluWCAmJlxyXG4gICAgICByb290LmFnZW50LmdldFBvc2l0aW9uKCkueSA+PSBtaW5ZICYmXHJcbiAgICAgIHJvb3QuYWdlbnQuZ2V0UG9zaXRpb24oKS54IDw9IG1heFggJiZcclxuICAgICAgcm9vdC5hZ2VudC5nZXRQb3NpdGlvbigpLnkgPD0gbWF4WVxyXG4gICAgKSB7XHJcbiAgICAgIHJlcy5wdXNoKHJvb3QuYWdlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiByZXM7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuL0NvbG91clwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFnZW50IHtcclxuICByZWFkb25seSBSYWRpdXM6IG51bWJlcjtcclxuICByZWFkb25seSBJZDogbnVtYmVyO1xyXG5cclxuICBwcm90ZWN0ZWQgX3Bvc2l0aW9uOiBWZWN0b3IyZjtcclxuICBwcm90ZWN0ZWQgX2RpcmVjdGlvbjogVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9nZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmY7XHJcbiAgcHJvdGVjdGVkIF9pc0RvbmU6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICB0aGlzLklkID0gaWQ7XHJcbiAgICB0aGlzLlJhZGl1cyA9IDIwO1xyXG5cclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gc3RhcnRQb3NpdGlvbjtcclxuICAgIHRoaXMuX2RpcmVjdGlvbiA9IGdldFByZWZlcnJlZFZlbG9jaXR5KHN0YXJ0UG9zaXRpb24pOyAvLyBTdGFydCBwb2ludGluZyBpbiBnb2FsIGRpcmVjdGlvblxyXG4gICAgdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkgPSBnZXRQcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgIHRoaXMuX2lzRG9uZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0UG9zaXRpb24oKTogVmVjdG9yMmYge1xyXG4gICAgcmV0dXJuIHRoaXMuX3Bvc2l0aW9uO1xyXG4gIH1cclxuXHJcbiAgZ2V0RGlyZWN0aW9uKCk6IFZlY3RvcjJmIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXJlY3Rpb247XHJcbiAgfVxyXG5cclxuICBpc0RvbmUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5faXNEb25lO1xyXG4gIH1cclxuXHJcbiAgYWJzdHJhY3QgZ2V0Q29sb3VyKCk6IENvbG91cjtcclxuICBhYnN0cmFjdCB1cGRhdGUoXHJcbiAgICBkZWx0YVQ6IG51bWJlcixcclxuICAgIG5laWdoYm91cnM6IEFnZW50W10sXHJcbiAgICBvYnN0YWNsZXM6IElPYnN0YWNsZVtdXHJcbiAgKTogdm9pZDtcclxufVxyXG4iLCJleHBvcnQgY2xhc3MgQ29sb3VyIHtcclxuICByOiBudW1iZXI7XHJcbiAgZzogbnVtYmVyO1xyXG4gIGI6IG51bWJlcjtcclxuXHJcbiAgc3RhdGljIFdoaXRlOiBDb2xvdXIgPSB7XHJcbiAgICByOiAyNTUsXHJcbiAgICBnOiAyNTUsXHJcbiAgICBiOiAyNTUsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIFJlZDogQ29sb3VyID0ge1xyXG4gICAgcjogMjU1LFxyXG4gICAgZzogMCxcclxuICAgIGI6IDAsXHJcbiAgfTtcclxuXHJcbiAgc3RhdGljIEdyZWVuOiBDb2xvdXIgPSB7XHJcbiAgICByOiAwLFxyXG4gICAgZzogMjU1LFxyXG4gICAgYjogMCxcclxuICB9O1xyXG5cclxuICBzdGF0aWMgRnJvbUhzdihoOiBudW1iZXIsIHM6IG51bWJlciwgdjogbnVtYmVyKTogQ29sb3VyIHtcclxuICAgIC8vIGFzc3VtaW5nIGhzdiB2YWx1ZXMgaW4gcmFuZ2UgMC0xXHJcbiAgICBoICo9IDY7XHJcblxyXG4gICAgY29uc3QgZnJhY3QgPSBoIC0gTWF0aC5mbG9vcihoKTtcclxuICAgIGNvbnN0IFAgPSB2ICogKDEgLSBzKTtcclxuICAgIGNvbnN0IFEgPSB2ICogKDEgLSBzICogZnJhY3QpO1xyXG4gICAgY29uc3QgVCA9IHYgKiAoMSAtIHMgKiAoMSAtIGZyYWN0KSk7XHJcblxyXG4gICAgaWYgKDAgPD0gaCAmJiBoIDwgMSkge1xyXG4gICAgICByZXR1cm4geyByOiB2ICogMjU1LCBnOiBUICogMjU1LCBiOiBQICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDEgPD0gaCAmJiBoIDwgMikge1xyXG4gICAgICByZXR1cm4geyByOiBRICogMjU1LCBnOiB2ICogMjU1LCBiOiBQICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDIgPD0gaCAmJiBoIDwgMykge1xyXG4gICAgICByZXR1cm4geyByOiBQICogMjU1LCBnOiB2ICogMjU1LCBiOiBUICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDMgPD0gaCAmJiBoIDwgNCkge1xyXG4gICAgICByZXR1cm4geyByOiBQICogMjU1LCBnOiBRICogMjU1LCBiOiB2ICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDQgPD0gaCAmJiBoIDwgNSkge1xyXG4gICAgICByZXR1cm4geyByOiBUICogMjU1LCBnOiBQICogMjU1LCBiOiB2ICogMjU1IH07XHJcbiAgICB9IGVsc2UgaWYgKDUgPD0gaCAmJiBoIDwgNikge1xyXG4gICAgICByZXR1cm4geyByOiB2ICogMjU1LCBnOiBQICogMjU1LCBiOiBRICogMjU1IH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4geyByOiAwLCBnOiAwLCBiOiAwIH07XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuLi9Db2xvdXJcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBCYXNpY0FnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIGdldENvbG91cigpIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5XaGl0ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuR3JlZW47XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGFUOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZlcnJlZFZlbG9jaXR5ID0gdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkodGhpcy5fcG9zaXRpb24pO1xyXG4gICAgY29uc3Qgc3RlcFNpemUgPSAoZGVsdGFUICogNjApIC8gMzAwMDtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBkb25lXHJcbiAgICBpZiAocHJlZmVycmVkVmVsb2NpdHkubWFnbml0dWRlU3FyZCgpIDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuX2lzRG9uZSA9IHRydWU7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTdGVwIHRvd2FyZHMgZ29hbFxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZChwcmVmZXJyZWRWZWxvY2l0eS5tdWx0aXBseShzdGVwU2l6ZSkpO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuLi9BZ2VudFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBDb2xvdXIgfSBmcm9tIFwiLi4vQ29sb3VyXCI7XHJcbmltcG9ydCB7IElPYnN0YWNsZSB9IGZyb20gXCIuLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgU3RvcEFnZW50IGV4dGVuZHMgQWdlbnQge1xyXG4gIHByaXZhdGUgX2lzU3R1Y2s6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKSB7XHJcbiAgICBzdXBlcihpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgdGhpcy5faXNTdHVjayA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29sb3VyKCk6IENvbG91ciB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybiBDb2xvdXIuV2hpdGU7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuX2lzU3R1Y2spIHtcclxuICAgICAgcmV0dXJuIENvbG91ci5SZWQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gQ29sb3VyLkdyZWVuO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBkYXRlKGRlbHRhVDogbnVtYmVyLCBuZWlnaGJvdXJzOiBBZ2VudFtdLCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5faXNEb25lKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwcmVmZXJyZWRWZWxvY2l0eSA9IHRoaXMuX2dldFByZWZlcnJlZFZlbG9jaXR5KHRoaXMuX3Bvc2l0aW9uKTtcclxuICAgIGNvbnN0IHN0ZXBTaXplID0gKGRlbHRhVCAqIDYwKSAvIDMwMDA7XHJcblxyXG4gICAgLy8gQ2hlY2sgaWYgZG9uZVxyXG4gICAgaWYgKHByZWZlcnJlZFZlbG9jaXR5Lm1hZ25pdHVkZVNxcmQoKSA8IDAuMSkge1xyXG4gICAgICB0aGlzLl9pc0RvbmUgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHkubm9ybWFsaXNlKCk7XHJcbiAgICBjb25zdCBoZWFkaW5nID0gdGhpcy5fcG9zaXRpb24uYWRkKHRoaXMuX2RpcmVjdGlvbi5tdWx0aXBseSgyNSkpO1xyXG5cclxuICAgIC8vIENoZWNrIGlmIGJsb2NrZWQgYnkgYW5vdGhlciBhZ2VudFxyXG4gICAgdGhpcy5faXNTdHVjayA9IGZhbHNlO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmICh0aGlzLmNvbGxpZGVzQWdlbnQobmVpZ2hib3Vyc1tpXSwgaGVhZGluZykpIHtcclxuICAgICAgICB0aGlzLl9pc1N0dWNrID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBDaGVjayBpZiBibG9ja2VkIGJ5IGFuIG9ic3RhY2xlXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBpZiAodGhpcy5jb2xsaWRlc09ic3RhY2xlKG9ic3RhY2xlc1tpXSwgaGVhZGluZykpIHtcclxuICAgICAgICB0aGlzLl9pc1N0dWNrID0gdHJ1ZTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBTdGVwIHRvd2FyZHMgZ29hbFxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gcHJlZmVycmVkVmVsb2NpdHk7XHJcbiAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZCh0aGlzLl9kaXJlY3Rpb24ubXVsdGlwbHkoc3RlcFNpemUpKTtcclxuICB9XHJcblxyXG4gIGNvbGxpZGVzQWdlbnQoYWdlbnQ6IEFnZW50LCBwb3NpdGlvbjogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIGFnZW50LmdldFBvc2l0aW9uKCkuc3VidHJhY3QocG9zaXRpb24pLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgIChhZ2VudC5SYWRpdXMgKyB0aGlzLlJhZGl1cykgKiAoYWdlbnQuUmFkaXVzICsgdGhpcy5SYWRpdXMpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgY29sbGlkZXNPYnN0YWNsZShvYnN0YWNsZTogSU9ic3RhY2xlLCBwb3NpdGlvbjogVmVjdG9yMmYpOiBib29sZWFuIHtcclxuICAgIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIENpcmNsZU9ic3RhY2xlKSB7XHJcbiAgICAgIHJldHVybiAoXHJcbiAgICAgICAgb2JzdGFjbGUuUG9zaXRpb24uc3VidHJhY3QocG9zaXRpb24pLm1hZ25pdHVkZVNxcmQoKSA8XHJcbiAgICAgICAgKG9ic3RhY2xlLlJhZGl1cyArIHRoaXMuUmFkaXVzKSAqIChvYnN0YWNsZS5SYWRpdXMgKyB0aGlzLlJhZGl1cylcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFRPRE86IEltcGxlbWVudCBMaW5lT2JzdGFjbGUgY29sbGlzaW9uXHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEdlb21ldHJ5IHtcclxuICBzdGF0aWMgZ2V0Q2xvc2VzdFBvaW50T25MaW5lKFxyXG4gICAgbGluZVBvaW50OiBWZWN0b3IyZixcclxuICAgIGxpbmVEaXJlY3Rpb246IFZlY3RvcjJmLFxyXG4gICAgcG9pbnQ6IFZlY3RvcjJmXHJcbiAgKTogVmVjdG9yMmYge1xyXG4gICAgY29uc3QgZGlyZWN0aW9uID0gbGluZURpcmVjdGlvbi5ub3JtYWxpc2UoKTtcclxuICAgIGNvbnN0IHZlY3RvciA9IHBvaW50LnN1YnRyYWN0KGxpbmVQb2ludCk7XHJcbiAgICBjb25zdCBkaXN0YW5jZSA9IHZlY3Rvci5kb3QoZGlyZWN0aW9uKTtcclxuXHJcbiAgICByZXR1cm4gbGluZVBvaW50LmFkZChkaXJlY3Rpb24ubXVsdGlwbHkoZGlzdGFuY2UpKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXRGaXJzdFJheUNpcmNsZUludGVyc2VjdGlvbihcclxuICAgIGNlbnRyZTogVmVjdG9yMmYsXHJcbiAgICByYWRpdXM6IG51bWJlcixcclxuICAgIG9yaWdpbjogVmVjdG9yMmYsXHJcbiAgICBkaXJlY3Rpb246IFZlY3RvcjJmXHJcbiAgKTogbnVtYmVyIHtcclxuICAgIGNvbnN0IGRlbHRhID0gb3JpZ2luLnN1YnRyYWN0KGNlbnRyZSk7XHJcblxyXG4gICAgY29uc3QgYSA9IGRpcmVjdGlvbi5kb3QoZGlyZWN0aW9uKTtcclxuICAgIGNvbnN0IGIgPSAyICogZGlyZWN0aW9uLmRvdChkZWx0YSk7XHJcbiAgICBjb25zdCBjID0gZGVsdGEuZG90KGRlbHRhKSAtIHJhZGl1cyAqKiAyO1xyXG5cclxuICAgIGNvbnN0IGRpc2NyaW0gPSBiICoqIDIgLSA0ICogYSAqIGM7XHJcblxyXG4gICAgaWYgKGRpc2NyaW0gPCAwKSB7XHJcbiAgICAgIC8vIE5vIGludGVyc2VjdGlvblxyXG4gICAgICByZXR1cm4gSW5maW5pdHk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGlzdGFuY2UgPSAoKC1iIC0gTWF0aC5zcXJ0KGRpc2NyaW0pKSAvIDIpICogYTtcclxuXHJcbiAgICByZXR1cm4gZGlzdGFuY2U7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICBwb2ludDE6IFZlY3RvcjJmLFxyXG4gICAgZGlyZWN0aW9uMTogVmVjdG9yMmYsXHJcbiAgICBwb2ludDI6IFZlY3RvcjJmLFxyXG4gICAgZGlyZWN0aW9uMjogVmVjdG9yMmZcclxuICApOiBWZWN0b3IyZiB7XHJcbiAgICBjb25zdCBkaWZmID0gcG9pbnQyLnN1YnRyYWN0KHBvaW50MSkubm9ybWFsaXNlKCk7XHJcbiAgICBjb25zdCBkZXQgPSBkaXJlY3Rpb24yLnggKiBkaXJlY3Rpb24xLnkgLSBkaXJlY3Rpb24yLnkgKiBkaXJlY3Rpb24xLng7XHJcbiAgICBjb25zdCB0ID0gKGRpZmYueSAqIGRpcmVjdGlvbjIueCAtIGRpZmYueSAqIGRpcmVjdGlvbjIueSkgLyBkZXQ7XHJcblxyXG4gICAgcmV0dXJuIHBvaW50MS5hZGQoZGlyZWN0aW9uMS5tdWx0aXBseSh0KSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IENvbG91ciB9IGZyb20gXCIuLi9Db2xvdXJcIjtcclxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vR2VvbWV0cnlcIjtcclxuaW1wb3J0IHsgSU9ic3RhY2xlIH0gZnJvbSBcIi4uL0lPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBDaXJjbGVPYnN0YWNsZSB9IGZyb20gXCIuLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVk9BZ2VudCBleHRlbmRzIEFnZW50IHtcclxuICBwcml2YXRlIF9jb2xvdXI6IENvbG91cjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBpZDogbnVtYmVyLFxyXG4gICAgc3RhcnRQb3NpdGlvbjogVmVjdG9yMmYsXHJcbiAgICBnZXRQcmVmZXJyZWRWZWxvY2l0eTogKHBvc2l0aW9uOiBWZWN0b3IyZikgPT4gVmVjdG9yMmZcclxuICApIHtcclxuICAgIHN1cGVyKGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICB0aGlzLl9jb2xvdXIgPSBDb2xvdXIuR3JlZW47XHJcbiAgfVxyXG5cclxuICBnZXRDb2xvdXIoKTogQ29sb3VyIHtcclxuICAgIHJldHVybiB0aGlzLl9jb2xvdXI7XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoZGVsdGFUOiBudW1iZXIsIG5laWdoYm91cnM6IEFnZW50W10sIG9ic3RhY2xlczogSU9ic3RhY2xlW10pOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9pc0RvbmUpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHByZWZlcnJlZFZlbG9jaXR5ID0gdGhpcy5fZ2V0UHJlZmVycmVkVmVsb2NpdHkodGhpcy5fcG9zaXRpb24pO1xyXG4gICAgY29uc3Qgc3RlcFNpemUgPSAoZGVsdGFUICogNjApIC8gNDAwMDtcclxuXHJcbiAgICAvLyBDaGVjayBpZiBkb25lXHJcbiAgICBpZiAocHJlZmVycmVkVmVsb2NpdHkubWFnbml0dWRlU3FyZCgpIDwgMC4xKSB7XHJcbiAgICAgIHRoaXMuX2lzRG9uZSA9IHRydWU7XHJcbiAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IG5ldyBWZWN0b3IyZigwLCAwKTtcclxuICAgICAgdGhpcy5fY29sb3VyID0gQ29sb3VyLldoaXRlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHNhZmUgPSB0cnVlO1xyXG4gICAgbGV0IGNvbGxpc2lvbjtcclxuICAgIGxldCBhZ2VudDtcclxuXHJcbiAgICAvLyBDaGVjayBmb3IgY29sbGlzaW9uIHdpdGggbmVpZ2hib3VyaW5nIGFnZW50c1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSB0aGlzLmdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShuZWlnaGJvdXJzW2ldKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJlxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocHJlZmVycmVkVmVsb2NpdHkpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHNhZmUgPSBmYWxzZTtcclxuICAgICAgICBjb2xsaXNpb24gPSB2ZWxvY2l0eU9ic3RhY2xlO1xyXG4gICAgICAgIGFnZW50ID0gaTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIENoZWNrIGZvciBjb2xsaXNpb24gd2l0aCBvYnN0YWNsZXNcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgb2JzdGFjbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSBvYnN0YWNsZXNbaV0uZ2V0VmVsb2NpdHlPYnN0YWNsZSh0aGlzKTtcclxuICAgICAgaWYgKFxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJlxyXG4gICAgICAgIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMocHJlZmVycmVkVmVsb2NpdHkpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHNhZmUgPSBmYWxzZTtcclxuICAgICAgICBjb2xsaXNpb24gPSB2ZWxvY2l0eU9ic3RhY2xlO1xyXG4gICAgICAgIGFnZW50ID0gLTE7IC8vIG5vdCBjb2xsaWRpbmcgd2l0aCBhbiBhZ2VudFxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgcHJlZmVycmVkIHZlbG9jaXR5IGlzIHNhZmUsIGdvIGluIHRoYXQgZGlyZWN0aW9uXHJcbiAgICBpZiAoc2FmZSkge1xyXG4gICAgICB0aGlzLl9kaXJlY3Rpb24gPSBwcmVmZXJyZWRWZWxvY2l0eTtcclxuICAgICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5HcmVlbjtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIG5vdCwgdHJ5IGNsb3Nlc3QgcG9pbnQgb24gbGVmdCBhbmQgcmlnaHQgZWRnZSBvZiBjb25lXHJcbiAgICBpZiAoY29sbGlzaW9uICE9IG51bGwpIHtcclxuICAgICAgY29uc3QgbGVmdCA9IEdlb21ldHJ5LmdldENsb3Nlc3RQb2ludE9uTGluZShcclxuICAgICAgICBjb2xsaXNpb24udmVydGV4LFxyXG4gICAgICAgIGNvbGxpc2lvbi50YW5nZW50MSxcclxuICAgICAgICBwcmVmZXJyZWRWZWxvY2l0eVxyXG4gICAgICApO1xyXG5cclxuICAgICAgY29uc3QgcmlnaHQgPSBHZW9tZXRyeS5nZXRDbG9zZXN0UG9pbnRPbkxpbmUoXHJcbiAgICAgICAgY29sbGlzaW9uLnZlcnRleCxcclxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudDIsXHJcbiAgICAgICAgcHJlZmVycmVkVmVsb2NpdHlcclxuICAgICAgKTtcclxuXHJcbiAgICAgIGxldCBsZWZ0U2FmZSA9IHRydWU7XHJcbiAgICAgIGxldCByaWdodFNhZmUgPSB0cnVlO1xyXG5cclxuICAgICAgLy8gQ2hlY2sgZm9yIGNvbGxpc2lvbiB3aXRoIG5laWdoYm91cmluZyBhZ2VudHNcclxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuZWlnaGJvdXJzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGkgIT0gYWdlbnQpIHtcclxuICAgICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSB0aGlzLmdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShuZWlnaGJvdXJzW2ldKTtcclxuICAgICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiYgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhsZWZ0KSkge1xyXG4gICAgICAgICAgICBsZWZ0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgIT0gbnVsbCAmJiB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKGxlZnQpKSB7XHJcbiAgICAgICAgICAgIHJpZ2h0U2FmZSA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gQ2hlY2sgZm9yIGNvbGxpc2lvbiB3aXRoIG9ic3RhY2xlc1xyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9ic3RhY2xlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSBvYnN0YWNsZXNbaV0uZ2V0VmVsb2NpdHlPYnN0YWNsZSh0aGlzKTtcclxuICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSAhPSBudWxsICYmIHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMobGVmdCkpIHtcclxuICAgICAgICAgIGxlZnRTYWZlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh2ZWxvY2l0eU9ic3RhY2xlICE9IG51bGwgJiYgdmVsb2NpdHlPYnN0YWNsZS5jb250YWlucyhsZWZ0KSkge1xyXG4gICAgICAgICAgcmlnaHRTYWZlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAobGVmdFNhZmUgJiYgcmlnaHRTYWZlKSB7XHJcbiAgICAgICAgLy8gSWYgYm90aCBhcmUgc2FmZSB0YWtlIGNsb3Nlc3QgdG8gcHJlZmVycmVkIHZlbG9jaXR5XHJcbiAgICAgICAgaWYgKFxyXG4gICAgICAgICAgbGVmdC5zdWJ0cmFjdChwcmVmZXJyZWRWZWxvY2l0eSkubWFnbml0dWRlU3FyZCgpIDxcclxuICAgICAgICAgIHJpZ2h0LnN1YnRyYWN0KHByZWZlcnJlZFZlbG9jaXR5KS5tYWduaXR1ZGVTcXJkKClcclxuICAgICAgICApIHtcclxuICAgICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IGxlZnQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IHJpZ2h0O1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIGlmIChsZWZ0U2FmZSkge1xyXG4gICAgICAgIHRoaXMuX2RpcmVjdGlvbiA9IGxlZnQ7XHJcbiAgICAgIH0gZWxzZSBpZiAocmlnaHRTYWZlKSB7XHJcbiAgICAgICAgdGhpcy5fZGlyZWN0aW9uID0gcmlnaHQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChsZWZ0U2FmZSB8fCByaWdodFNhZmUpIHtcclxuICAgICAgICB0aGlzLl9wb3NpdGlvbiA9IHRoaXMuX3Bvc2l0aW9uLmFkZCh0aGlzLl9kaXJlY3Rpb24ubXVsdGlwbHkoc3RlcFNpemUpKTtcclxuICAgICAgICB0aGlzLnNldENvbG91cihwcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRWxzZSwgc2FtcGxlIHJhbmRvbSB2ZWxvY2l0aWVzIGFuZCBzZWxlY3QgdGhlIG9uZSB3aXRoIHRoZSBsZWFzdCBwZW5hbHR5XHJcbiAgICBjb25zdCBzYW1wbGVzID0gMTAwOyAvLyBudW1iZXIgb2YgdmVsb2NpdGllcyB0byB0cnlcclxuICAgIGNvbnN0IHcgPSAyMDA7IC8vIHBhcmFtZXRlciBmb3IgcGVuYWx0eVxyXG4gICAgbGV0IG1pblBlbmFsdHkgPSBJbmZpbml0eTtcclxuICAgIGxldCBiZXN0VmVsb2NpdHkgPSBuZXcgVmVjdG9yMmYoMCwgMCk7XHJcblxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzYW1wbGVzOyBpKyspIHtcclxuICAgICAgLy8gU2FtcGxlIHZlbG9jaXR5IGZyb20gZW50aXJlIGFsbG93ZWQgdmVsb2NpdHkgc3BhY2VcclxuICAgICAgY29uc3Qgc2FtcGxlID0gbmV3IFZlY3RvcjJmKDAsIDApLnNhbXBsZSgxKTtcclxuICAgICAgbGV0IG1pblRpbWVUb0NvbGxpc2lvbiA9IEluZmluaXR5O1xyXG5cclxuICAgICAgLy8gRmluZCB0aW1lIHRvIGZpcnN0IGNvbGxpc2lvbiB3aXRoIGFub3RoZXIgYWdlbnRcclxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBuZWlnaGJvdXJzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgY29uc3QgYiA9IG5laWdoYm91cnNbal07XHJcbiAgICAgICAgY29uc3QgdmVsb2NpdHlPYnN0YWNsZSA9IHRoaXMuZ2V0QWdlbnRWZWxvY2l0eU9ic3RhY2xlKGIpO1xyXG5cclxuICAgICAgICBpZiAodmVsb2NpdHlPYnN0YWNsZSA9PSBudWxsIHx8IHZlbG9jaXR5T2JzdGFjbGUuY29udGFpbnMoc2FtcGxlKSkge1xyXG4gICAgICAgICAgY29uc3QgdGltZVRvQ29sbGlzaW9uID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgIGIuZ2V0UG9zaXRpb24oKS5hZGQoYi5nZXREaXJlY3Rpb24oKSksXHJcbiAgICAgICAgICAgIHRoaXMuUmFkaXVzICsgYi5SYWRpdXMsXHJcbiAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uLFxyXG4gICAgICAgICAgICBzYW1wbGUuc3VidHJhY3QoYi5nZXREaXJlY3Rpb24oKSlcclxuICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgaWYgKHRpbWVUb0NvbGxpc2lvbiA8IG1pblRpbWVUb0NvbGxpc2lvbikge1xyXG4gICAgICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSB0aW1lVG9Db2xsaXNpb247XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBGaW5kIHRpbWUgdG8gZmlyc3QgY29sbGlzaW9uIHdpdGggYW4gb2JzdGFjbGVcclxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBvYnN0YWNsZXMubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICBjb25zdCBiID0gb2JzdGFjbGVzW2pdO1xyXG4gICAgICAgIGlmIChiIGluc3RhbmNlb2YgQ2lyY2xlT2JzdGFjbGUpIHtcclxuICAgICAgICAgIGNvbnN0IHZlbG9jaXR5T2JzdGFjbGUgPSBiLmdldFZlbG9jaXR5T2JzdGFjbGUodGhpcyk7XHJcblxyXG4gICAgICAgICAgaWYgKHZlbG9jaXR5T2JzdGFjbGUgPT0gbnVsbCB8fCB2ZWxvY2l0eU9ic3RhY2xlLmNvbnRhaW5zKHNhbXBsZSkpIHtcclxuICAgICAgICAgICAgY29uc3QgdGltZVRvQ29sbGlzaW9uID0gR2VvbWV0cnkuZ2V0Rmlyc3RSYXlDaXJjbGVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgICAgYi5Qb3NpdGlvbixcclxuICAgICAgICAgICAgICB0aGlzLlJhZGl1cyArIGIuUmFkaXVzLFxyXG4gICAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uLFxyXG4gICAgICAgICAgICAgIHNhbXBsZVxyXG4gICAgICAgICAgICApO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRpbWVUb0NvbGxpc2lvbiA8IG1pblRpbWVUb0NvbGxpc2lvbikge1xyXG4gICAgICAgICAgICAgIG1pblRpbWVUb0NvbGxpc2lvbiA9IHRpbWVUb0NvbGxpc2lvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoYiBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSkge1xyXG4gICAgICAgICAgY29uc3QgdGltZVRvQ29sbGlzaW9uID1cclxuICAgICAgICAgICAgR2VvbWV0cnkuZ2V0TGluZUxpbmVJbnRlcnNlY3Rpb24oXHJcbiAgICAgICAgICAgICAgYi5TdGFydCxcclxuICAgICAgICAgICAgICBiLkVuZC5zdWJ0cmFjdChiLlN0YXJ0KS5ub3JtYWxpc2UoKSxcclxuICAgICAgICAgICAgICB0aGlzLl9wb3NpdGlvbixcclxuICAgICAgICAgICAgICBzYW1wbGUubm9ybWFsaXNlKClcclxuICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgIC5zdWJ0cmFjdCh0aGlzLl9wb3NpdGlvbilcclxuICAgICAgICAgICAgICAubWFnbml0dWRlKCkgLyBzYW1wbGUubWFnbml0dWRlKCk7XHJcblxyXG4gICAgICAgICAgaWYgKHRpbWVUb0NvbGxpc2lvbiA8IG1pblRpbWVUb0NvbGxpc2lvbikge1xyXG4gICAgICAgICAgICBtaW5UaW1lVG9Db2xsaXNpb24gPSB0aW1lVG9Db2xsaXNpb247XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBBdHRlbXB0IHRvIHByZXZlbnQgaW50ZXJzZWN0aW9uXHJcbiAgICAgIGlmIChtaW5UaW1lVG9Db2xsaXNpb24gPCAxMCkge1xyXG4gICAgICAgIG1pblRpbWVUb0NvbGxpc2lvbiA9IDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENhbGN1bGF0ZSBwZW5hbHR5XHJcbiAgICAgIGNvbnN0IHBlbmFsdHkgPVxyXG4gICAgICAgIHcgLyBtaW5UaW1lVG9Db2xsaXNpb24gKyBwcmVmZXJyZWRWZWxvY2l0eS5zdWJ0cmFjdChzYW1wbGUpLm1hZ25pdHVkZSgpOyAvLyBUUyBjb3JyZWN0bHkgaGFuZGxlcyBkaXZpZGUgYnkgemVybyBvciBpbmZpbml0eVxyXG5cclxuICAgICAgaWYgKHBlbmFsdHkgPCBtaW5QZW5hbHR5KSB7XHJcbiAgICAgICAgbWluUGVuYWx0eSA9IHBlbmFsdHk7XHJcbiAgICAgICAgYmVzdFZlbG9jaXR5ID0gc2FtcGxlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fZGlyZWN0aW9uID0gYmVzdFZlbG9jaXR5O1xyXG4gICAgdGhpcy5fcG9zaXRpb24gPSB0aGlzLl9wb3NpdGlvbi5hZGQodGhpcy5fZGlyZWN0aW9uLm11bHRpcGx5KHN0ZXBTaXplKSk7XHJcbiAgICB0aGlzLnNldENvbG91cihwcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgZ2V0QWdlbnRWZWxvY2l0eU9ic3RhY2xlKGI6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB8IG51bGwge1xyXG4gICAgY29uc3QgdmVsb2NpdHlCID0gYi5nZXREaXJlY3Rpb24oKTtcclxuXHJcbiAgICAvLyBUcmFuc2xhdGUgb3JpZ2luIHRvIHRoaXMgYWdlbnQncyBwb3NpdGlvblxyXG4gICAgY29uc3QgcG9zaXRpb25CID0gYi5nZXRQb3NpdGlvbigpLnN1YnRyYWN0KHRoaXMuX3Bvc2l0aW9uKTtcclxuXHJcbiAgICAvLyBGaW5kIE1pbmtvd3NraSBzdW0gb2YgYWdlbnRzXHJcbiAgICBjb25zdCBjZW50cmUgPSBwb3NpdGlvbkIuYWRkKHZlbG9jaXR5Qik7XHJcbiAgICBjb25zdCByYWRpdXMgPSBiLlJhZGl1cyArIHRoaXMuUmFkaXVzO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSBhbmdsZXNcclxuICAgIGNvbnN0IGRpZmYgPSB2ZWxvY2l0eUIuc3VidHJhY3QoY2VudHJlKTtcclxuICAgIGNvbnN0IGRpc3QgPSBkaWZmLm1hZ25pdHVkZSgpO1xyXG4gICAgaWYgKGRpc3QgPCByYWRpdXMpIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdGhldGEgPSBNYXRoLmFjb3MocmFkaXVzIC8gZGlzdCk7XHJcbiAgICBjb25zdCBwaGkgPSBNYXRoLmF0YW4yKGRpZmYueSwgZGlmZi54KTtcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgdGFuZ2VudCB2ZWN0b3JzXHJcbiAgICBjb25zdCBhbmdsZTEgPSBwaGkgKyB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQxID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMSksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUxKVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBhbmdsZTIgPSBwaGkgLSB0aGV0YTtcclxuICAgIGNvbnN0IHRhbmdlbnQyID0gbmV3IFZlY3RvcjJmKFxyXG4gICAgICBjZW50cmUueCArIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlMiksXHJcbiAgICAgIGNlbnRyZS55ICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUyKVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBSZXR1cm4gdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZWxvY2l0eUIsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgc2V0Q29sb3VyKHByZWZlcnJlZFZlbG9jaXR5OiBWZWN0b3IyZikge1xyXG4gICAgY29uc3Qgc3RyZXNzID0gcHJlZmVycmVkVmVsb2NpdHkuc3VidHJhY3QodGhpcy5fZGlyZWN0aW9uKS5tYWduaXR1ZGUoKTtcclxuICAgIGNvbnN0IGh1ZSA9IHN0cmVzcyA+IDEgPyAwIDogKDEgLSBzdHJlc3MpIC8gMztcclxuICAgIHRoaXMuX2NvbG91ciA9IENvbG91ci5Gcm9tSHN2KGh1ZSwgMSwgMSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4uL0FnZW50XCI7XHJcbmltcG9ydCB7IFZPQWdlbnQgfSBmcm9tIFwiLi9WT0FnZW50XCI7XHJcbmltcG9ydCB7IFZlY3RvcjJmIH0gZnJvbSBcIi4uL1ZlY3RvcjJmXCI7XHJcbmltcG9ydCB7IFZlbG9jaXR5T2JzdGFjbGUgfSBmcm9tIFwiLi4vVmVsb2NpdHlPYnN0YWNsZVwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJWT0FnZW50IGV4dGVuZHMgVk9BZ2VudCB7XHJcbiAgLy8gT3ZlcnJpZGUgZ2V0VmVsb2NpdHlPYnN0YWNsZSB0byBwcm9kdWNlIFJlY2lwcm9jYWwgVmVsb2NpdHkgT2JzdGFjbGVcclxuICBwcm90ZWN0ZWQgZ2V0QWdlbnRWZWxvY2l0eU9ic3RhY2xlKGI6IEFnZW50KTogVmVsb2NpdHlPYnN0YWNsZSB8IG51bGwge1xyXG4gICAgY29uc3QgdmVsb2NpdHlBID0gdGhpcy5nZXREaXJlY3Rpb24oKTtcclxuICAgIGNvbnN0IHZlbG9jaXR5QiA9IGIuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZXJ0ZXggPSB2ZWxvY2l0eUEuYWRkKHZlbG9jaXR5QikuZGl2aWRlKDIpO1xyXG5cclxuICAgIC8vIFRyYW5zbGF0ZSBvcmlnaW4gdG8gdGhpcyBhZ2VudCdzIHBvc2l0aW9uXHJcbiAgICBjb25zdCBwb3NpdGlvbkIgPSBiLmdldFBvc2l0aW9uKCkuc3VidHJhY3QodGhpcy5fcG9zaXRpb24pO1xyXG5cclxuICAgIC8vIEZpbmQgTWlua293c2tpIHN1bSBvZiBhZ2VudHNcclxuICAgIGNvbnN0IGNlbnRyZSA9IHBvc2l0aW9uQi5hZGQodmVsb2NpdHlCKTtcclxuICAgIGNvbnN0IHJhZGl1cyA9IGIuUmFkaXVzICsgdGhpcy5SYWRpdXM7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIGFuZ2xlc1xyXG4gICAgY29uc3QgZGlmZiA9IHZlbG9jaXR5Qi5zdWJ0cmFjdChjZW50cmUpO1xyXG4gICAgY29uc3QgZGlzdCA9IGRpZmYubWFnbml0dWRlKCk7XHJcbiAgICBpZiAoZGlzdCA8IHJhZGl1cykge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aGV0YSA9IE1hdGguYWNvcyhyYWRpdXMgLyBkaXN0KTtcclxuICAgIGNvbnN0IHBoaSA9IE1hdGguYXRhbjIoZGlmZi55LCBkaWZmLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB0YW5nZW50IHZlY3RvcnNcclxuICAgIGNvbnN0IGFuZ2xlMSA9IHBoaSArIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDEgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUxKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTEpXHJcbiAgICApO1xyXG5cclxuICAgIGNvbnN0IGFuZ2xlMiA9IHBoaSAtIHRoZXRhO1xyXG4gICAgY29uc3QgdGFuZ2VudDIgPSBuZXcgVmVjdG9yMmYoXHJcbiAgICAgIGNlbnRyZS54ICsgcmFkaXVzICogTWF0aC5jb3MoYW5nbGUyKSxcclxuICAgICAgY2VudHJlLnkgKyByYWRpdXMgKiBNYXRoLnNpbihhbmdsZTIpXHJcbiAgICApO1xyXG5cclxuICAgIC8vIFJldHVybiB2ZWxvY2l0eSBvYnN0YWNsZVxyXG4gICAgcmV0dXJuIG5ldyBWZWxvY2l0eU9ic3RhY2xlKHZlcnRleCwgdGFuZ2VudDEsIHRhbmdlbnQyKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVk9BZ2VudCB9IGZyb20gXCIuL1ZPQWdlbnRcIjtcclxuaW1wb3J0IHsgR2VvbWV0cnkgfSBmcm9tIFwiLi4vR2VvbWV0cnlcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi4vVmVjdG9yMmZcIjtcclxuaW1wb3J0IHsgVmVsb2NpdHlPYnN0YWNsZSB9IGZyb20gXCIuLi9WZWxvY2l0eU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgSFJWT0FnZW50IGV4dGVuZHMgVk9BZ2VudCB7XHJcbiAgLy8gT3ZlcnJpZGUgZ2V0VmVsb2NpdHlPYnN0YWNsZSB0byBwcm9kdWNlIEh5YnJpZCBSZWNpcHJvY2FsIFZlbG9jaXR5IE9ic3RhY2xlXHJcbiAgcHJvdGVjdGVkIGdldEFnZW50VmVsb2NpdHlPYnN0YWNsZShiOiBBZ2VudCk6IFZlbG9jaXR5T2JzdGFjbGUgfCBudWxsIHtcclxuICAgIGNvbnN0IHZlbG9jaXR5QSA9IHRoaXMuZ2V0RGlyZWN0aW9uKCk7XHJcbiAgICBjb25zdCB2ZWxvY2l0eUIgPSBiLmdldERpcmVjdGlvbigpO1xyXG5cclxuICAgIC8vIEdldCByZXNwZWN0aXZlIHZlcnRpY2VzXHJcbiAgICBjb25zdCB2b1ZlcnRleCA9IHZlbG9jaXR5QjtcclxuICAgIGNvbnN0IHJ2b1ZlcnRleCA9IHZlbG9jaXR5QS5hZGQodmVsb2NpdHlCKS5kaXZpZGUoMik7XHJcblxyXG4gICAgLy8gVHJhbnNsYXRlIG9yaWdpbiB0byB0aGlzIGFnZW50J3MgcG9zaXRpb25cclxuICAgIGNvbnN0IHBvc2l0aW9uQiA9IGIuZ2V0UG9zaXRpb24oKS5zdWJ0cmFjdCh0aGlzLl9wb3NpdGlvbik7XHJcblxyXG4gICAgLy8gRmluZCBNaW5rb3dza2kgc3VtIG9mIGFnZW50c1xyXG4gICAgY29uc3QgY2VudHJlID0gcG9zaXRpb25CLmFkZCh2ZWxvY2l0eUIpO1xyXG4gICAgY29uc3QgcmFkaXVzID0gYi5SYWRpdXMgKyB0aGlzLlJhZGl1cztcclxuXHJcbiAgICAvLyBDYWxjdWxhdGUgYW5nbGVzXHJcbiAgICBjb25zdCBkaWZmID0gdmVsb2NpdHlCLnN1YnRyYWN0KGNlbnRyZSk7XHJcbiAgICBjb25zdCBkaXN0ID0gZGlmZi5tYWduaXR1ZGUoKTtcclxuICAgIGlmIChkaXN0IDwgcmFkaXVzKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHRoZXRhID0gTWF0aC5hY29zKHJhZGl1cyAvIGRpc3QpO1xyXG4gICAgY29uc3QgcGhpID0gTWF0aC5hdGFuMihkaWZmLnksIGRpZmYueCk7XHJcblxyXG4gICAgLy8gQ2FsY3VsYXRlIHRhbmdlbnQgdmVjdG9yc1xyXG4gICAgY29uc3QgYW5nbGUxID0gcGhpICsgdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MSA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTEpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMSlcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYW5nbGUyID0gcGhpIC0gdGhldGE7XHJcbiAgICBjb25zdCB0YW5nZW50MiA9IG5ldyBWZWN0b3IyZihcclxuICAgICAgY2VudHJlLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZTIpLFxyXG4gICAgICBjZW50cmUueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlMilcclxuICAgICk7XHJcblxyXG4gICAgLy8gQ2hlY2sgd2hpY2ggc2lkZSB0byBwYXNzIG9uXHJcbiAgICBjb25zdCBzaWRlID1cclxuICAgICAgKHBvc2l0aW9uQi54IC0gdmVsb2NpdHlCLngpICogKHZlbG9jaXR5QS55IC0gdmVsb2NpdHlCLnkpIC1cclxuICAgICAgKHBvc2l0aW9uQi55IC0gdmVsb2NpdHlCLnkpICogKHZlbG9jaXR5QS54IC0gdmVsb2NpdHlCLngpO1xyXG5cclxuICAgIC8vIENhbGN1bGF0ZSB2ZXJ0ZXggYXMgaW50ZXJzZWN0aW9uIG9mIFZPIGFuZCBSVk8gY29uZVxyXG4gICAgbGV0IHZlcnRleDtcclxuICAgIGlmIChzaWRlID4gMCkge1xyXG4gICAgICAvLyBcIkxlZnRcIlxyXG4gICAgICB2ZXJ0ZXggPSBHZW9tZXRyeS5nZXRMaW5lTGluZUludGVyc2VjdGlvbihcclxuICAgICAgICB2b1ZlcnRleCxcclxuICAgICAgICB0YW5nZW50MSxcclxuICAgICAgICBydm9WZXJ0ZXgsXHJcbiAgICAgICAgdGFuZ2VudDJcclxuICAgICAgKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIFwiUmlnaHRcIlxyXG4gICAgICB2ZXJ0ZXggPSBHZW9tZXRyeS5nZXRMaW5lTGluZUludGVyc2VjdGlvbihcclxuICAgICAgICB2b1ZlcnRleCxcclxuICAgICAgICB0YW5nZW50MixcclxuICAgICAgICBydm9WZXJ0ZXgsXHJcbiAgICAgICAgdGFuZ2VudDFcclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXR1cm4gaHlicmlkIHJlY2lwcmljb2wgdmVsb2NpdHkgb2JzdGFjbGVcclxuICAgIHJldHVybiBuZXcgVmVsb2NpdHlPYnN0YWNsZSh2ZXJ0ZXgsIHRhbmdlbnQxLCB0YW5nZW50Mik7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCB7IEFnZW50IH0gZnJvbSBcIi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgVmVjdG9yMmYgfSBmcm9tIFwiLi9WZWN0b3IyZlwiO1xyXG5pbXBvcnQgeyBCYXNpY0FnZW50IH0gZnJvbSBcIi4vYWdlbnRzL0Jhc2ljQWdlbnRcIjtcclxuaW1wb3J0IHsgU3RvcEFnZW50IH0gZnJvbSBcIi4vYWdlbnRzL1N0b3BBZ2VudFwiO1xyXG5pbXBvcnQgeyBWT0FnZW50IH0gZnJvbSBcIi4vYWdlbnRzL1ZPQWdlbnRcIjtcclxuaW1wb3J0IHsgUlZPQWdlbnQgfSBmcm9tIFwiLi9hZ2VudHMvUlZPQWdlbnRcIjtcclxuaW1wb3J0IHsgSFJWT0FnZW50IH0gZnJvbSBcIi4vYWdlbnRzL0hSVk9BZ2VudFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIEFnZW50RmFjdG9yeSB7XHJcbiAgc3RhdGljIGdldEFnZW50KFxyXG4gICAgdHlwZTogc3RyaW5nLFxyXG4gICAgaWQ6IG51bWJlcixcclxuICAgIHN0YXJ0UG9zaXRpb246IFZlY3RvcjJmLFxyXG4gICAgZ2V0UHJlZmVycmVkVmVsb2NpdHk6IChwb3NpdGlvbjogVmVjdG9yMmYpID0+IFZlY3RvcjJmXHJcbiAgKTogQWdlbnQge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgIGNhc2UgXCJCYXNpY0FnZW50XCI6XHJcbiAgICAgICAgcmV0dXJuIG5ldyBCYXNpY0FnZW50KGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgIGNhc2UgXCJTdG9wQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IFN0b3BBZ2VudChpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICBjYXNlIFwiVk9BZ2VudFwiOlxyXG4gICAgICAgIHJldHVybiBuZXcgVk9BZ2VudChpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICBjYXNlIFwiUlZPQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IFJWT0FnZW50KGlkLCBzdGFydFBvc2l0aW9uLCBnZXRQcmVmZXJyZWRWZWxvY2l0eSk7XHJcbiAgICAgIGNhc2UgXCJIUlZPQWdlbnRcIjpcclxuICAgICAgICByZXR1cm4gbmV3IEhSVk9BZ2VudChpZCwgc3RhcnRQb3NpdGlvbiwgZ2V0UHJlZmVycmVkVmVsb2NpdHkpO1xyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBhZ2VudCB0eXBlIFxcXCIke3R5cGV9XFxcImApO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBBZ2VudCB9IGZyb20gXCIuL0FnZW50XCI7XHJcbmltcG9ydCB7IEFnZW50RmFjdG9yeSB9IGZyb20gXCIuL0FnZW50RmFjdG9yeVwiO1xyXG5pbXBvcnQgeyBJT2JzdGFjbGUgfSBmcm9tIFwiLi9JT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi9vYnN0YWNsZXMvQ2lyY2xlT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4vb2JzdGFjbGVzL0xpbmVPYnN0YWNsZVwiO1xyXG5pbXBvcnQgeyBWZWN0b3IyZiB9IGZyb20gXCIuL1ZlY3RvcjJmXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb24ge1xyXG4gIGFnZW50czogQWdlbnRbXTtcclxuICBvYnN0YWNsZXM6IElPYnN0YWNsZVtdO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdGlvbkZhY3Rvcnkge1xyXG4gIHN0YXRpYyBnZXRDb25maWd1cmF0aW9uKFxyXG4gICAgdHlwZTogc3RyaW5nLFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgY2FzZSBcIlJhbmRvbVRvUmFuZG9tXCI6XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuUmFuZG9tVG9SYW5kb20oYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJSYW5kb21Ub0xpbmVcIjpcclxuICAgICAgICByZXR1cm4gdGhpcy5SYW5kb21Ub0xpbmUoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJDaXJjbGVUb0NpcmNsZVwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLkNpcmNsZVRvQ2lyY2xlKGFnZW50VHlwZSwgd2lkdGgsIGhlaWdodCwgbnVtYmVyT2ZBZ2VudHMpO1xyXG4gICAgICBjYXNlIFwiR3JpZFRvR3JpZFwiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLkdyaWRUb0dyaWQoYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGNhc2UgXCJCb2xsYXJkc1wiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLkJvbGxhcmRzKGFnZW50VHlwZSwgd2lkdGgsIGhlaWdodCwgbnVtYmVyT2ZBZ2VudHMpO1xyXG4gICAgICBjYXNlIFwiQm90dGxlbmVja1wiOlxyXG4gICAgICAgIHJldHVybiB0aGlzLkJvdHRsZW5lY2soYWdlbnRUeXBlLCB3aWR0aCwgaGVpZ2h0LCBudW1iZXJPZkFnZW50cyk7XHJcbiAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGNvbmZpZ3VyYXRpb24gdHlwZSBcXFwiJHt0eXBlfVxcXCJgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIFJhbmRvbVRvUmFuZG9tKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBSYW5kb20gc3RhcnQgcG9zaXRpb24gdG8gcmFuZG9tIGdvYWwgcG9zaXRpb25cclxuICAgIGxldCBhZ2VudHM6IEFnZW50W10gPSBbXTtcclxuICAgIGNvbnN0IHN0YXJ0UG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGgsXHJcbiAgICAgIGhlaWdodCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDUwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyKSkpO1xyXG5cclxuICAgIGNvbnN0IGdvYWxQb3NpdGlvbnMgPSB0aGlzLnBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgICB3aWR0aCxcclxuICAgICAgaGVpZ2h0LFxyXG4gICAgICBudW1iZXJPZkFnZW50cyxcclxuICAgICAgNTBcclxuICAgICkubWFwKCh4KSA9PiB4LnN1YnRyYWN0KG5ldyBWZWN0b3IyZih3aWR0aCAvIDIsIGhlaWdodCAvIDIpKSk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1iZXJPZkFnZW50czsgaSsrKSB7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLFxyXG4gICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKGdvYWxQb3NpdGlvbnNbaV0pXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBbXSB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgUmFuZG9tVG9MaW5lKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICB3aWR0aDogbnVtYmVyLFxyXG4gICAgaGVpZ2h0OiBudW1iZXIsXHJcbiAgICBudW1iZXJPZkFnZW50czogbnVtYmVyXHJcbiAgKTogQ29uZmlndXJhdGlvbiB7XHJcbiAgICAvLyBSYW5kb20gc3RhcnQgcG9zaXRpb24gdG8gZml4ZWQgcG9zaXRpb24gb24gbGluZVxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgbGV0IHN0YXJ0UG9zaXRpb25zID0gdGhpcy5wb2lzc29uRGlza1NhbXBsZShcclxuICAgICAgd2lkdGgsXHJcbiAgICAgIGhlaWdodCxcclxuICAgICAgbnVtYmVyT2ZBZ2VudHMsXHJcbiAgICAgIDUwXHJcbiAgICApLm1hcCgoeCkgPT4geC5zdWJ0cmFjdChuZXcgVmVjdG9yMmYod2lkdGggLyAyLCBoZWlnaHQgLyAyKSkpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgIG5ldyBWZWN0b3IyZigoKGkgKyAxKSAvIChudW1iZXJPZkFnZW50cyArIDEpIC0gMSAvIDIpICogd2lkdGgsIDApXHJcbiAgICAgICAgKVxyXG4gICAgICApO1xyXG4gICAgICBhZ2VudHMucHVzaChhZ2VudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHsgYWdlbnRzOiBhZ2VudHMsIG9ic3RhY2xlczogW10gfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIENpcmNsZVRvQ2lyY2xlKFxyXG4gICAgYWdlbnRUeXBlOiBzdHJpbmcsXHJcbiAgICBfd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgLy8gUG9zaXRpb24gb24gcmFkaXVzIG9mIGNpcmNsZSB0byBvcHBvc2l0ZSBwb2ludFxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3QgcmFkaXVzID0gaGVpZ2h0IC8gMiAtIDI1O1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhbmdsZSA9ICgyICogTWF0aC5QSSAqIGkpIC8gbnVtYmVyT2ZBZ2VudHM7XHJcbiAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgIGFnZW50VHlwZSxcclxuICAgICAgICBpLFxyXG4gICAgICAgIG5ldyBWZWN0b3IyZihyYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSksIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKSksXHJcbiAgICAgICAgdGhpcy5wcmVmZXJyZWRWZWxvY2l0eUZyb21Hb2FsUG9zaXRpb24oXHJcbiAgICAgICAgICBuZXcgVmVjdG9yMmYoXHJcbiAgICAgICAgICAgIHJhZGl1cyAqIE1hdGguY29zKGFuZ2xlICsgTWF0aC5QSSksXHJcbiAgICAgICAgICAgIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlICsgTWF0aC5QSSlcclxuICAgICAgICAgIClcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4geyBhZ2VudHM6IGFnZW50cywgb2JzdGFjbGVzOiBbXSB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgR3JpZFRvR3JpZChcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIF9oZWlnaHQ6IG51bWJlcixcclxuICAgIG51bWJlck9mQWdlbnRzOiBudW1iZXJcclxuICApOiBDb25maWd1cmF0aW9uIHtcclxuICAgIC8vIFR3byBvcHBvc2luZyBncmlkcyBvZiBhZ2VudHMgcGFzc2luZyB0aHJvdWdoIGVhY2hvdGhlclxyXG4gICAgbGV0IGFnZW50czogQWdlbnRbXSA9IFtdO1xyXG4gICAgY29uc3QgZ3JpZFNpemUgPSBNYXRoLmNlaWwoTWF0aC5zcXJ0KG51bWJlck9mQWdlbnRzIC8gMikpO1xyXG4gICAgY29uc3Qgb2Zmc2V0ID0gOTA7XHJcbiAgICBsZXQgeCA9IDMwIC0gd2lkdGggLyAyO1xyXG4gICAgbGV0IHkgPSAoKGdyaWRTaXplIC0gMSkgLyAyKSAqIG9mZnNldDtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bWJlck9mQWdlbnRzOyBpKyspIHtcclxuICAgICAgY29uc3QgaWR4ID0gTWF0aC5mbG9vcihpIC8gMik7XHJcbiAgICAgIGNvbnN0IHJvdyA9IE1hdGguZmxvb3IoaWR4IC8gZ3JpZFNpemUpO1xyXG4gICAgICBjb25zdCBjb2wgPSBpZHggJSBncmlkU2l6ZTtcclxuXHJcbiAgICAgIGlmIChpICUgMiA9PSAwKSB7XHJcbiAgICAgICAgLy8gTEhTXHJcbiAgICAgICAgY29uc3QgYWdlbnQgPSBBZ2VudEZhY3RvcnkuZ2V0QWdlbnQoXHJcbiAgICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgICBpLFxyXG4gICAgICAgICAgbmV3IFZlY3RvcjJmKHggKyAoZ3JpZFNpemUgLSAxIC0gY29sKSAqIG9mZnNldCwgeSAtIHJvdyAqIG9mZnNldCksXHJcbiAgICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgICAgbmV3IFZlY3RvcjJmKC14IC0gY29sICogb2Zmc2V0LCB5IC0gcm93ICogb2Zmc2V0KVxyXG4gICAgICAgICAgKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgYWdlbnRzLnB1c2goYWdlbnQpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIC8vIFJIU1xyXG4gICAgICAgIGNvbnN0IGFnZW50ID0gQWdlbnRGYWN0b3J5LmdldEFnZW50KFxyXG4gICAgICAgICAgYWdlbnRUeXBlLFxyXG4gICAgICAgICAgaSxcclxuICAgICAgICAgIG5ldyBWZWN0b3IyZigteCAtIChncmlkU2l6ZSAtIDEgLSBjb2wpICogb2Zmc2V0LCB5IC0gcm93ICogb2Zmc2V0KSxcclxuICAgICAgICAgIHRoaXMucHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgICAgICAgICBuZXcgVmVjdG9yMmYoeCArIGNvbCAqIG9mZnNldCwgeSAtIHJvdyAqIG9mZnNldClcclxuICAgICAgICAgIClcclxuICAgICAgICApO1xyXG4gICAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IFtdIH07XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHN0YXRpYyBCb2xsYXJkcyhcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLmFkZChuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjAwLCAwKSlcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gQ2VudHJhbCBsaW5lIG9mIGJvbGxhcmRzXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDU7IGkrKykge1xyXG4gICAgICBvYnN0YWNsZXMucHVzaChuZXcgQ2lyY2xlT2JzdGFjbGUobmV3IFZlY3RvcjJmKDAsIDEyMCAqIGkgLSAyNDApLCAyMCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IG9ic3RhY2xlcyB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgQm90dGxlbmVjayhcclxuICAgIGFnZW50VHlwZTogc3RyaW5nLFxyXG4gICAgd2lkdGg6IG51bWJlcixcclxuICAgIGhlaWdodDogbnVtYmVyLFxyXG4gICAgbnVtYmVyT2ZBZ2VudHM6IG51bWJlclxyXG4gICk6IENvbmZpZ3VyYXRpb24ge1xyXG4gICAgY29uc3QgYWdlbnRzOiBBZ2VudFtdID0gW107XHJcbiAgICBjb25zdCBzdGFydFBvc2l0aW9ucyA9IHRoaXMucG9pc3NvbkRpc2tTYW1wbGUoXHJcbiAgICAgIHdpZHRoIC8gMiAtIDIwMCxcclxuICAgICAgaGVpZ2h0IC0gNDAsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzLFxyXG4gICAgICA4MFxyXG4gICAgKS5tYXAoKHgpID0+IHguc3VidHJhY3QobmV3IFZlY3RvcjJmKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMiAtIDIwKSkpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZBZ2VudHM7IGkrKykge1xyXG4gICAgICBjb25zdCBhZ2VudCA9IEFnZW50RmFjdG9yeS5nZXRBZ2VudChcclxuICAgICAgICBhZ2VudFR5cGUsXHJcbiAgICAgICAgaSxcclxuICAgICAgICBzdGFydFBvc2l0aW9uc1tpXSxcclxuICAgICAgICB0aGlzLnByZWZlcnJlZFZlbG9jaXR5RnJvbUdvYWxQb3NpdGlvbihcclxuICAgICAgICAgIHN0YXJ0UG9zaXRpb25zW2ldLmFkZChuZXcgVmVjdG9yMmYod2lkdGggLyAyICsgMjAwLCAwKSlcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICAgIGFnZW50cy5wdXNoKGFnZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBvYnN0YWNsZXM6IElPYnN0YWNsZVtdID0gW107XHJcblxyXG4gICAgLy8gQ2VudHJhbCB3YWxsIHdpdGggbmFycm93IG9wZW5pbmdcclxuICAgIG9ic3RhY2xlcy5wdXNoKFxyXG4gICAgICBuZXcgTGluZU9ic3RhY2xlKG5ldyBWZWN0b3IyZigwLCAtNTAwKSwgbmV3IFZlY3RvcjJmKDAsIC04MCkpXHJcbiAgICApO1xyXG4gICAgb2JzdGFjbGVzLnB1c2gobmV3IExpbmVPYnN0YWNsZShuZXcgVmVjdG9yMmYoMCwgNTAwKSwgbmV3IFZlY3RvcjJmKDAsIDgwKSkpO1xyXG5cclxuICAgIHJldHVybiB7IGFnZW50czogYWdlbnRzLCBvYnN0YWNsZXM6IG9ic3RhY2xlcyB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzdGF0aWMgcHJlZmVycmVkVmVsb2NpdHlGcm9tR29hbFBvc2l0aW9uKFxyXG4gICAgZ29hbFBvc2l0aW9uOiBWZWN0b3IyZlxyXG4gICk6IChwb3M6IFZlY3RvcjJmKSA9PiBWZWN0b3IyZiB7XHJcbiAgICByZXR1cm4gKHBvcykgPT4ge1xyXG4gICAgICBjb25zdCBnb2FsRGlyZWN0aW9uID0gZ29hbFBvc2l0aW9uLnN1YnRyYWN0KHBvcyk7XHJcbiAgICAgIGlmIChnb2FsRGlyZWN0aW9uLm1hZ25pdHVkZVNxcmQoKSA8IDEpIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbjtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZ29hbERpcmVjdGlvbi5ub3JtYWxpc2UoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgc3RhdGljIHBvaXNzb25EaXNrU2FtcGxlKFxyXG4gICAgeFJhbmdlOiBudW1iZXIsXHJcbiAgICB5UmFuZ2U6IG51bWJlcixcclxuICAgIG46IG51bWJlcixcclxuICAgIHRocmVzaG9sZDogbnVtYmVyXHJcbiAgKTogVmVjdG9yMmZbXSB7XHJcbiAgICBsZXQgc2FtcGxlczogVmVjdG9yMmZbXSA9IFtdO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgaSsrKSB7XHJcbiAgICAgIGxldCByZXNhbXBsZSA9IHRydWU7XHJcbiAgICAgIGxldCBwb3M6IFZlY3RvcjJmO1xyXG5cclxuICAgICAgd2hpbGUgKHJlc2FtcGxlKSB7XHJcbiAgICAgICAgcmVzYW1wbGUgPSBmYWxzZTtcclxuICAgICAgICBwb3MgPSBuZXcgVmVjdG9yMmYoeFJhbmdlICogTWF0aC5yYW5kb20oKSwgeVJhbmdlICogTWF0aC5yYW5kb20oKSk7XHJcblxyXG4gICAgICAgIHNhbXBsZXMuZm9yRWFjaCgoc2FtcGxlKSA9PiB7XHJcbiAgICAgICAgICBpZiAocG9zLnN1YnRyYWN0KHNhbXBsZSkubWFnbml0dWRlU3FyZCgpIDwgdGhyZXNob2xkICoqIDIpIHtcclxuICAgICAgICAgICAgcmVzYW1wbGUgPSB0cnVlO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBzYW1wbGVzLnB1c2gocG9zKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gc2FtcGxlcztcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4uL0lSZW5kZXJlclwiO1xyXG5pbXBvcnQgeyBTaW11bGF0aW9uIH0gZnJvbSBcIi4uL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgQWdlbnQgfSBmcm9tIFwiLi4vQWdlbnRcIjtcclxuaW1wb3J0IHsgTGluZU9ic3RhY2xlIH0gZnJvbSBcIi4uL29ic3RhY2xlcy9MaW5lT2JzdGFjbGVcIjtcclxuaW1wb3J0IHsgQ2lyY2xlT2JzdGFjbGUgfSBmcm9tIFwiLi4vb2JzdGFjbGVzL0NpcmNsZU9ic3RhY2xlXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVHJhY2VSZW5kZXJlciBpbXBsZW1lbnRzIElSZW5kZXJlciB7XHJcbiAgcHJpdmF0ZSBjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50O1xyXG4gIHByaXZhdGUgY29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xyXG5cclxuICBjb25zdHJ1Y3RvcihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhbnZhcyA9IGNhbnZhcztcclxuICAgIHRoaXMuY29udGV4dCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICB9XHJcblxyXG4gIGluaXQoc2ltdWxhdGlvbjogU2ltdWxhdGlvbikge1xyXG4gICAgLy8gQ2xlYXIgYmFja2dyb3VuZFxyXG4gICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcclxuICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSBcInJnYigxMzUsIDE5NCwgMjUwKVwiO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KDAsIDAsIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oXHJcbiAgICAgIDEsXHJcbiAgICAgIDAsXHJcbiAgICAgIDAsXHJcbiAgICAgIDEsXHJcbiAgICAgIHRoaXMuY2FudmFzLndpZHRoIC8gMixcclxuICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0IC8gMlxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBEcmF3IGZsb29yXHJcbiAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gXCJyZ2IoNTEsIDUxLCA1MSlcIjtcclxuICAgIHRoaXMuY29udGV4dC5maWxsUmVjdChcclxuICAgICAgLXRoaXMuY2FudmFzLndpZHRoICogMC41NSxcclxuICAgICAgLXRoaXMuY2FudmFzLmhlaWdodCAqIDAuNTUsXHJcbiAgICAgIHRoaXMuY2FudmFzLndpZHRoICogMS4xLFxyXG4gICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgKiAxLjFcclxuICAgICk7XHJcblxyXG4gICAgLy8gRHJhdyBvYnN0YWNsZXNcclxuICAgIHRoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9IFwid2hpdGVcIjtcclxuICAgIHRoaXMuY29udGV4dC5saW5lV2lkdGggPSAyO1xyXG4gICAgc2ltdWxhdGlvbi5nZXRPYnN0YWNsZXMoKS5mb3JFYWNoKChvYnN0YWNsZSkgPT4ge1xyXG4gICAgICBpZiAob2JzdGFjbGUgaW5zdGFuY2VvZiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlKTtcclxuICAgICAgfSBlbHNlIGlmIChvYnN0YWNsZSBpbnN0YW5jZW9mIExpbmVPYnN0YWNsZSkge1xyXG4gICAgICAgIHRoaXMuZHJhd0xpbmVPYnN0YWNsZShvYnN0YWNsZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKHNpbXVsYXRpb246IFNpbXVsYXRpb24pIHtcclxuICAgIGNvbnN0IGFnZW50cyA9IHNpbXVsYXRpb24uZ2V0QWdlbnRzKCk7XHJcblxyXG4gICAgLy8gRHJhdyBhZ2VudHNcclxuICAgIGFnZW50cy5mb3JFYWNoKChhZ2VudCkgPT4ge1xyXG4gICAgICB0aGlzLmRyYXdBZ2VudChhZ2VudCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0FnZW50KGFnZW50OiBBZ2VudCk6IHZvaWQge1xyXG4gICAgY29uc3QgcG9zaXRpb24gPSBhZ2VudC5nZXRQb3NpdGlvbigpO1xyXG4gICAgY29uc3QgY29sb3VyID0gYWdlbnQuZ2V0Q29sb3VyKCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxTdHlsZSA9IGByZ2IoJHtjb2xvdXIucn0sICR7Y29sb3VyLmd9LCAke2NvbG91ci5ifSlgO1xyXG4gICAgdGhpcy5jb250ZXh0LmZpbGxSZWN0KHBvc2l0aW9uLngsIC1wb3NpdGlvbi55LCAxLCAxKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgZHJhd0NpcmNsZU9ic3RhY2xlKG9ic3RhY2xlOiBDaXJjbGVPYnN0YWNsZSkge1xyXG4gICAgdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5hcmMoXHJcbiAgICAgIG9ic3RhY2xlLlBvc2l0aW9uLngsXHJcbiAgICAgIC1vYnN0YWNsZS5Qb3NpdGlvbi55LCAvLyB5IHBvc2l0aW9uIGludmVydGVkIHRvIG1hdGNoIDNEIHZpZXdcclxuICAgICAgb2JzdGFjbGUuUmFkaXVzLFxyXG4gICAgICAwLFxyXG4gICAgICAyICogTWF0aC5QSVxyXG4gICAgKTtcclxuXHJcbiAgICBjb25zdCBkID0gb2JzdGFjbGUuUmFkaXVzICogTWF0aC5TUVJUMV8yO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5tb3ZlVG8ob2JzdGFjbGUuUG9zaXRpb24ueCAtIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgLSBkKTtcclxuICAgIHRoaXMuY29udGV4dC5saW5lVG8ob2JzdGFjbGUuUG9zaXRpb24ueCArIGQsIG9ic3RhY2xlLlBvc2l0aW9uLnkgKyBkKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggKyBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55IC0gZCk7XHJcbiAgICB0aGlzLmNvbnRleHQubGluZVRvKG9ic3RhY2xlLlBvc2l0aW9uLnggLSBkLCBvYnN0YWNsZS5Qb3NpdGlvbi55ICsgZCk7XHJcblxyXG4gICAgdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkcmF3TGluZU9ic3RhY2xlKG9ic3RhY2xlOiBMaW5lT2JzdGFjbGUpIHtcclxuICAgIHRoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcclxuXHJcbiAgICB0aGlzLmNvbnRleHQubW92ZVRvKG9ic3RhY2xlLlN0YXJ0LngsIG9ic3RhY2xlLlN0YXJ0LnkpO1xyXG4gICAgdGhpcy5jb250ZXh0LmxpbmVUbyhvYnN0YWNsZS5FbmQueCwgb2JzdGFjbGUuRW5kLnkpO1xyXG5cclxuICAgIHRoaXMuY29udGV4dC5zdHJva2UoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU2ltdWxhdGlvbiB9IGZyb20gXCIuL1NpbXVsYXRpb25cIjtcclxuaW1wb3J0IHsgSVJlbmRlcmVyIH0gZnJvbSBcIi4vSVJlbmRlcmVyXCI7XHJcbmltcG9ydCB7IFJlbmRlcmVyMkQgfSBmcm9tIFwiLi9yZW5kZXJlcnMvUmVuZGVyZXIyRFwiO1xyXG5pbXBvcnQgeyBSZW5kZXJlcjNEIH0gZnJvbSBcIi4vcmVuZGVyZXJzL1JlbmRlcmVyM0RcIjtcclxuaW1wb3J0IHsgQWdlbnRUcmVlIH0gZnJvbSBcIi4vQWdlbnRUcmVlXCI7XHJcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25GYWN0b3J5IH0gZnJvbSBcIi4vQ29uZmlndXJhdGlvbkZhY3RvcnlcIjtcclxuaW1wb3J0IHsgVHJhY2VSZW5kZXJlciB9IGZyb20gXCIuL3JlbmRlcmVycy9UcmFjZVJlbmRlcmVyXCI7XHJcblxyXG5jb25zdCBjb25maWdTZWxlY3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNvbmZpZ1wiKSBhcyBIVE1MU2VsZWN0RWxlbWVudDtcclxuY29uc3QgYWdlbnRUeXBlU2VsZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXHJcbiAgXCJhZ2VudFR5cGVcIlxyXG4pIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xyXG5jb25zdCByYW5nZUlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyYW5nZVwiKSBhcyBIVE1MU2VsZWN0RWxlbWVudDtcclxuY29uc3QgbnVtYmVyT2ZBZ2VudHNJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxyXG4gIFwibnVtYmVyT2ZBZ2VudHNcIlxyXG4pIGFzIEhUTUxJbnB1dEVsZW1lbnQ7XHJcblxyXG5jb25zdCBjYW52YXMyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FudmFzMmRcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XHJcbmNvbnN0IGNhbnZhczNkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXMzZFwiKSBhcyBIVE1MQ2FudmFzRWxlbWVudDtcclxuY29uc3QgY2FudmFzVHJhY2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1RyYWNlXCIpIGFzIEhUTUxDYW52YXNFbGVtZW50O1xyXG5jb25zdCBmcmFtZXJhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZyYW1lcmF0ZVwiKSBhcyBIVE1MUGFyYWdyYXBoRWxlbWVudDtcclxuY29uc3QgcGxheUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheUJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuY29uc3Qgc3RlcEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3RlcEJ1dHRvblwiKSBhcyBIVE1MQnV0dG9uRWxlbWVudDtcclxuXHJcbmNvbnN0IHNpbXVsYXRpb24gPSBuZXcgU2ltdWxhdGlvbihuZXcgQWdlbnRUcmVlKFtdKSk7XHJcbmNvbnN0IHJlbmRlcmVyMmQgPSBuZXcgUmVuZGVyZXIyRChjYW52YXMyZCk7XHJcbmNvbnN0IHJlbmRlcmVyM2QgPSBuZXcgUmVuZGVyZXIzRChjYW52YXMzZCk7XHJcbmNvbnN0IHJlbmRlcmVyVHJhY2UgPSBuZXcgVHJhY2VSZW5kZXJlcihjYW52YXNUcmFjZSk7XHJcbnZhciByZW5kZXJlcjogSVJlbmRlcmVyID0gcmVuZGVyZXIyZDtcclxudmFyIHBsYXkgPSBmYWxzZTtcclxudmFyIHJhbmdlID0gMjAwO1xyXG5cclxuLy8gSW5pdGlhbGlzZSBzaW11bGF0aW9uIGFuZCBiZWdpbiB1cGRhdGUvcmVuZGVyIGxvb3BcclxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgdGhpcy5yZWNvbmZpZ3VyZSgpO1xyXG5cclxuICBsZXQgbGFzdFJlbmRlciA9IDA7XHJcbiAgbGV0IGxhc3RGUFMgPSAwO1xyXG4gIGxldCBmcmFtZXMgPSAwO1xyXG5cclxuICBmdW5jdGlvbiBsb29wKHRpbWVzdGFtcDogbnVtYmVyKSB7XHJcbiAgICBsZXQgZGVsdGFUID0gdGltZXN0YW1wIC0gbGFzdFJlbmRlcjtcclxuICAgIGxhc3RSZW5kZXIgPSB0aW1lc3RhbXA7XHJcblxyXG4gICAgLy8gVXBkYXRlXHJcbiAgICBpZiAocGxheSkge1xyXG4gICAgICBzaW11bGF0aW9uLnVwZGF0ZShkZWx0YVQsIHJhbmdlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZW5kZXJcclxuICAgIHJlbmRlcmVyLnJlbmRlcihzaW11bGF0aW9uKTtcclxuICAgIGZyYW1lcysrO1xyXG5cclxuICAgIC8vIHJlY2FsY3VsYXRlIGZyYW1lcmF0ZSBldmVyeSAyNTBtc1xyXG4gICAgaWYgKHRpbWVzdGFtcCAtIGxhc3RGUFMgPj0gMjUwKSB7XHJcbiAgICAgIGZyYW1lcmF0ZS50ZXh0Q29udGVudCA9IGBGUFM6ICR7KFxyXG4gICAgICAgICgxMDAwICogZnJhbWVzKSAvXHJcbiAgICAgICAgKHRpbWVzdGFtcCAtIGxhc3RGUFMpXHJcbiAgICAgICkudG9GaXhlZCgxKX1gO1xyXG5cclxuICAgICAgZnJhbWVzID0gMDtcclxuICAgICAgbGFzdEZQUyA9IHRpbWVzdGFtcDtcclxuICAgIH1cclxuXHJcbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGxvb3ApO1xyXG4gIH1cclxuXHJcbiAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShsb29wKTtcclxufVxyXG5cclxuLy8gU3dpdGNoIHZpZXdcclxuZXhwb3J0IGZ1bmN0aW9uIHN3aXRjaFZpZXcodmlldzogc3RyaW5nKSB7XHJcbiAgc3dpdGNoICh2aWV3KSB7XHJcbiAgICBjYXNlIFwiMkRcIjpcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3MmRcIikuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkXCIpO1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXczZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlld1RyYWNlXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgcmVuZGVyZXIgPSByZW5kZXJlcjJkO1xyXG4gICAgICBjYW52YXMyZC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xyXG4gICAgICBjYW52YXMzZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgIGNhbnZhc1RyYWNlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiM0RcIjpcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3MmRcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXczZFwiKS5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlld1RyYWNlXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgcmVuZGVyZXIgPSByZW5kZXJlcjNkO1xyXG4gICAgICBjYW52YXMyZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgIGNhbnZhczNkLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcbiAgICAgIGNhbnZhc1RyYWNlLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiVHJhY2VcIjpcclxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWV3MmRcIikuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkXCIpO1xyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZXczZFwiKS5jbGFzc0xpc3QucmVtb3ZlKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlld1RyYWNlXCIpLmNsYXNzTGlzdC5hZGQoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgcmVuZGVyZXIgPSByZW5kZXJlclRyYWNlO1xyXG4gICAgICBjYW52YXMyZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICAgIGNhbnZhczNkLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgICAgY2FudmFzVHJhY2Uuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgYnJlYWs7XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gdmlldyBcXFwiJHt2aWV3fVxcXCJgKTtcclxuICB9XHJcbiAgcmVuZGVyZXIuaW5pdChzaW11bGF0aW9uKTtcclxufVxyXG5cclxuLy8gVG9nZ2xlIHBsYXkvcGF1c2VcclxuZXhwb3J0IGZ1bmN0aW9uIHBsYXlQYXVzZSgpIHtcclxuICBwbGF5ID0gIXBsYXk7XHJcblxyXG4gIGlmIChwbGF5KSB7XHJcbiAgICBwbGF5QnV0dG9uLnRleHRDb250ZW50ID0gXCJQYXVzZVwiO1xyXG4gICAgc3RlcEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfSBlbHNlIHtcclxuICAgIHBsYXlCdXR0b24udGV4dENvbnRlbnQgPSBcIlBsYXlcIjtcclxuICAgIHN0ZXBCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcbn1cclxuXHJcbi8vIHN0ZXAgc2ltdWxhdGlvbiBieSAxIGZyYW1lXHJcbmV4cG9ydCBmdW5jdGlvbiBzdGVwKCkge1xyXG4gIHNpbXVsYXRpb24udXBkYXRlKDEwMDAgLyA2MCwgcmFuZ2UpOyAvLyBBc3N1bWVzIDYwRlBTXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZWNvbmZpZ3VyZSgpIHtcclxuICBpZiAocGxheSkge1xyXG4gICAgdGhpcy5wbGF5UGF1c2UoKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGNvbmZpZyA9IGNvbmZpZ1NlbGVjdC52YWx1ZTtcclxuICBjb25zdCBhZ2VudFR5cGUgPSBhZ2VudFR5cGVTZWxlY3QudmFsdWU7XHJcbiAgcmFuZ2UgPSBwYXJzZUludChyYW5nZUlucHV0LnZhbHVlKSA/PyAwO1xyXG4gIGNvbnN0IG51bWJlck9mQWdlbnRzID0gcGFyc2VJbnQobnVtYmVyT2ZBZ2VudHNJbnB1dC52YWx1ZSkgPz8gMDtcclxuXHJcbiAgc2ltdWxhdGlvbi5pbml0KFxyXG4gICAgQ29uZmlndXJhdGlvbkZhY3RvcnkuZ2V0Q29uZmlndXJhdGlvbihcclxuICAgICAgY29uZmlnLFxyXG4gICAgICBhZ2VudFR5cGUsXHJcbiAgICAgIGNhbnZhczJkLndpZHRoLFxyXG4gICAgICBjYW52YXMyZC5oZWlnaHQsXHJcbiAgICAgIG51bWJlck9mQWdlbnRzXHJcbiAgICApXHJcbiAgKTtcclxuXHJcbiAgcmVuZGVyZXIuaW5pdChzaW11bGF0aW9uKTtcclxufVxyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDMxNyk7XG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=