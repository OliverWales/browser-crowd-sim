var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={491:(t,e,i)=>{i.r(e),i.d(e,{init:()=>$,playPause:()=>et,reconfigure:()=>nt,step:()=>it,switchView:()=>tt});var n,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._done=!1,this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var i=this;this._agents.forEach((function(n){n.update(t,i._agents.getNeighboursInRangeEuclidean(n,Math.min(e,n.getDistanceToGoal()+n.Radius)),i._obstacles)})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t.prototype.isDone=function(){if(this._done)return!0;var t=!0;return this._agents.forEach((function(e){t&&(t=e.isDone())})),this._done=t,this._done},t}(),r=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.toString=function(){return"("+this.x+", "+this.y+")"},t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var i=Math.sqrt(Math.random())*e,n=2*Math.PI*Math.random();return new t(this.x+i*Math.cos(n),this.y+i*Math.sin(n))},t.prototype.isLeftOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)>0},t.prototype.isRightOf=function(t){return this.x*(t.y-this.y)-this.y*(t.x-this.x)<0},t}(),s=function(){function t(t,e,i){this.vertex=t,this.tangent1=e,this.tangent2=i}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),i=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&i<0},t}(),a=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){var e=new r(0,0),i=this.Position.subtract(t.getPosition()),n=this.Radius+t.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),l=u+c,h=new r(i.x+n*Math.cos(l),i.y+n*Math.sin(l)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,h,d)},t}(),c=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){var e=this.pointVelocityObstacle(t,this.Start),i=this.pointVelocityObstacle(t,this.End);if(null==e&&null==i)return null;if(null==e)return i;if(null==i)return e;var n=e.tangent1;e.tangent2.isLeftOf(n)&&(n=e.tangent2),i.tangent1.isLeftOf(n)&&(n=i.tangent1),i.tangent2.isLeftOf(n)&&(n=i.tangent2);var o=e.tangent1;return e.tangent2.isRightOf(o)&&(o=e.tangent2),i.tangent1.isRightOf(o)&&(o=i.tangent1),i.tangent2.isRightOf(o)&&(o=i.tangent2),new s(new r(0,0),n,o)},t.prototype.pointVelocityObstacle=function(t,e){var i=new r(0,0),n=e.subtract(t.getPosition()),o=t.Radius,a=i.subtract(n),c=a.magnitude();if(c<o)return null;var u=Math.acos(o/c),l=Math.atan2(a.y,a.x),h=l+u,g=new r(n.x+o*Math.cos(h),n.y+o*Math.sin(h)),d=l-u,f=new r(n.x+o*Math.cos(d),n.y+o*Math.sin(d));return new s(i,g,f)},t}(),u=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.init=function(t){},t.prototype.render=function(t){var e=this,i=800/this.cameraDist,n=t.getAgents(),o=t.getObstacles();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(i,0,0,i,this.xPan,this.yPan),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(-1e3,-500,2e3,1e3),this.context.strokeStyle="white",this.context.lineWidth=2,o.forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)})),n.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getDirection(),n=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=i.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(i.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),l=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,i){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1])},t.getPerspectiveProjectionMatrix=function(t,e,i,n){var o=1/Math.tan(t/2),r=1/(i-n);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(i+n)*r,-1,0,0,i*n*r*2,0])},t.multiplyMatrices=function(t,e){for(var i=new Float32Array(16),n=0;n<4;n++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*n+s]*e[4*s+o];i[4*n+o]=r}return i},t}(),h=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),g=function(){function t(){}return t.getVertices=function(t,e){var i=t/2,n=e/2;return[i,-n,0,0,0,1,i,n,0,0,0,1,-i,-n,0,0,0,1,-i,n,0,0,0,1]},t.indices=[1,2,0,1,3,2],t}(),d=function(){function t(){}return t.vertices=[-.92388,-.382683,1,-.9239,-.3827,0,-.92388,-.382683,0,-.9239,-.3827,0,-.707107,-.707107,1,-.7071,-.7071,0,-.707107,-.707107,0,-.7071,-.7071,0,-.382684,-.923879,1,-0,0,1,-.382684,-.923879,0,-.3827,-.9239,0,-0,-1,1,-0,0,1,-0,-1,0,0,-1,0,.382684,-.92388,1,-0,0,1,.382684,-.92388,0,.3827,-.9239,0,.707107,-.707107,1,-0,0,1,.707107,-.707107,0,.7071,-.7071,0,.92388,-.382683,1,-0,0,1,.92388,-.382683,0,.9239,-.3827,0,1,0,1,-0,0,1,1,0,0,1,0,0,.92388,.382683,1,-0,0,1,.92388,.382683,0,.9239,.3827,0,.707107,.707107,1,-0,0,1,.707107,.707107,0,.7071,.7071,0,.382684,.92388,1,-0,0,1,.382684,.92388,0,.3827,.9239,0,0,1,1,-0,0,1,0,1,0,0,1,0,-.382683,.92388,1,-0,0,1,-.382683,.92388,0,-.3827,.9239,0,-.707107,.707107,1,-0,0,1,-.707107,.707107,0,-.7071,.7071,0,-.92388,.382683,1,-0,0,1,-.92388,.382683,0,-.9239,.3827,0,-1,0,1,-0,0,1,-1,0,0,-1,0,0,.707107,.707107,1,.7071,.7071,0,.382684,.92388,1,.3827,.9239,0,-.92388,-.382683,1,-0,0,1,-.707107,-.707107,1,-0,0,1,0,1,1,0,1,0,-.382684,-.923879,1,-.3827,-.9239,0,-0,-1,1,0,-1,0,-.382683,.92388,1,-.3827,.9239,0,-.707107,.707107,1,-.7071,.7071,0,.707107,-.707107,1,.7071,-.7071,0,.92388,-.382683,1,.9239,-.3827,0,-.92388,.382683,1,-.9239,.3827,0,-1,0,1,-1,0,0,.92388,.382683,1,.9239,.3827,0,.382684,-.92388,1,.3827,-.9239,0,1,0,1,1,0,0],t.indices=[26,35,10,18,20,22,22,24,18,24,26,18,26,28,30,30,34,35,35,4,6,6,8,10,10,12,18,12,14,18,14,16,18,26,30,35,35,6,10,18,26,10,39,23,25,40,25,27,43,27,29,44,29,31,36,21,23,33,19,21,32,17,19,45,15,17,47,13,15,42,11,13,41,9,11,46,7,9,38,5,7,37,3,5,2,1,3,0,31,1,39,36,23,40,39,25,43,40,27,44,43,29,36,33,21,33,32,19,32,45,17,45,47,15,47,42,13,42,41,11,41,46,9,46,38,7,38,37,5,37,2,3,2,0,1,0,44,31],t}(),f=function(){function t(){}return t.getVertices=function(t){var e=t.Start.subtract(t.End),i=new r(-e.y,e.x).normalise();return[t.Start.x,t.Start.y,0,i.x,i.y,0,t.End.x,t.End.y,0,i.x,i.y,0,t.Start.x,t.Start.y,1,i.x,i.y,0,t.End.x,t.End.y,1,i.x,i.y,0,t.Start.x,t.Start.y,0,-i.x,-i.y,0,t.End.x,t.End.y,0,-i.x,-i.y,0,t.Start.x,t.Start.y,1,-i.x,-i.y,0,t.End.x,t.End.y,1,-i.x,-i.y,0]},t.indices=[1,2,0,1,3,2,5,4,6,5,6,7],t}(),p=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var i=l.getZRotationMatrix(e.xRot),n=l.getXRotationMatrix(e.yRot),o=l.multiplyMatrices(i,n);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var i=l.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,i);var n=l.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var i=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(i,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform float height;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * height,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,i),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.clearColor(.53,.76,.98,1),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1}),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.heightLoc=this.gl.getUniformLocation(this.program,"height"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var o=l.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),r=l.getTranslationMatrix(0,0,-this.cameraDist),s=l.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,o),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,r),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,s)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(i))}else console.error("WebGL not supported")}return t.prototype.init=function(t){var e=g.getVertices(2e3,1e3),i=t.getObstacles().filter((function(t){return t instanceof c})).map((function(t){return t})),n=i.map((function(t){return f.getVertices(t)})).reduce((function(t,e){return t.concat(e)}),[]),o=new Float32Array(h.vertices.concat(d.vertices).concat(e).concat(n));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=h.vertices.length/6,s=r+d.vertices.length/6,a=s+e.length/6,u=i.map((function(t,e){return f.indices.map((function(t){return t+a+8*e}))})).reduce((function(t,e){return t.concat(e)}),[]),l=new Uint16Array(h.indices.concat(d.indices.map((function(t){return t+r}))).concat(g.indices.map((function(t){return t+s}))).concat(u));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,l,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute)},t.prototype.render=function(t){var e=this,i=t.getAgents(),n=t.getObstacles();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),i.forEach((function(t){var i=t.getPosition();e.gl.uniform2f(e.posVecLoc,i.x,i.y);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new r(1,0)),e.gl.uniform2f(e.dirVecLoc,n.x,n.y),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,h.indices.length,e.gl.UNSIGNED_SHORT,0)}));var o=0;n.forEach((function(t){t instanceof a?(e.gl.uniform2f(e.posVecLoc,t.Position.x,t.Position.y),e.gl.uniform2f(e.dirVecLoc,1,0),e.gl.uniform1f(e.radiusLoc,t.Radius),e.gl.uniform1f(e.heightLoc,84),e.gl.uniform3f(e.baseColourLoc,1,1,1),e.gl.drawElements(e.gl.TRIANGLES,d.indices.length,e.gl.UNSIGNED_SHORT,h.indices.length*Uint16Array.BYTES_PER_ELEMENT)):o++})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,g.indices.length,this.gl.UNSIGNED_SHORT,(h.indices.length+d.indices.length)*Uint16Array.BYTES_PER_ELEMENT),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform1f(this.heightLoc,84),this.gl.uniform3f(this.baseColourLoc,1,1,1),this.gl.drawElements(this.gl.TRIANGLES,f.indices.length*o,this.gl.UNSIGNED_SHORT,(h.indices.length+d.indices.length+g.indices.length)*Uint16Array.BYTES_PER_ELEMENT)},t}(),m=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var i=t.getPosition().x-e,n=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,i,n,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(i){return t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var i=Math.floor(t.length/2),n=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(n.slice(0,i),!e),r=this.constructTree(n.slice(i+1,t.length),!e);return{agent:t[i],left:o,right:r}},t.prototype.rangeSearch=function(t,e,i,n,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().y>=i&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=i&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),y=function(){function t(t,e,i,n){this.Id=t,this.Radius=20,this._position=e,this._direction=n(e),this._goalPosition=i,this._getPreferredVelocity=n,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.getDistanceToGoal=function(){return this._position.subtract(this._goalPosition).magnitude()},t.prototype.isDone=function(){return this._isDone},t}(),v=function(){function t(){}return t.FromHsv=function(t,e,i){var n=(t*=6)-Math.floor(t),o=i*(1-e),r=i*(1-e*n),s=i*(1-e*(1-n));return 0<=t&&t<1?{r:255*i,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*i,b:255*o}:2<=t&&t<3?{r:255*o,g:255*i,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*i}:4<=t&&t<5?{r:255*s,g:255*o,b:255*i}:5<=t&&t<6?{r:255*i,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),x=(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.getColour=function(){return this._isDone?v.White:v.Green},e.prototype.update=function(t){if(!this._isDone){var e=this._getPreferredVelocity(this._position),i=60*t/3e3;e.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=e.multiply(i),this._position=this._position.add(this._direction))}},e}(y),_=function(){function t(){}return t.getClosestPointOnLine=function(t,e,i){var n=e.normalise(),o=i.subtract(t).dot(n);return t.add(n.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,i,n){var o=i.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;if(c<0)return 1/0;var u=Math.sqrt(c),l=(-s-u)/(2*r);if(l>0)return l;var h=(-s+u)/(2*r);return h>0?h:1/0},t.getLineLineIntersection=function(t,e,i,n){var o=(t.x-e.x)*(i.y-n.y)-(t.y-e.y)*(i.x-n.x),s=((e.x-t.x)*(t.y-i.y)-(e.y-t.y)*(t.x-i.x))/o;return new r(i.x+s*(n.x-i.x),i.y+s*(n.y-i.y))},t}(),b=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),P=function(t){function e(e,i,n,o){var r=t.call(this,e,i,n,o)||this;return r._isStuck=!1,r}return b(e,t),e.prototype.getColour=function(){return this._isDone?v.White:this._isStuck?v.Red:v.Green},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/3e3;if(n.magnitudeSqrd()<.1)this._isDone=!0;else{var r=this._position.add(n.normalise().multiply(25));this._isStuck=!1;for(var s=0;s<e.length;s++)if(this.collidesAgent(e[s],r))return void(this._isStuck=!0);for(s=0;s<i.length;s++)if(this.collidesObstacle(i[s],r))return void(this._isStuck=!0);this._direction=n.multiply(o),this._position=this._position.add(this._direction)}}},e.prototype.collidesAgent=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e.prototype.collidesObstacle=function(t,e){if(t instanceof a)return t.Position.subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius);if(t instanceof c){var i=_.getFirstRayCircleIntersection(e,this.Radius,t.Start,t.End.subtract(t.Start));return i>0&&i<1}},e}(y),M=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),S=function(t){function e(e,i,n,o){var r=t.call(this,e,i,n,o)||this;return r._colour=v.Green,r}return M(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e,i){if(!this._isDone){var n=this._getPreferredVelocity(this._position),o=60*t/2e3;if(n.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new r(0,0),void(this._colour=v.White);for(var s,u,l=!0,h=0;h<e.length;h++)if(null!=(M=this.getAgentVelocityObstacle(e[h]))&&M.contains(n)){l=!1,s=M,u=h;break}for(h=0;h<i.length;h++)if(null!=(M=i[h].getVelocityObstacle(this))&&M.contains(n)){l=!1,s=M,u=-1;break}if(l)return this._direction=n.multiply(o),this._position=this._position.add(this._direction),void(this._colour=v.Green);if(null!=s){var g=_.getClosestPointOnLine(s.vertex,s.tangent1,n),d=_.getClosestPointOnLine(s.vertex,s.tangent2,n),f=!0,p=!0;for(h=0;h<e.length;h++)h!=u&&(null!=(M=this.getAgentVelocityObstacle(e[h]))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1));for(h=0;h<i.length;h++)null!=(M=i[h].getVelocityObstacle(this))&&M.contains(g)&&(f=!1),null!=M&&M.contains(g)&&(p=!1);if(f&&p?g.subtract(n).magnitudeSqrd()<d.subtract(n).magnitudeSqrd()?this._direction=g.multiply(o):this._direction=d.multiply(o):f?this._direction=g.multiply(o):p&&(this._direction=d.multiply(o)),f||p)return this._position=this._position.add(this._direction),void this.setColour(n)}var m=1/0,y=new r(0,0);for(h=0;h<100;h++){for(var x=new r(0,0).sample(1),w=1/0,b=0;b<e.length;b++){var P=e[b];(null==(M=this.getAgentVelocityObstacle(P))||M.contains(x))&&(S=_.getFirstRayCircleIntersection(new r(0,0),this.Radius+P.Radius,this._position.subtract(P.getPosition()),x.subtract(P.getDirection())))<w&&(w=S)}for(b=0;b<i.length;b++){var M;if((P=i[b])instanceof a)(null==(M=P.getVelocityObstacle(this))||M.contains(x))&&(S=_.getFirstRayCircleIntersection(P.Position,this.Radius+P.Radius,this._position,x))<w&&(w=S);else if(P instanceof c){var S;(S=(_.getLineLineIntersection(P.Start,P.End,this._position,this._position.add(x.normalise().multiply(this.Radius))).subtract(this._position).magnitude()-this.Radius)/x.magnitude())<w&&(w=S)}}w<10&&(w=0);var R=200/w+n.subtract(x).magnitude();R<m&&(m=R,y=x)}this._direction=y.multiply(o),this._position=this._position.add(this._direction),this.setColour(n)}},e.prototype.getAgentVelocityObstacle=function(t){var e=t.getDirection(),i=t.getPosition().subtract(this._position).add(e),n=t.Radius+this.Radius,o=e.subtract(i),a=o.magnitude();if(a<n)return null;var c=Math.acos(n/a),u=Math.atan2(o.y,o.x),l=u+c,h=new r(i.x+n*Math.cos(l),i.y+n*Math.sin(l)),g=u-c,d=new r(i.x+n*Math.cos(g),i.y+n*Math.sin(g));return new s(e,h,d)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),i=e>1?0:(1-e)/3;this._colour=v.FromHsv(i,1,1)},e}(y),R=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),E=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return R(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=e.add(i).divide(2),o=t.getPosition().subtract(this._position).add(i),a=t.Radius+this.Radius,c=i.subtract(o),u=c.magnitude();if(u<a)return null;var l=Math.acos(a/u),h=Math.atan2(c.y,c.x),g=h+l,d=new r(o.x+a*Math.cos(g),o.y+a*Math.sin(g)),f=h-l,p=new r(o.x+a*Math.cos(f),o.y+a*Math.sin(f));return new s(n,d,p)},e}(S),L=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),A=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return L(e,t),e.prototype.getAgentVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=i,o=e.add(i).divide(2),a=t.getPosition().subtract(this._position),c=a.add(i),u=t.Radius+this.Radius,l=i.subtract(c),h=l.magnitude();if(h<u)return null;var g,d=Math.acos(u/h),f=Math.atan2(l.y,l.x),p=f+d,m=new r(c.x+u*Math.cos(p),c.y+u*Math.sin(p)),y=f-d,v=new r(c.x+u*Math.cos(y),c.y+u*Math.sin(y));return g=(a.x-i.x)*(e.y-i.y)-(a.y-i.y)*(e.x-i.x)>0?_.getLineLineIntersection(n,n.add(m),o,o.add(v)):_.getLineLineIntersection(n,n.add(v),o,o.add(m)),new s(g,m,v)},e}(S),T=function(){function t(){}return t.getAgent=function(t,e,i,n,o){switch(t){case"BasicAgent":return new w(e,i,n,o);case"StopAgent":return new P(e,i,n,o);case"VOAgent":return new S(e,i,n,o);case"RVOAgent":return new E(e,i,n,o);case"HRVOAgent":return new A(e,i,n,o);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),O=function(){function t(){}return t.getConfiguration=function(t,e,i,n,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,i,n,o);case"RandomToLine":return this.RandomToLine(e,i,n,o);case"CircleToCircle":return this.CircleToCircle(e,i,n,o);case"GridToGrid":return this.GridToGrid(e,i,n,o);case"Bollards":return this.Bollards(e,i,n,o);case"Bottleneck":return this.Bottleneck(e,i,n,o);case"BottleneckWithNav":return this.BottleneckWithNav(e,i,n,o);case"Slalom":return this.Slalom(e,i,n,o);case"SlalomWithNav":return this.SlalomWithNav(e,i,n,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))})),a=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))}));n=Math.min(s.length,a.length);for(var c=0;c<n;c++){var u=T.getAgent(t,c,s[c],a[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new r(e/2,i/2))}));n=s.length;for(var a=0;a<n;a++){var c=new r(((a+1)/(n+1)-.5)*e,0),u=T.getAgent(t,a,s[a],c,this.preferredVelocityFromGoalPosition(c));o.push(u)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,i,n){for(var o=[],s=i/2-25,a=0;a<n;a++){var c=2*Math.PI*a/n,u=new r(s*Math.cos(c),s*Math.sin(c)),l=new r(s*Math.cos(c+Math.PI),s*Math.sin(c+Math.PI)),h=T.getAgent(t,a,u,l,this.preferredVelocityFromGoalPosition(l));o.push(h)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,i,n){for(var o=[],s=Math.ceil(Math.sqrt(n/2)),a=90,c=30-e/2,u=(s-1)/2*a,l=0;l<n;l++){var h=Math.floor(l/2),g=Math.floor(h/s),d=h%s;if(l%2==0){var f=new r(c+(s-1-d)*a,u-g*a),p=new r(-c-d*a,u-g*a),m=T.getAgent(t,l,f,p,this.preferredVelocityFromGoalPosition(p));o.push(m)}else f=new r(-c-(s-1-d)*a,u-g*a),p=new r(c+d*a,u-g*a),m=T.getAgent(t,l,f,p,this.preferredVelocityFromGoalPosition(p)),o.push(m)}return{agents:o,obstacles:[]}},t.Bollards=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var c=0;c<n;c++){var u=s[c].add(new r(e/2+200,0)),l=T.getAgent(t,c,s[c],u,this.preferredVelocityFromGoalPosition(u));o.push(l)}var h=[];for(c=0;c<5;c++)h.push(new a(new r(0,120*c-240),20));return{agents:o,obstacles:h}},t.Bottleneck=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var a=0;a<n;a++){var u=s[a].add(new r(e/2+200,0)),l=T.getAgent(t,a,s[a],u,this.preferredVelocityFromGoalPosition(u));o.push(l)}var h=[];return h.push(new c(new r(0,-500),new r(0,-100))),h.push(new c(new r(0,500),new r(0,100))),{agents:o,obstacles:h}},t.BottleneckWithNav=function(t,e,i,n){var o=this,s=[],a=this.poissonDiskSample(e/2-200,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=a.length;for(var u=function(i){var n=a[i].add(new r(e/2+200,0)),c=T.getAgent(t,i,a[i],n,(function(t){return t.x<0?t.magnitudeSqrd()>Math.pow(90,2)?o.preferredVelocityFromGoalPosition(new r(0,0))(t):new r(1,0):o.preferredVelocityFromGoalPosition(n)(t)}));s.push(c)},l=0;l<n;l++)u(l);var h=[];return h.push(new c(new r(0,-500),new r(0,-100))),h.push(new c(new r(0,500),new r(0,100))),{agents:s,obstacles:h}},t.Slalom=function(t,e,i,n){var o=[],s=this.poissonDiskSample(e/2-250,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=s.length;for(var a=i/2-200,u=0;u<n;u++){var l=s[u].add(new r(e/2+250,0)),h=T.getAgent(t,u,s[u],l,this.preferredVelocityFromGoalPosition(l));o.push(h)}var g=[];return g.push(new c(new r(-200,500),new r(-200,-a))),g.push(new c(new r(0,-500),new r(0,a))),g.push(new c(new r(200,500),new r(200,-a))),{agents:o,obstacles:g}},t.SlalomWithNav=function(t,e,i,n){var o=this,s=[],a=this.poissonDiskSample(e/2-250,i-40,n,80).map((function(t){return t.subtract(new r(e/2,i/2-20))}));n=a.length;for(var u=i/2-200,l=u+100,h=function(i){var n=new r(a[i].x+e/2+250,-a[i].y),c=T.getAgent(t,i,a[i],n,(function(t){return t.x<=-200?t.subtract(new r(-200,-l)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(-200,-l))(t):t.x<=0?t.subtract(new r(0,l)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(0,l))(t):t.x<=200?t.subtract(new r(200,-l)).magnitudeSqrd()<Math.pow(80,2)?new r(1,0):o.preferredVelocityFromGoalPosition(new r(200,-l))(t):o.preferredVelocityFromGoalPosition(n)(t)}));s.push(c)},g=0;g<n;g++)h(g);var d=[];return d.push(new c(new r(-200,500),new r(-200,-u))),d.push(new c(new r(0,-500),new r(0,u))),d.push(new c(new r(200,500),new r(200,-u))),{agents:s,obstacles:d}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var i=t.subtract(e);return i.magnitudeSqrd()<1?i:i.normalise()}},t.poissonDiskSample=function(t,e,i,n){for(var o=[],s=function(){for(var s,c=!0,u=0;c;)if(u++,c=!1,s=new r(t*Math.random(),e*Math.random()),o.forEach((function(t){s.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(c=!0)})),u>1e3)return console.warn("Failed to find poisson disk sample (placed "+a+"/"+i+")."),{value:o};o.push(s)},a=0;a<i;a++){var c=s();if("object"==typeof c)return c.value}return o},t}(),I=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d")}return t.prototype.init=function(t){var e=this;this._done=!1,this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height),this.context.strokeStyle="white",this.context.lineWidth=2,t.getObstacles().forEach((function(t){t instanceof a?e.drawCircleObstacle(t):t instanceof c&&e.drawLineObstacle(t)}))},t.prototype.render=function(t){var e=this,i=t.getAgents();i.forEach((function(t){e.drawAgent(t)})),t.isDone()&&!this._done&&(this._done=!0,i.forEach((function(t){e.drawAgentFinal(t)})))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.fillRect(e.x,-e.y,1,1),this.context.stroke()},t.prototype.drawAgentFinal=function(t){var e=t.getPosition(),i=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI),this.context.stroke()},t.prototype.drawCircleObstacle=function(t){this.context.beginPath(),this.context.arc(t.Position.x,-t.Position.y,t.Radius,0,2*Math.PI);var e=t.Radius*Math.SQRT1_2;this.context.moveTo(t.Position.x-e,t.Position.y-e),this.context.lineTo(t.Position.x+e,t.Position.y+e),this.context.moveTo(t.Position.x+e,t.Position.y-e),this.context.lineTo(t.Position.x-e,t.Position.y+e),this.context.stroke()},t.prototype.drawLineObstacle=function(t){this.context.beginPath(),this.context.moveTo(t.Start.x,-t.Start.y),this.context.lineTo(t.End.x,-t.End.y),this.context.stroke()},t}(),D=function(){function t(){}return t.round3dp=function(t){return Math.round(1e3*(t+Number.EPSILON))/1e3},t.sum=function(t){return t.reduce((function(t,e){return t+e}),0)},t.quartiles=function(t){var e=t.slice().sort((function(t,e){return t-e})),i=e.length,n=Math.ceil(i/2)-1,o=i%2==0?(e[n]+e[n+1])/2:e[n];return{minimum:e[0],lowerQuart:e[Math.ceil(.25*i)-1],median:o,upperQuart:e[Math.ceil(.75*i)-1],maximum:e[i-1]}},t}(),C=function(){function t(){this._logging=!1}return t.prototype.start=function(t){var e=this;console.log("------- Started logging -------"),this._logging=!0,this._startTime=performance.now(),this._timeStep=0,this._frameTimes=[],this._agentCollisions=[],this._obstacleCollisions=[],this._pathLengths=[],this._startPositions=[],t.forEach((function(t){e._pathLengths[t.Id]=0,e._startPositions[t.Id]=t.getPosition()}))},t.prototype.log=function(t,e,i){var n=this;this._logging&&(this._frameTimes[this._timeStep]=D.round3dp(i),this._agentCollisions[this._timeStep]=0,this._obstacleCollisions[this._timeStep]=0,t.forEach((function(i){t.getNeighboursInRangeRectilinear(i,100).forEach((function(t){t.Id<i.Id&&t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&n._agentCollisions[n._timeStep]++})),e.forEach((function(t){if(t instanceof c){var e=_.getFirstRayCircleIntersection(i.getPosition(),i.Radius,t.Start,t.End.subtract(t.Start));e>0&&e<1&&n._obstacleCollisions[n._timeStep]++}else t instanceof a&&t.Position.subtract(i.getPosition()).magnitudeSqrd()<Math.pow(t.Radius+i.Radius,2)&&n._obstacleCollisions[n._timeStep]++})),i.isDone()||(n._pathLengths[i.Id]+=i.getDirection().magnitude())})),this._timeStep++)},t.prototype.stop=function(t){var e=this;if(this._logging){console.log("Total time (ms): "+(performance.now()-this._startTime).toFixed(3)),this._logging=!1;var i=D.sum(this._frameTimes.slice(1)),n=i/this._timeStep,o=D.quartiles(this._frameTimes.slice(1)),r=D.sum(this._agentCollisions),s=D.sum(this._obstacleCollisions),a=[];t.forEach((function(t){a[t.Id]=e._pathLengths[t.Id]/e._startPositions[t.Id].subtract(t.getPosition()).magnitude()-1}));var c=D.sum(a)/t.getAll().length,u=D.quartiles(a);console.log("Timesteps: "+this._timeStep),console.log("Total frame time (ms): "+i.toFixed(3)),console.log("Average frame time (ms): "+n.toFixed(3)),console.log("Min: "+o.minimum),console.log(" LQ: "+o.lowerQuart),console.log("Med: "+o.median),console.log(" UQ: "+o.upperQuart),console.log("Max: "+o.maximum),console.log("Total agent collisions: "+r),r>0&&console.log("Agent collisions per frame: "+(r/this._timeStep).toFixed(3)),console.log("Total obstacle collisions: "+s),s>0&&console.log("Obstacle collisions per frame: "+(s/this._timeStep).toFixed(3)),console.log("Average overhead: "+c),console.log("Min: "+u.minimum),console.log(" LQ: "+u.lowerQuart),console.log("Med: "+u.median),console.log(" UQ: "+u.upperQuart),console.log("Max: "+u.maximum)}},t}(),F=document.getElementById("config"),V=document.getElementById("agentType"),B=document.getElementById("range"),k=document.getElementById("numberOfAgents"),N=document.getElementById("canvas2d"),G=document.getElementById("canvas3d"),U=document.getElementById("canvasTrace"),j=document.getElementById("framerate"),q=document.getElementById("playButton"),Y=document.getElementById("stepButton"),W=new o(new m([])),X=new u(N),Q=new p(G),H=new I(U),z=X,K=new C,Z=!1,J=200;function $(){this.reconfigure();var t=0,e=0,i=0;window.requestAnimationFrame((function n(){var o=performance.now(),r=o-t;t=o,Z&&(W.update(r,J),K.log(W.getAgents(),W.getObstacles(),r)),W.isDone()&&(ot(),K.stop(W.getAgents())),z.render(W),i++,o-e>=250&&(j.textContent="FPS: "+(1e3*i/(o-e)).toFixed(1),i=0,e=o),window.requestAnimationFrame(n)}))}function tt(t){switch(t){case"2D":document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=X,N.style.display="block",G.style.display="none",U.style.display="none";break;case"3D":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),z=Q,N.style.display="none",G.style.display="block",U.style.display="none";break;case"Trace":document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),z=H,N.style.display="none",G.style.display="none",U.style.display="block";break;default:throw new Error('Unknown view "'+t+'"')}z.init(W)}function et(){(Z=!Z)?(K.start(W.getAgents()),K.log(W.getAgents(),W.getObstacles(),0),q.textContent="Pause",Y.disabled=!0):(K.stop(W.getAgents()),q.textContent="Play",Y.disabled=!1)}function it(){W.update(1e3/60,J),W.isDone()&&ot()}function nt(){var t,e;Z=!1,q.textContent="Play",q.disabled=!1,Y.disabled=!1;var i=F.value,n=V.value;J=null!==(t=parseInt(B.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(k.value))&&void 0!==e?e:0;W.init(O.getConfiguration(i,n,N.width,N.height,o)),z.init(W)}function ot(){Z=!1,q.disabled=!0,Y.disabled=!0}}},e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}return i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(491)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,