var CrowdSimulator;CrowdSimulator=(()=>{"use strict";var t={327:(t,e,i)=>{i.r(e),i.d(e,{init:()=>z,playPause:()=>Z,reconfigure:()=>Q,step:()=>J,switchView:()=>K});var n,o=function(){function t(t){this._agents=t}return t.prototype.init=function(t){this._agents.update(t.agents),this._obstacles=t.obstacles},t.prototype.update=function(t,e){var i=this;this._agents.forEach((function(n){n.update(t,i._agents.getNeighboursInRangeEuclidean(n,e))})),this._agents.update(this._agents.getAll())},t.prototype.getAgents=function(){return this._agents},t.prototype.getObstacles=function(){return this._obstacles},t}(),r=function(){function t(t){var e=this;this.cameraDist=800,this.mouseDown=function(t){e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseUp=function(t){e.drag=!1,t.preventDefault()},this.mouseMove=function(t){if(!e.drag)return!1;e.xPan+=t.pageX-e.oldX,e.yPan+=t.pageY-e.oldY,e.oldX=t.pageX,e.oldY=t.pageY},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<.1&&(e.cameraDist=.1),t.preventDefault()},this.canvas=t,this.context=this.canvas.getContext("2d"),this.xPan=this.canvas.width/2,this.yPan=this.canvas.height/2,this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1})}return t.prototype.render=function(t){var e=this,i=800/this.cameraDist,n=t.getAgents();this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.setTransform(i,0,0,i,this.xPan,this.yPan),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.context.canvas.width,.55*-this.context.canvas.height,1.1*this.context.canvas.width,1.1*this.context.canvas.height),n.forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getDirection(),n=t.getColour();this.context.beginPath(),this.context.strokeStyle="rgb("+n.r+", "+n.g+", "+n.b+")",this.context.lineWidth=2,this.context.arc(e.x,-e.y,t.Radius,0,2*Math.PI);var o=i.magnitude();if(0!==o){this.context.moveTo(e.x,-e.y);var r=e.add(i.divide(o).multiply(t.Radius));this.context.lineTo(r.x,-r.y)}this.context.stroke()},t}(),s=function(){function t(t,e){this.x=t,this.y=e}return t.prototype.copy=function(e){return new t(e.x,e.y)},t.prototype.add=function(e){return new t(this.x+e.x,this.y+e.y)},t.prototype.subtract=function(e){return new t(this.x-e.x,this.y-e.y)},t.prototype.multiply=function(e){return new t(this.x*e,this.y*e)},t.prototype.divide=function(e){return new t(this.x/e,this.y/e)},t.prototype.dot=function(t){return this.x*t.x+this.y*t.y},t.prototype.magnitudeSqrd=function(){return Math.pow(this.x,2)+Math.pow(this.y,2)},t.prototype.magnitude=function(){return Math.sqrt(this.magnitudeSqrd())},t.prototype.normalise=function(){var e=this.magnitude();return 0==e?new t(0,0):this.divide(e)},t.prototype.sample=function(e){var i=Math.sqrt(Math.random())*e,n=2*Math.PI*Math.random();return new t(this.x+i*Math.cos(n),this.y+i*Math.sin(n))},t}(),a=function(){function t(){}return t.getIdentityMatrix=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])},t.getXRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([1,0,0,0,0,i,e,0,0,-e,i,0,0,0,0,1])},t.getYRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,0,-e,0,0,1,0,0,e,0,i,0,0,0,0,1])},t.getZRotationMatrix=function(t){var e=Math.sin(t),i=Math.cos(t);return new Float32Array([i,e,0,0,-e,i,0,0,0,0,1,0,0,0,0,1])},t.getTranslationMatrix=function(t,e,i){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,e,i,1])},t.getPerspectiveProjectionMatrix=function(t,e,i,n){var o=1/Math.tan(t/2),r=1/(i-n);return new Float32Array([o/e,0,0,0,0,o,0,0,0,0,(i+n)*r,-1,0,0,i*n*r*2,0])},t.multiplyMatrices=function(t,e){for(var i=new Float32Array(16),n=0;n<4;n++)for(var o=0;o<4;o++){for(var r=0,s=0;s<4;s++)r+=t[4*n+s]*e[4*s+o];i[4*n+o]=r}return i},t}(),c=function(){function t(){}return t.vertices=[.288463,-.314,1.736123,0,0,-1,.288463,-.314,3.396424,0,0,1,-.288463,-.314,1.736123,0,0,-1,-.288463,-.314,3.396424,0,0,1,.288463,.314,1.736123,0,0,-1,.288463,.314,3.396424,0,0,1,-.288463,.314,1.736123,0,0,-1,-.288463,.314,3.396424,0,0,1,-.189141,.184727,4.025087,0,1,0,-.189141,.184727,3.493465,0,1,0,.254771,.184727,4.025087,0,1,0,.254771,.184727,3.493465,0,1,0,-.189141,-.184727,4.025087,0,0,1,-.189141,-.184727,3.493465,0,-1,0,.254771,-.184727,4.025087,0,0,1,.254771,-.184727,3.493465,1,0,0,.15159,.104367,.322361,0,0,-1,.15159,.104367,1.650607,0,0,1,-.15159,.104367,.322361,0,0,-1,-.15159,.104367,1.650607,0,0,1,.15159,.407546,.322361,0,0,-1,.15159,.407546,1.650607,0,0,1,-.15159,.407546,.322361,0,0,-1,-.15159,.407546,1.650607,0,0,1,.411838,.104367,0,1,0,0,-.233453,.104367,0,-1,0,0,.411838,.407546,0,0,1,0,-.233453,.407546,0,0,1,0,.411838,.104367,.227881,1,0,0,-.233453,.104367,.227881,-1,0,0,.411838,.407546,.227881,0,1,0,-.233453,.407546,.227881,0,1,0,.045505,.376526,1.797839,0,0,-1,.045505,.376526,3.247407,0,0,1,-.155762,.376526,1.797839,0,0,-1,-.155762,.376526,3.247407,0,0,1,.045505,.588396,1.797839,0,0,-1,.045505,.588396,3.247407,0,0,1,-.155762,.588396,1.797839,0,0,-1,-.155762,.588396,3.247407,0,0,1,.15159,-.104367,.322361,0,0,-1,.15159,-.104367,1.650607,0,0,1,-.15159,-.104367,.322361,0,0,-1,-.15159,-.104367,1.650607,0,0,1,.15159,-.407546,.322361,0,0,-1,.15159,-.407546,1.650607,0,0,1,-.15159,-.407546,.322361,0,0,-1,-.15159,-.407546,1.650607,0,0,1,.411838,-.104367,0,1,0,0,-.233453,-.104367,0,-1,0,0,.411838,-.407546,0,0,-1,0,-.233453,-.407546,0,0,-1,0,.411838,-.104367,.227881,1,0,0,-.233453,-.104367,.227881,-1,0,0,.411838,-.407546,.227881,0,-1,0,-.233453,-.407546,.227881,0,-1,0,.045505,-.376526,1.797839,0,0,-1,.045505,-.376526,3.247407,0,0,1,-.155762,-.376526,1.797839,0,0,-1,-.155762,-.376526,3.247407,0,0,1,.045505,-.588396,1.797839,0,0,-1,.045505,-.588396,3.247407,0,0,1,-.155762,-.588396,1.797839,0,0,-1,-.155762,-.588396,3.247407,0,0,1,-.288463,-.314,1.736123,0,-1,0,-.288463,-.314,1.736123,-1,0,0,.288463,-.314,1.736123,0,-1,0,.288463,-.314,1.736123,1,0,0,.288463,-.314,3.396424,0,-1,0,.288463,-.314,3.396424,1,0,0,-.288463,-.314,3.396424,0,-1,0,-.288463,-.314,3.396424,-1,0,0,-.288463,.314,1.736123,-1,0,0,-.288463,.314,1.736123,0,1,0,-.288463,.314,3.396424,-1,0,0,-.288463,.314,3.396424,0,1,0,.288463,.314,1.736123,0,1,0,.288463,.314,1.736123,1,0,0,.288463,.314,3.396424,0,1,0,.288463,.314,3.396424,1,0,0,.254771,.184727,4.025087,1,0,0,.254771,.184727,4.025087,0,0,1,.254771,-.184727,4.025087,1,0,0,.254771,-.184727,4.025087,0,-1,0,.254771,-.184727,3.493465,0,0,-1,.254771,-.184727,3.493465,0,-1,0,.254771,.184727,3.493465,0,0,-1,.254771,.184727,3.493465,1,0,0,-.189141,.184727,4.025087,0,0,1,-.189141,.184727,4.025087,-1,0,0,-.189141,.184727,3.493465,-1,0,0,-.189141,.184727,3.493465,0,0,-1,-.189141,-.184727,4.025087,-1,0,0,-.189141,-.184727,4.025087,0,-1,0,-.189141,-.184727,3.493465,0,0,-1,-.189141,-.184727,3.493465,-1,0,0,-.15159,.104367,.322361,0,-1,0,-.15159,.104367,.322361,-1,0,0,.15159,.104367,.322361,0,-1,0,.15159,.104367,.322361,1,0,0,.15159,.104367,1.650607,0,-1,0,.15159,.104367,1.650607,1,0,0,-.15159,.104367,1.650607,0,-1,0,-.15159,.104367,1.650607,-1,0,0,-.15159,.407546,.322361,-1,0,0,-.15159,.407546,.322361,0,1,0,-.15159,.407546,1.650607,-1,0,0,-.15159,.407546,1.650607,0,1,0,.15159,.407546,.322361,0,1,0,.15159,.407546,.322361,1,0,0,.15159,.407546,1.650607,0,1,0,.15159,.407546,1.650607,1,0,0,-.233453,.104367,0,0,0,-1,-.233453,.104367,0,0,-1,0,.411838,.104367,0,0,0,-1,.411838,.104367,0,0,-1,0,-.233453,.407546,0,0,0,-1,-.233453,.407546,0,-1,0,0,.411838,.407546,0,0,0,-1,.411838,.407546,0,1,0,0,-.233453,.104367,.227881,0,0,1,-.233453,.104367,.227881,0,-1,0,.411838,.104367,.227881,0,0,1,.411838,.104367,.227881,0,-1,0,-.233453,.407546,.227881,0,0,1,-.233453,.407546,.227881,-1,0,0,.411838,.407546,.227881,0,0,1,.411838,.407546,.227881,1,0,0,-.155762,.376526,1.797839,0,-1,0,-.155762,.376526,1.797839,-1,0,0,.045505,.376526,1.797839,0,-1,0,.045505,.376526,1.797839,1,0,0,.045505,.376526,3.247407,0,-1,0,.045505,.376526,3.247407,1,0,0,-.155762,.376526,3.247407,0,-1,0,-.155762,.376526,3.247407,-1,0,0,-.155762,.588396,1.797839,-1,0,0,-.155762,.588396,1.797839,0,1,0,-.155762,.588396,3.247407,-1,0,0,-.155762,.588396,3.247407,0,1,0,.045505,.588396,1.797839,0,1,0,.045505,.588396,1.797839,1,0,0,.045505,.588396,3.247407,0,1,0,.045505,.588396,3.247407,1,0,0,-.15159,-.104367,.322361,0,1,0,-.15159,-.104367,.322361,-1,0,0,.15159,-.104367,.322361,0,1,0,.15159,-.104367,.322361,1,0,0,.15159,-.104367,1.650607,0,1,0,.15159,-.104367,1.650607,1,0,0,-.15159,-.104367,1.650607,0,1,0,-.15159,-.104367,1.650607,-1,0,0,-.15159,-.407546,.322361,-1,0,0,-.15159,-.407546,.322361,0,-1,0,-.15159,-.407546,1.650607,-1,0,0,-.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,.322361,0,-1,0,.15159,-.407546,.322361,1,0,0,.15159,-.407546,1.650607,0,-1,0,.15159,-.407546,1.650607,1,0,0,-.233453,-.104367,0,0,0,-1,-.233453,-.104367,0,0,1,0,.411838,-.104367,0,0,0,-1,.411838,-.104367,0,0,1,0,-.233453,-.407546,0,0,0,-1,-.233453,-.407546,0,-1,0,0,.411838,-.407546,0,0,0,-1,.411838,-.407546,0,1,0,0,-.233453,-.104367,.227881,0,0,1,-.233453,-.104367,.227881,0,1,0,.411838,-.104367,.227881,0,0,1,.411838,-.104367,.227881,0,1,0,-.233453,-.407546,.227881,0,0,1,-.233453,-.407546,.227881,-1,0,0,.411838,-.407546,.227881,0,0,1,.411838,-.407546,.227881,1,0,0,-.155762,-.376526,1.797839,0,1,0,-.155762,-.376526,1.797839,-1,0,0,.045505,-.376526,1.797839,0,1,0,.045505,-.376526,1.797839,1,0,0,.045505,-.376526,3.247407,0,1,0,.045505,-.376526,3.247407,1,0,0,-.155762,-.376526,3.247407,0,1,0,-.155762,-.376526,3.247407,-1,0,0,-.155762,-.588396,1.797839,-1,0,0,-.155762,-.588396,1.797839,0,-1,0,-.155762,-.588396,3.247407,-1,0,0,-.155762,-.588396,3.247407,0,-1,0,.045505,-.588396,1.797839,0,-1,0,.045505,-.588396,1.797839,1,0,0,.045505,-.588396,3.247407,0,-1,0,.045505,-.588396,3.247407,1,0,0],t.indices=[68,64,66,65,74,72,75,76,73,79,67,77,6,0,2,3,5,7,91,84,94,92,90,95,83,13,85,80,15,87,12,81,88,8,11,9,100,96,98,103,104,97,107,108,105,111,99,109,22,16,18,19,21,23,116,114,112,122,124,120,123,113,115,127,24,119,29,117,25,31,26,27,132,128,130,135,136,129,139,140,137,143,131,141,38,32,34,35,37,39,144,148,146,152,151,145,156,155,153,147,159,157,40,46,42,45,43,47,162,164,160,172,170,168,161,171,163,48,175,167,165,53,49,50,55,51,176,180,178,184,183,177,188,187,185,179,191,189,56,62,58,61,59,63,68,70,64,65,71,74,75,78,76,79,69,67,6,4,0,3,1,5,91,86,84,92,89,90,83,93,13,80,82,15,12,14,81,8,10,11,100,102,96,103,106,104,107,110,108,111,101,99,22,20,16,19,17,21,116,118,114,122,126,124,123,121,113,127,28,24,29,125,117,31,30,26,132,134,128,135,138,136,139,142,140,143,133,131,38,36,32,35,33,37,144,150,148,152,154,151,156,158,155,147,149,159,40,44,46,45,41,43,162,166,164,172,174,170,161,169,171,48,52,175,165,173,53,50,54,55,176,182,180,184,186,183,188,190,187,179,181,191,56,60,62,61,57,59],t}(),u=function(){function t(){}return t.getVertices=function(t,e){var i=t/2,n=e/2;return[i,-n,0,0,0,1,i,n,0,0,0,1,-i,-n,0,0,0,1,-i,n,0,0,0,1]},t.getIndices=function(t){return void 0===t&&(t=0),[1,2,0,1,3,2].map((function(e){return e+t}))},t}(),h=function(){function t(t){var e=this;if(this.xRot=0,this.yRot=0,this.cameraDist=800,this.mouseDown=function(t){return e.drag=!0,e.oldX=t.pageX,e.oldY=t.pageY,t.preventDefault(),!1},this.mouseUp=function(t){return e.drag=!1,t.preventDefault(),!1},this.mouseMove=function(t){if(!e.drag)return!1;e.xRot+=2*(t.pageX-e.oldX)*Math.PI/e.canvas.width,e.yRot+=2*(t.pageY-e.oldY)*Math.PI/e.canvas.height,e.oldX=t.pageX,e.oldY=t.pageY,e.yRot>0&&(e.yRot=0),e.yRot<-Math.PI&&(e.yRot=-Math.PI);var i=a.getZRotationMatrix(e.xRot),n=a.getXRotationMatrix(e.yRot),o=a.multiplyMatrices(i,n);return e.gl.uniformMatrix4fv(e.worldMatLoc,!1,o),t.preventDefault(),!1},this.mouseScroll=function(t){e.cameraDist+=t.deltaY,e.cameraDist<0&&(e.cameraDist=0);var i=a.getTranslationMatrix(0,0,-e.cameraDist);e.gl.uniformMatrix4fv(e.viewMatLoc,!1,i);var n=a.getPerspectiveProjectionMatrix(Math.PI/180*45,e.canvas.width/e.canvas.height,.1,e.cameraDist+2e3);return e.gl.uniformMatrix4fv(e.projMatLoc,!1,n),t.preventDefault(),!1},this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl){var i=this.gl.createShader(this.gl.VERTEX_SHADER),n=this.gl.createShader(this.gl.FRAGMENT_SHADER);if(this.gl.shaderSource(i,"\n  precision mediump float;\n  attribute vec3 vertPosition;\n  attribute vec3 vertNormal;\n  varying vec3 fragColour;\n\n  uniform mat4 projMat;\n  uniform mat4 viewMat;\n  uniform mat4 worldMat;\n\n  uniform vec2 position;\n  uniform vec2 direction;\n  uniform float radius;\n  uniform vec3 baseColour;\n\n  void main()\n  {\n    mediump vec3 ambient = vec3(0.26, 0.38, 0.49);\n    mediump vec3 lightColour = vec3(1.0, 1.0, 0.8);\n    mediump vec3 lightDirection = normalize(vec3(-0.2, -0.3, 1.0));\n\n    mediump vec3 rotatedVert = vec3(vertPosition.x * direction.x - vertPosition.y * direction.y,\n                                    vertPosition.x * direction.y + vertPosition.y * direction.x,\n                                    vertPosition.z);\n                                    \n    gl_Position = projMat * viewMat * worldMat * vec4(rotatedVert.x * radius + position.x,\n                                                      rotatedVert.y * radius + position.y,\n                                                      rotatedVert.z * radius,\n                                                      1.0);\n    \n    mediump vec3 rotatedNormal = vec3(vertNormal.x * direction.x - vertNormal.y * direction.y,\n                                      vertNormal.x * direction.y + vertNormal.y * direction.x,\n                                      vertNormal.z);\n    \n    mediump vec3 directional = lightColour * max(dot(rotatedNormal, lightDirection), 0.0);\n    fragColour = (ambient + directional) * baseColour;\n  }\n"),this.gl.shaderSource(n,"\n  precision mediump float;\n  varying vec3 fragColour;\n\n  void main()\n  {\n    gl_FragColor = vec4(fragColour, 1);\n  }\n"),this.gl.compileShader(i),this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))if(this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))if(this.program=this.gl.createProgram(),this.gl.attachShader(this.program,i),this.gl.attachShader(this.program,n),this.gl.linkProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.LINK_STATUS))if(this.gl.validateProgram(this.program),this.gl.getProgramParameter(this.program,this.gl.VALIDATE_STATUS)){this.gl.useProgram(this.program),this.gl.enable(this.gl.DEPTH_TEST),this.gl.enable(this.gl.CULL_FACE),this.gl.frontFace(this.gl.CCW),this.gl.cullFace(this.gl.BACK),this.gl.clearColor(.53,.76,.98,1),this.canvas.addEventListener("mousedown",this.mouseDown,!1),this.canvas.addEventListener("mouseup",this.mouseUp,!1),this.canvas.addEventListener("mouseout",this.mouseUp,!1),this.canvas.addEventListener("mousemove",this.mouseMove,!1),this.canvas.addEventListener("wheel",this.mouseScroll,{passive:!1});var o=new Float32Array(c.vertices.concat(u.getVertices(1.1*t.width,1.1*t.height)));this.VertexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.VertexBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,o,this.gl.STATIC_DRAW);var r=new Uint16Array(c.indices.concat(u.getIndices(c.vertices.length/6)));this.IndexBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.IndexBuffer),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,r,this.gl.STATIC_DRAW),this.positionAttribute=this.gl.getAttribLocation(this.program,"vertPosition"),this.gl.vertexAttribPointer(this.positionAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,0),this.gl.enableVertexAttribArray(this.positionAttribute),this.normalAttribute=this.gl.getAttribLocation(this.program,"vertNormal"),this.gl.vertexAttribPointer(this.normalAttribute,3,this.gl.FLOAT,!1,6*Float32Array.BYTES_PER_ELEMENT,3*Float32Array.BYTES_PER_ELEMENT),this.gl.enableVertexAttribArray(this.normalAttribute),this.projMatLoc=this.gl.getUniformLocation(this.program,"projMat"),this.viewMatLoc=this.gl.getUniformLocation(this.program,"viewMat"),this.worldMatLoc=this.gl.getUniformLocation(this.program,"worldMat"),this.posVecLoc=this.gl.getUniformLocation(this.program,"position"),this.dirVecLoc=this.gl.getUniformLocation(this.program,"direction"),this.radiusLoc=this.gl.getUniformLocation(this.program,"radius"),this.baseColourLoc=this.gl.getUniformLocation(this.program,"baseColour");var s=a.getPerspectiveProjectionMatrix(Math.PI/180*45,this.canvas.width/this.canvas.height,.1,this.cameraDist+2e3),h=a.getTranslationMatrix(0,0,-this.cameraDist),l=a.getIdentityMatrix();this.gl.uniformMatrix4fv(this.projMatLoc,!1,s),this.gl.uniformMatrix4fv(this.viewMatLoc,!1,h),this.gl.uniformMatrix4fv(this.worldMatLoc,!1,l)}else console.error("ERROR validating program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR linking program",this.gl.getProgramInfoLog(this.program));else console.error("ERROR compiling fragment shader",this.gl.getShaderInfoLog(n));else console.error("ERROR compiling vertex shader",this.gl.getShaderInfoLog(i))}else console.error("WebGL not supported")}return t.prototype.render=function(t){var e=this,i=t.getAgents();this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT),i.forEach((function(t){var i=t.getPosition();e.gl.uniform2f(e.posVecLoc,i.x,i.y);var n=t.getDirection().normalise();0==n.x&&0==n.y&&(n=new s(1,0)),e.gl.uniform2f(e.dirVecLoc,n.x,n.y),e.gl.uniform1f(e.radiusLoc,t.Radius);var o=t.getColour();e.gl.uniform3f(e.baseColourLoc,o.r/255,o.g/255,o.b/255),e.gl.drawElements(e.gl.TRIANGLES,c.indices.length,e.gl.UNSIGNED_SHORT,0)})),this.gl.uniform2f(this.posVecLoc,0,0),this.gl.uniform2f(this.dirVecLoc,1,0),this.gl.uniform1f(this.radiusLoc,1),this.gl.uniform3f(this.baseColourLoc,.2,.2,.2),this.gl.drawElements(this.gl.TRIANGLES,6,this.gl.UNSIGNED_SHORT,c.indices.length*Uint16Array.BYTES_PER_ELEMENT)},t}(),l=function(){function t(t){this._agents=t,this._root=this.constructTree(this._agents,!0)}return t.prototype.update=function(t){this._agents=t,this._root=this.constructTree(this._agents,!0)},t.prototype.getAll=function(){return this._agents},t.prototype.getNeighboursInRangeRectilinear=function(t,e){var i=t.getPosition().x-e,n=t.getPosition().y-e,o=t.getPosition().x+e,r=t.getPosition().y+e;return this.rangeSearch(this._root,i,n,o,r,!0).filter((function(e){return e.Id!==t.Id}))},t.prototype.getNeighboursInRangeEuclidean=function(t,e){return this.getNeighboursInRangeRectilinear(t,e).filter((function(i){return t.getPosition().subtract(i.getPosition()).magnitudeSqrd()<=Math.pow(e,2)}))},t.prototype.forEach=function(t){this._agents.forEach(t)},t.prototype.constructTree=function(t,e){if(0===t.length)return null;var i=Math.floor(t.length/2),n=e?t.sort((function(t,e){return t.getPosition().x-e.getPosition().x})):t.sort((function(t,e){return t.getPosition().y-e.getPosition().y})),o=this.constructTree(n.slice(0,i),!e),r=this.constructTree(n.slice(i+1,t.length),!e);return{agent:t[i],left:o,right:r}},t.prototype.rangeSearch=function(t,e,i,n,o,r){if(null==t)return[];var s=[];return r?(t.agent.getPosition().x<=n&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().x>=e&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))):(t.agent.getPosition().y<=o&&(s=s.concat(this.rangeSearch(t.right,e,i,n,o,!r))),t.agent.getPosition().y>=i&&(s=s.concat(this.rangeSearch(t.left,e,i,n,o,!r)))),t.agent.getPosition().x>=e&&t.agent.getPosition().y>=i&&t.agent.getPosition().x<=n&&t.agent.getPosition().y<=o&&s.push(t.agent),s},t}(),g=function(){function t(t,e,i){this.Id=t,this.Radius=20,this._position=e,this._direction=i(e),this._getPreferredVelocity=i,this._isDone=!1}return t.prototype.getPosition=function(){return this._position},t.prototype.getDirection=function(){return this._direction},t.prototype.isDone=function(){return this._isDone},t}(),d=function(){function t(){}return t.FromHsv=function(t,e,i){var n=(t*=6)-Math.floor(t),o=i*(1-e),r=i*(1-e*n),s=i*(1-e*(1-n));return 0<=t&&t<1?{r:255*i,g:255*s,b:255*o}:1<=t&&t<2?{r:255*r,g:255*i,b:255*o}:2<=t&&t<3?{r:255*o,g:255*i,b:255*s}:3<=t&&t<4?{r:255*o,g:255*r,b:255*i}:4<=t&&t<5?{r:255*s,g:255*o,b:255*i}:5<=t&&t<6?{r:255*i,g:255*o,b:255*r}:{r:0,g:0,b:0}},t.White={r:255,g:255,b:255},t.Red={r:255,g:0,b:0},t.Green={r:0,g:255,b:0},t}(),f=(n=function(t,e){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){function i(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return f(e,t),e.prototype.getColour=function(){return this._isDone?d.White:d.Green},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/3e3;i.magnitudeSqrd()<.1?this._isDone=!0:(this._direction=i,this._position=this._position.add(i.multiply(n)))}},e}(g),m=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),v=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._isStuck=!1,o}return m(e,t),e.prototype.getColour=function(){return this._isDone?d.White:this._isStuck?d.Red:d.Green},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/3e3;if(i.magnitudeSqrd()<.1)this._isDone=!0;else{this._direction=i.normalise();var o=this._position.add(this._direction.multiply(25));this._isStuck=!1;for(var r=0;r<e.length;r++)if(this.collides(e[r],o))return void(this._isStuck=!0);this._direction=i,this._position=this._position.add(this._direction.multiply(n))}}},e.prototype.collides=function(t,e){return t.getPosition().subtract(e).magnitudeSqrd()<(t.Radius+this.Radius)*(t.Radius+this.Radius)},e}(g),y=function(){function t(){}return t.getClosestPointOnLine=function(t,e,i){var n=e.normalise(),o=i.subtract(t).dot(n);return t.add(n.multiply(o))},t.getFirstRayCircleIntersection=function(t,e,i,n){var o=i.subtract(t),r=n.dot(n),s=2*n.dot(o),a=o.dot(o)-Math.pow(e,2),c=Math.pow(s,2)-4*r*a;if(c<0)return 1/0;var u=(-s-Math.sqrt(c))/2*r;return u<0?1/0:u},t.getLineLineIntersection=function(t,e,i,n){var o=i.subtract(t),r=n.x*e.y-n.y*e.x,s=(o.y*n.x-o.y*n.y)/r;return t.add(e.multiply(s))},t}(),w=function(){function t(t,e,i){this.vertex=t,this.tangent1=e,this.tangent2=i}return t.prototype.contains=function(t){var e=(this.tangent1.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent1.y-this.vertex.y)*(t.x-this.vertex.x),i=(this.tangent2.x-this.vertex.x)*(t.y-this.vertex.y)-(this.tangent2.y-this.vertex.y)*(t.x-this.vertex.x);return e>0&&i<0},t}(),_=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),x=function(t){function e(e,i,n){var o=t.call(this,e,i,n)||this;return o._colour=d.Green,o}return _(e,t),e.prototype.getColour=function(){return this._colour},e.prototype.update=function(t,e){if(!this._isDone){var i=this._getPreferredVelocity(this._position),n=60*t/4e3;if(i.magnitudeSqrd()<.1)return this._isDone=!0,this._direction=new s(0,0),void(this._colour=d.White);for(var o,r,a=!0,c=0;c<e.length;c++)if(null!=(_=this.getVelocityObstacle(e[c]))&&_.contains(i)){a=!1,o=_,r=c;break}if(a)return this._direction=i,this._position=this._position.add(this._direction.multiply(n)),void(this._colour=d.Green);if(null!=o){var u=y.getClosestPointOnLine(o.vertex,o.tangent1,i),h=y.getClosestPointOnLine(o.vertex,o.tangent2,i),l=!0,g=!0;for(c=0;c<e.length;c++)c!=r&&(null!=(_=this.getVelocityObstacle(e[c]))&&_.contains(u)&&(l=!1),null!=_&&_.contains(u)&&(g=!1));if(l&&g?u.subtract(i).magnitudeSqrd()<h.subtract(i).magnitudeSqrd()?this._direction=u:this._direction=h:l?this._direction=u:g&&(this._direction=h),l||g)return this._position=this._position.add(this._direction.multiply(n)),void this.setColour(i)}var f=1/0,p=new s(0,0);for(c=0;c<100;c++){for(var m=new s(0,0).sample(1),v=1/0,w=0;w<e.length;w++){var _,x=e[w];if(null==(_=this.getVelocityObstacle(x))||_.contains(m)){var b=y.getFirstRayCircleIntersection(x.getPosition().add(x.getDirection()),this.Radius+x.Radius,this._position,m.subtract(x.getDirection()));b<v&&(v=b)}}var M=100/v+i.subtract(m).magnitude();M<f&&(f=M,p=m)}this._direction=p,this._position=this._position.add(this._direction.multiply(n)),this.setColour(i)}},e.prototype.getVelocityObstacle=function(t){var e=t.getDirection(),i=t.getPosition().subtract(this._position).add(e),n=t.Radius+this.Radius,o=e.subtract(i),r=o.magnitude();if(r<n)return null;var a=Math.acos(n/r),c=Math.atan2(o.y,o.x),u=c+a,h=new s(i.x+n*Math.cos(u),i.y+n*Math.sin(u)),l=c-a,g=new s(i.x+n*Math.cos(l),i.y+n*Math.sin(l));return new w(e,h,g)},e.prototype.setColour=function(t){var e=t.subtract(this._direction).magnitude(),i=e>1?0:(1-e)/3;this._colour=d.FromHsv(i,1,1)},e}(g),b=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),M=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return b(e,t),e.prototype.getVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=e.add(i).divide(2),o=t.getPosition().subtract(this._position).add(i),r=t.Radius+this.Radius,a=i.subtract(o),c=a.magnitude();if(c<r)return null;var u=Math.acos(r/c),h=Math.atan2(a.y,a.x),l=h+u,g=new s(o.x+r*Math.cos(l),o.y+r*Math.sin(l)),d=h-u,f=new s(o.x+r*Math.cos(d),o.y+r*Math.sin(d));return new w(n,g,f)},e}(x),P=function(){var t=function(e,i){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(e,i)};return function(e,i){function n(){this.constructor=e}t(e,i),e.prototype=null===i?Object.create(i):(n.prototype=i.prototype,new n)}}(),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return P(e,t),e.prototype.getVelocityObstacle=function(t){var e=this.getDirection(),i=t.getDirection(),n=i,o=e.add(i).divide(2),r=t.getPosition().subtract(this._position),a=r.add(i),c=t.Radius+this.Radius,u=i.subtract(a),h=u.magnitude();if(h<c)return null;var l,g=Math.acos(c/h),d=Math.atan2(u.y,u.x),f=d+g,p=new s(a.x+c*Math.cos(f),a.y+c*Math.sin(f)),m=d-g,v=new s(a.x+c*Math.cos(m),a.y+c*Math.sin(m));return l=(r.x-i.x)*(e.y-i.y)-(r.y-i.y)*(e.x-i.x)>0?y.getLineLineIntersection(n,p,o,v):y.getLineLineIntersection(n,v,o,p),new w(l,p,v)},e}(x),E=function(){function t(){}return t.getAgent=function(t,e,i,n){switch(t){case"BasicAgent":return new p(e,i,n);case"StopAgent":return new v(e,i,n);case"VOAgent":return new x(e,i,n);case"RVOAgent":return new M(e,i,n);case"HRVOAgent":return new R(e,i,n);default:throw new Error('Unknown agent type "'+t+'"')}},t}(),A=function(){function t(t,e){this.Position=t,this.Radius=e}return t.prototype.getVelocityObstacle=function(t){throw new Error("Method not implemented.")},t}(),L=function(){function t(t,e){this.Start=t,this.End=e}return t.prototype.getVelocityObstacle=function(t){throw new Error("Method not implemented.")},t}(),S=function(){function t(){}return t.getConfiguration=function(t,e,i,n,o){switch(t){case"RandomToRandom":return this.RandomToRandom(e,i,n,o);case"RandomToLine":return this.RandomToLine(e,i,n,o);case"CircleToCircle":return this.CircleToCircle(e,i,n,o);case"GridToGrid":return this.GridToGrid(e,i,n,o);case"CrowdThroughBollards":return this.CrowdThroughBollards(e,i,n,o);default:throw new Error('Unknown configuration type "'+t+'"')}},t.RandomToRandom=function(t,e,i,n){for(var o=[],r=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),a=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),c=0;c<n;c++){var u=E.getAgent(t,c,r[c],this.preferredVelocityFromGoalPosition(a[c]));o.push(u)}return{agents:o,obstacles:[]}},t.RandomToLine=function(t,e,i,n){for(var o=[],r=this.poissonDiskSample(e,i,n,50).map((function(t){return t.subtract(new s(e/2,i/2))})),a=0;a<n;a++){var c=E.getAgent(t,a,r[a],this.preferredVelocityFromGoalPosition(new s(((a+1)/(n+1)-.5)*e,0)));o.push(c)}return{agents:o,obstacles:[]}},t.CircleToCircle=function(t,e,i,n){for(var o=[],r=i/2-25,a=0;a<n;a++){var c=2*Math.PI*a/n,u=E.getAgent(t,a,new s(r*Math.cos(c),r*Math.sin(c)),this.preferredVelocityFromGoalPosition(new s(r*Math.cos(c+Math.PI),r*Math.sin(c+Math.PI))));o.push(u)}return{agents:o,obstacles:[]}},t.GridToGrid=function(t,e,i,n){for(var o=[],r=Math.ceil(Math.sqrt(n/2)),a=90,c=30-e/2,u=(r-1)/2*a,h=0;h<n;h++){var l=Math.floor(h/2),g=Math.floor(l/r),d=l%r;if(h%2==0){var f=E.getAgent(t,h,new s(c+(r-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new s(-c-d*a,u-g*a)));o.push(f)}else f=E.getAgent(t,h,new s(-c-(r-1-d)*a,u-g*a),this.preferredVelocityFromGoalPosition(new s(c+d*a,u-g*a))),o.push(f)}return{agents:o,obstacles:[]}},t.CrowdThroughBollards=function(t,e,i,n){for(var o=[],r=this.poissonDiskSample(e/2-200,i,n,80).map((function(t){return t.subtract(new s(e/2,i/2))})),a=0;a<n;a++){var c=E.getAgent(t,a,r[a],this.preferredVelocityFromGoalPosition(r[a].add(new s(e/2+200,0))));o.push(c)}var u=[];for(a=0;a<5;a++)u.push(new A(new s(0,120*a-240),20));return u.push(new L(new s(-e/2,i/2),new s(e/2,i/2))),u.push(new L(new s(-e/2,-i/2),new s(e/2,-i/2))),{agents:o,obstacles:u}},t.preferredVelocityFromGoalPosition=function(t){return function(e){var i=t.subtract(e);return i.magnitudeSqrd()<1?i:i.normalise()}},t.poissonDiskSample=function(t,e,i,n){for(var o=[],r=function(){for(var i,r=!0;r;)r=!1,i=new s(t*Math.random(),e*Math.random()),o.forEach((function(t){i.subtract(t).magnitudeSqrd()<Math.pow(n,2)&&(r=!0)}));o.push(i)},a=0;a<i;a++)r();return o},t}(),T=function(){function t(t){this.canvas=t,this.context=this.canvas.getContext("2d"),this.clear()}return t.prototype.clear=function(){this.context.setTransform(1,0,0,1,0,0),this.context.fillStyle="rgb(135, 194, 250)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.setTransform(1,0,0,1,this.canvas.width/2,this.canvas.height/2),this.context.fillStyle="rgb(51, 51, 51)",this.context.fillRect(.55*-this.canvas.width,.55*-this.canvas.height,1.1*this.canvas.width,1.1*this.canvas.height)},t.prototype.render=function(t){var e=this;t.getAgents().forEach((function(t){e.drawAgent(t)}))},t.prototype.drawAgent=function(t){var e=t.getPosition(),i=t.getColour();this.context.beginPath(),this.context.fillStyle="rgb("+i.r+", "+i.g+", "+i.b+")",this.context.fillRect(e.x,-e.y,1,1)},t}(),I=document.getElementById("config"),D=document.getElementById("agentType"),O=document.getElementById("range"),C=document.getElementById("numberOfAgents"),B=document.getElementById("canvas2d"),F=document.getElementById("canvas3d"),V=document.getElementById("canvasTrace"),U=document.getElementById("framerate"),j=document.getElementById("playButton"),N=document.getElementById("stepButton"),G=new o(new l([])),Y=new r(B),k=new h(F),q=new T(V),X=Y,H=!1,W=200;function z(){this.reconfigure();var t=0,e=0,i=0;window.requestAnimationFrame((function n(o){var r=o-t;t=o,H&&G.update(r,W),X.render(G),i++,o-e>=250&&(U.textContent="FPS: "+(1e3*i/(o-e)).toFixed(1),i=0,e=o),window.requestAnimationFrame(n)}))}function K(t){switch(t){case"2D":return document.getElementById("view2d").classList.add("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.remove("selected"),X=Y,B.style.display="block",F.style.display="none",void(V.style.display="none");case"3D":return document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.add("selected"),document.getElementById("viewTrace").classList.remove("selected"),X=k,B.style.display="none",F.style.display="block",void(V.style.display="none");case"Trace":return document.getElementById("view2d").classList.remove("selected"),document.getElementById("view3d").classList.remove("selected"),document.getElementById("viewTrace").classList.add("selected"),X=q,B.style.display="none",F.style.display="none",void(V.style.display="block");default:throw new Error('Unknown view "'+t+'"')}}function Z(){(H=!H)?(j.textContent="Pause",N.disabled=!0):(j.textContent="Play",N.disabled=!1)}function J(){G.update(1e3/60,W)}function Q(){var t,e;H&&this.playPause();var i=I.value,n=D.value;W=null!==(t=parseInt(O.value))&&void 0!==t?t:0;var o=null!==(e=parseInt(C.value))&&void 0!==e?e:0;G.init(S.getConfiguration(i,n,B.width,B.height,o)),q.clear()}}},e={};function i(n){if(e[n])return e[n].exports;var o=e[n]={exports:{}};return t[n](o,o.exports,i),o.exports}return i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(327)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,